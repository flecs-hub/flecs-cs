// <auto-generated>
//  This code was generated by the following tool on 2022-08-09 00:47:49 GMT+00:00:
//      https://github.com/bottlenoselabs/c2cs (v3.2.8.0)
//      
//  Changes to this file may cause incorrect behavior and will be lost if the code is
//      regenerated. To extend or add functionality use a partial class in a new file.
// </auto-generated>
// ReSharper disable All

#nullable enable
#pragma warning disable 1591
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using static flecs_hub.flecs.Runtime;

namespace flecs_hub
{
    public static unsafe partial class flecs
    {
        private const string LibraryName = "flecs";

        #region API

        // Function @ meta.h:583:14
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_vector_init(ecs_world_t* world, ecs_vector_desc_t* desc);

        // Function @ os_api.h:468:6
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_os_has_heap();

        // Function @ flecs.h:3963:10
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_id_t ecs_field_id(ecs_iter_t* it, int index);

        // Function @ meta.h:398:6
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_meta_is_collection(ecs_meta_cursor_t* cursor);

        // Function @ flecs.h:1468:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_run_aperiodic(ecs_world_t* world, ecs_flags32_t flags);

        // Function @ sparse.h:110:10
        //	aarch64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-pc-windows-msvc (flecs\private\sparse.h)
        //	x86_64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-pc-windows-msvc (flecs\private\sparse.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong flecs_sparse_last_id(ecs_sparse_t* sparse);

        // Function @ meta.h:597:14
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_struct_init(ecs_world_t* world, ecs_struct_desc_t* desc);

        // Function @ flecs.h:1855:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_delete_with(ecs_world_t* world, ecs_id_t id);

        // Function @ flecs.h:2341:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_id_in_use(ecs_world_t* world, ecs_id_t id);

        // Function @ flecs.h:4543:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_table_t* ecs_table_get_storage_table(ecs_table_t* table);

        // Function @ flecs.h:2365:13
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_get_symbol(ecs_world_t* world, ecs_entity_t entity);

        // Function @ flecs.h:4552:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_table_storage_to_type_index(ecs_table_t* table, int index);

        // Function @ strbuf.h:131:6
        //	aarch64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-pc-windows-msvc (flecs\private\strbuf.h)
        //	x86_64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-pc-windows-msvc (flecs\private\strbuf.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_strbuf_appendstr_zerocpy(ecs_strbuf_t* buffer, CString str);

        // Function @ flecs.h:2080:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_modified_id(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id);

        // Function @ map.h:147:6
        //	aarch64-apple-darwin (flecs/private/map.h)
        //	x86_64-pc-windows-msvc (flecs\private\map.h)
        //	x86_64-apple-darwin (flecs/private/map.h)
        //	x86_64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-pc-windows-msvc (flecs\private\map.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_map_has(ecs_map_t* map, ecs_map_key_t key);

        // Function @ flecs.h:1829:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_clear(ecs_world_t* world, ecs_entity_t entity);

        // Function @ flecs.h:4593:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_table_t* ecs_table_remove_id(ecs_world_t* world, ecs_table_t* table, ecs_id_t id);

        // Function @ meta.h:506:13
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_meta_get_string(ecs_meta_cursor_t* cursor);

        // Function @ flecs.h:2492:7
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_entity_str(ecs_world_t* world, ecs_entity_t entity);

        // Function @ flecs.h:2938:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_term_is_initialized(ecs_term_t* term);

        // Function @ hashmap.h:55:6
        //	aarch64-apple-darwin (flecs/private/hashmap.h)
        //	x86_64-pc-windows-msvc (flecs\private\hashmap.h)
        //	x86_64-apple-darwin (flecs/private/hashmap.h)
        //	x86_64-unknown-linux-gnu (flecs/private/hashmap.h)
        //	aarch64-unknown-linux-gnu (flecs/private/hashmap.h)
        //	aarch64-pc-windows-msvc (flecs\private\hashmap.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void flecs_hashmap_fini(ecs_hashmap_t* map);

        // Function @ os_api.h:462:7
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void* ecs_os_memdup(void* src, ecs_size_t size);

        // Function @ flecs.h:3562:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_observer_init(ecs_world_t* world, ecs_observer_desc_t* desc);

        // Function @ flecs.h:4694:7
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void* ecs_record_get_column(ecs_record_t* r, int column, ulong c_size);

        // Function @ meta.h:422:5
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_meta_set_bool(ecs_meta_cursor_t* cursor, CBool value);

        // Function @ sparse.h:235:6
        //	aarch64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-pc-windows-msvc (flecs\private\sparse.h)
        //	x86_64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-pc-windows-msvc (flecs\private\sparse.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void flecs_sparse_set_size(ecs_sparse_t* sparse, int elem_count);

        // Function @ sparse.h:144:6
        //	aarch64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-pc-windows-msvc (flecs\private\sparse.h)
        //	x86_64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-pc-windows-msvc (flecs\private\sparse.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool flecs_sparse_exists(ecs_sparse_t* sparse, ulong id);

        // Function @ http.h:127:6
        //	aarch64-apple-darwin (flecs/addons/http.h)
        //	x86_64-pc-windows-msvc (flecs\addons\http.h)
        //	x86_64-apple-darwin (flecs/addons/http.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-pc-windows-msvc (flecs\addons\http.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_http_server_fini(ecs_http_server_t* server);

        // Function @ rules.h:114:9
        //	aarch64-apple-darwin (flecs/addons/rules.h)
        //	x86_64-pc-windows-msvc (flecs\addons\rules.h)
        //	x86_64-apple-darwin (flecs/addons/rules.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/rules.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/rules.h)
        //	aarch64-pc-windows-msvc (flecs\addons\rules.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_rule_find_var(ecs_rule_t* rule, CString name);

        // Function @ flecs.h:2309:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_get_typeid(ecs_world_t* world, ecs_id_t id);

        // Function @ pipeline.h:130:6
        //	aarch64-apple-darwin (flecs/addons/pipeline.h)
        //	x86_64-pc-windows-msvc (flecs\addons\pipeline.h)
        //	x86_64-apple-darwin (flecs/addons/pipeline.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/pipeline.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/pipeline.h)
        //	aarch64-pc-windows-msvc (flecs\addons\pipeline.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_set_time_scale(ecs_world_t* world, float scale);

        // Function @ sparse.h:305:6
        //	aarch64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-pc-windows-msvc (flecs\private\sparse.h)
        //	x86_64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-pc-windows-msvc (flecs\private\sparse.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void flecs_sparse_set_generation(ecs_sparse_t* sparse, ulong id);

        // Function @ meta.h:408:14
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_meta_get_unit(ecs_meta_cursor_t* cursor);

        // Function @ os_api.h:442:6
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_sleepf(double t);

        // Function @ flecs.h:3234:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_filter_next_instanced(ecs_iter_t* it);

        // Function @ snapshot.h:61:6
        //	aarch64-apple-darwin (flecs/addons/snapshot.h)
        //	x86_64-pc-windows-msvc (flecs\addons\snapshot.h)
        //	x86_64-apple-darwin (flecs/addons/snapshot.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/snapshot.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/snapshot.h)
        //	aarch64-pc-windows-msvc (flecs\addons\snapshot.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_snapshot_restore(ecs_world_t* world, ecs_snapshot_t* snapshot);

        // Function @ flecs.h:2258:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_table_t* ecs_get_table(ecs_world_t* world, ecs_entity_t entity);

        // Function @ rules.h:185:7
        //	aarch64-apple-darwin (flecs/addons/rules.h)
        //	x86_64-pc-windows-msvc (flecs\addons\rules.h)
        //	x86_64-apple-darwin (flecs/addons/rules.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/rules.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/rules.h)
        //	aarch64-pc-windows-msvc (flecs\addons\rules.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_rule_str(ecs_rule_t* rule);

        // Function @ pipeline.h:140:6
        //	aarch64-apple-darwin (flecs/addons/pipeline.h)
        //	x86_64-pc-windows-msvc (flecs\addons\pipeline.h)
        //	x86_64-apple-darwin (flecs/addons/pipeline.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/pipeline.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/pipeline.h)
        //	aarch64-pc-windows-msvc (flecs\addons\pipeline.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_reset_clock(ecs_world_t* world);

        // Function @ flecs.h:2802:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_set_with(ecs_world_t* world, ecs_id_t id);

        // Function @ api_support.h:49:6
        //	aarch64-apple-darwin (flecs/private/api_support.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_support.h)
        //	x86_64-apple-darwin (flecs/private/api_support.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_support.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_support.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_support.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_default_ctor(void* ptr, int count, ecs_type_info_t* ctx);

        // Function @ flecs_pinvoke.h:26:26
        //	aarch64-apple-darwin (/Users/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	x86_64-pc-windows-msvc (D:\a\flecs-cs\flecs-cs\src\c\production\flecs\include\flecs_pinvoke.h)
        //	x86_64-apple-darwin (/Users/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	x86_64-unknown-linux-gnu (/home/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	aarch64-unknown-linux-gnu (/home/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	aarch64-pc-windows-msvc (D:\a\flecs-cs\flecs-cs\src\c\production\flecs\include\flecs_pinvoke.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t pinvoke_EcsChildOf();

        // Function @ doc.h:133:13
        //	aarch64-apple-darwin (flecs/addons/doc.h)
        //	x86_64-pc-windows-msvc (flecs\addons\doc.h)
        //	x86_64-apple-darwin (flecs/addons/doc.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/doc.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/doc.h)
        //	aarch64-pc-windows-msvc (flecs\addons\doc.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_doc_get_detail(ecs_world_t* world, ecs_entity_t entity);

        // Function @ flecs.h:2942:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_term_match_this(ecs_term_t* term);

        // Function @ api_support.h:56:7
        //	aarch64-apple-darwin (flecs/private/api_support.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_support.h)
        //	x86_64-apple-darwin (flecs/private/api_support.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_support.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_support.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_support.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_vasprintf(CString fmt, void* args);

        // Function @ flecs.h:4044:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_iter_find_column(ecs_iter_t* it, ecs_id_t id);

        // Function @ flecs.h:3027:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_id_is_pair(ecs_id_t id);

        // Function @ os_api.h:411:6
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_os_dbg(CString file, int line, CString msg);

        // Function @ app.h:77:5
        //	aarch64-apple-darwin (flecs/addons/app.h)
        //	x86_64-pc-windows-msvc (flecs\addons\app.h)
        //	x86_64-apple-darwin (flecs/addons/app.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/app.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/app.h)
        //	aarch64-pc-windows-msvc (flecs\addons\app.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_app_run_frame(ecs_world_t* world, ecs_app_desc_t* desc);

        // Function @ map.h:184:9
        //	aarch64-apple-darwin (flecs/private/map.h)
        //	x86_64-pc-windows-msvc (flecs\private\map.h)
        //	x86_64-apple-darwin (flecs/private/map.h)
        //	x86_64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-pc-windows-msvc (flecs\private\map.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_map_remove(ecs_map_t* map, ecs_map_key_t key);

        // Function @ doc.h:43:6
        //	aarch64-apple-darwin (flecs/addons/doc.h)
        //	x86_64-pc-windows-msvc (flecs\addons\doc.h)
        //	x86_64-apple-darwin (flecs/addons/doc.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/doc.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/doc.h)
        //	aarch64-pc-windows-msvc (flecs\addons\doc.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_doc_set_name(ecs_world_t* world, ecs_entity_t entity, CString name);

        // Function @ flecs.h:2914:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_term_next(ecs_iter_t* it);

        // Function @ flecs.h:4452:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_search_offset(ecs_world_t* world, ecs_table_t* table, int offset, ecs_id_t id, ecs_id_t* id_out);

        // Function @ flecs.h:3988:8
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong ecs_field_size(ecs_iter_t* it, int index);

        // Function @ stats.h:157:6
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_world_stats_get(ecs_world_t* world, ecs_world_stats_t* stats);

        // Function @ map.h:107:6
        //	aarch64-apple-darwin (flecs/private/map.h)
        //	x86_64-pc-windows-msvc (flecs\private\map.h)
        //	x86_64-apple-darwin (flecs/private/map.h)
        //	x86_64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-pc-windows-msvc (flecs\private\map.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_map_fini(ecs_map_t* map);

        // Function @ parser.h:106:7
        //	aarch64-apple-darwin (flecs/addons/parser.h)
        //	x86_64-pc-windows-msvc (flecs\addons\parser.h)
        //	x86_64-apple-darwin (flecs/addons/parser.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/parser.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/parser.h)
        //	aarch64-pc-windows-msvc (flecs\addons\parser.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_parse_term(ecs_world_t* world, CString name, CString expr, CString ptr, ecs_term_t* term_out);

        // Function @ doc.h:155:13
        //	aarch64-apple-darwin (flecs/addons/doc.h)
        //	x86_64-pc-windows-msvc (flecs\addons\doc.h)
        //	x86_64-apple-darwin (flecs/addons/doc.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/doc.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/doc.h)
        //	aarch64-pc-windows-msvc (flecs\addons\doc.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_doc_get_color(ecs_world_t* world, ecs_entity_t entity);

        // Function @ flecs.h:4547:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_table_type_to_storage_index(ecs_table_t* table, int index);

        // Function @ flecs.h:3723:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_iter_set_var(ecs_iter_t* it, int var_id, ecs_entity_t entity);

        // Function @ json.h:191:5
        //	aarch64-apple-darwin (flecs/addons/json.h)
        //	x86_64-pc-windows-msvc (flecs\addons\json.h)
        //	x86_64-apple-darwin (flecs/addons/json.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-pc-windows-msvc (flecs\addons\json.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_entity_to_json_buf(ecs_world_t* world, ecs_entity_t entity, ecs_strbuf_t* buf_out, ecs_entity_to_json_desc_t* desc);

        // Function @ flecs.h:2201:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_ensure(ecs_world_t* world, ecs_entity_t entity);

        // Function @ stats.h:169:6
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_world_stats_reduce_last(ecs_world_stats_t* stats, ecs_world_stats_t* old, int count);

        // Function @ flecs.h:3783:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_table_t* ecs_iter_get_var_as_table(ecs_iter_t* it, int var_id);

        // Function @ doc.h:161:6
        //	aarch64-apple-darwin (flecs/addons/doc.h)
        //	x86_64-pc-windows-msvc (flecs\addons\doc.h)
        //	x86_64-apple-darwin (flecs/addons/doc.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/doc.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/doc.h)
        //	aarch64-pc-windows-msvc (flecs\addons\doc.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void FlecsDocImport(ecs_world_t* world);

        // Function @ http.h:147:6
        //	aarch64-apple-darwin (flecs/addons/http.h)
        //	x86_64-pc-windows-msvc (flecs\addons\http.h)
        //	x86_64-apple-darwin (flecs/addons/http.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-pc-windows-msvc (flecs\addons\http.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_http_server_dequeue(ecs_http_server_t* server, float delta_time);

        // Function @ meta.h:434:5
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_meta_set_int(ecs_meta_cursor_t* cursor, long value);

        // Function @ timer.h:133:13
        //	aarch64-apple-darwin (flecs/addons/timer.h)
        //	x86_64-pc-windows-msvc (flecs\addons\timer.h)
        //	x86_64-apple-darwin (flecs/addons/timer.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/timer.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/timer.h)
        //	aarch64-pc-windows-msvc (flecs\addons\timer.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern float ecs_get_interval(ecs_world_t* world, ecs_entity_t tick_source);

        // Function @ flecs.h:3344:12
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_iter_t ecs_query_iter(ecs_world_t* world, ecs_query_t* query);

        // Function @ http.h:137:5
        //	aarch64-apple-darwin (flecs/addons/http.h)
        //	x86_64-pc-windows-msvc (flecs\addons\http.h)
        //	x86_64-apple-darwin (flecs/addons/http.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-pc-windows-msvc (flecs\addons\http.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_http_server_start(ecs_http_server_t* server);

        // Function @ flecs.h:1808:10
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_id_t ecs_make_pair(ecs_entity_t first, ecs_entity_t second);

        // Function @ flecs.h:2866:15
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t* ecs_get_lookup_path(ecs_world_t* world);

        // Function @ strbuf.h:162:6
        //	aarch64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-pc-windows-msvc (flecs\private\strbuf.h)
        //	x86_64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-pc-windows-msvc (flecs\private\strbuf.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_strbuf_reset(ecs_strbuf_t* buffer);

        // Function @ flecs_cpp.h:71:14
        //	aarch64-apple-darwin (flecs/addons/flecs_cpp.h)
        //	x86_64-pc-windows-msvc (flecs\addons\flecs_cpp.h)
        //	x86_64-apple-darwin (flecs/addons/flecs_cpp.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/flecs_cpp.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/flecs_cpp.h)
        //	aarch64-pc-windows-msvc (flecs\addons\flecs_cpp.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_cpp_component_register(ecs_world_t* world, ecs_entity_t id, CString name, CString symbol, ecs_size_t size, ecs_size_t alignment, CBool implicit_name);

        // Function @ flecs.h:3303:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_query_fini(ecs_query_t* query);

        // Function @ strbuf.h:197:9
        //	aarch64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-pc-windows-msvc (flecs\private\strbuf.h)
        //	x86_64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-pc-windows-msvc (flecs\private\strbuf.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_strbuf_written(ecs_strbuf_t* buffer);

        // Function @ flecs.h:4496:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_search_relation(ecs_world_t* world, ecs_table_t* table, int offset, ecs_id_t id, ecs_entity_t rel, ecs_flags32_t flags, ecs_entity_t* subject_out, ecs_id_t* id_out, ecs_table_record_t** tr_out);

        // Function @ api_support.h:62:7
        //	aarch64-apple-darwin (flecs/private/api_support.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_support.h)
        //	x86_64-apple-darwin (flecs/private/api_support.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_support.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_support.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_support.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_asprintf(CString fmt);

        // Function @ flecs.h:3358:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_query_next(ecs_iter_t* iter);

        // Function @ os_api.h:484:6
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_os_has_dl();

        // Function @ stats.h:277:6
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_pipeline_stats_get(ecs_world_t* world, ecs_entity_t pipeline, ecs_pipeline_stats_t* stats);

        // Function @ flecs.h:1354:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_dim(ecs_world_t* world, int entity_count);

        // Function @ timer.h:97:13
        //	aarch64-apple-darwin (flecs/addons/timer.h)
        //	x86_64-pc-windows-msvc (flecs\addons\timer.h)
        //	x86_64-apple-darwin (flecs/addons/timer.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/timer.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/timer.h)
        //	aarch64-pc-windows-msvc (flecs\addons\timer.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern float ecs_get_timeout(ecs_world_t* world, ecs_entity_t tick_source);

        // Function @ pipeline.h:75:14
        //	aarch64-apple-darwin (flecs/addons/pipeline.h)
        //	x86_64-pc-windows-msvc (flecs\addons\pipeline.h)
        //	x86_64-apple-darwin (flecs/addons/pipeline.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/pipeline.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/pipeline.h)
        //	aarch64-pc-windows-msvc (flecs\addons\pipeline.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_pipeline_init(ecs_world_t* world, ecs_pipeline_desc_t* desc);

        // Function @ os_api.h:278:6
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_os_fini();

        // Function @ module.h:53:14
        //	aarch64-apple-darwin (flecs/addons/module.h)
        //	x86_64-pc-windows-msvc (flecs\addons\module.h)
        //	x86_64-apple-darwin (flecs/addons/module.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/module.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/module.h)
        //	aarch64-pc-windows-msvc (flecs\addons\module.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_import_c(ecs_world_t* world, ecs_module_action_t module, CString module_name_c);

        // Function @ log.h:73:6
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_should_log(int level);

        // Function @ meta.h:483:6
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CChar ecs_meta_get_char(ecs_meta_cursor_t* cursor);

        // Function @ flecs.h:2004:21
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_record_t* ecs_read_begin(ecs_world_t* world, ecs_entity_t entity);

        // Function @ flecs.h:2615:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_lookup_child(ecs_world_t* world, ecs_entity_t parent, CString name);

        // Function @ flecs.h:2236:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_exists(ecs_world_t* world, ecs_entity_t entity);

        // Function @ flecs.h:1207:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_world_t* ecs_mini();

        // Function @ flecs.h:2580:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_count_id(ecs_world_t* world, ecs_id_t entity);

        // Function @ flecs.h:4212:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_is_deferred(ecs_world_t* world);

        // Function @ stats.h:339:6
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_metric_copy(ecs_metric_t* m, int dst, int src);

        // Function @ map.h:246:6
        //	aarch64-apple-darwin (flecs/private/map.h)
        //	x86_64-pc-windows-msvc (flecs\private\map.h)
        //	x86_64-apple-darwin (flecs/private/map.h)
        //	x86_64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-pc-windows-msvc (flecs\private\map.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_map_memory(ecs_map_t* map, int* allocd, int* used);

        // Function @ timer.h:147:6
        //	aarch64-apple-darwin (flecs/addons/timer.h)
        //	x86_64-pc-windows-msvc (flecs\addons\timer.h)
        //	x86_64-apple-darwin (flecs/addons/timer.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/timer.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/timer.h)
        //	aarch64-pc-windows-msvc (flecs\addons\timer.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_start_timer(ecs_world_t* world, ecs_entity_t tick_source);

        // Function @ flecs.h:3006:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_term_fini(ecs_term_t* term);

        // Function @ meta.h:413:13
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_meta_get_member(ecs_meta_cursor_t* cursor);

        // Function @ meta.h:359:19
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_meta_cursor_t ecs_meta_cursor(ecs_world_t* world, ecs_entity_t type, void* ptr);

        // Function @ flecs.h:4237:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_defer_suspend(ecs_world_t* world);

        // Function @ flecs_pinvoke.h:31:26
        //	aarch64-apple-darwin (/Users/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	x86_64-pc-windows-msvc (D:\a\flecs-cs\flecs-cs\src\c\production\flecs\include\flecs_pinvoke.h)
        //	x86_64-apple-darwin (/Users/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	x86_64-unknown-linux-gnu (/home/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	aarch64-unknown-linux-gnu (/home/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	aarch64-pc-windows-msvc (D:\a\flecs-cs\flecs-cs\src\c\production\flecs\include\flecs_pinvoke.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t pinvoke_EcsSlotOf();

        // Function @ os_api.h:414:6
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_os_trace(CString file, int line, CString msg);

        // Function @ flecs.h:2224:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_ensure_id(ecs_world_t* world, ecs_id_t id);

        // Function @ flecs.h:1701:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_add_id(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id);

        // Function @ hashmap.h:128:22
        //	aarch64-apple-darwin (flecs/private/hashmap.h)
        //	x86_64-pc-windows-msvc (flecs\private\hashmap.h)
        //	x86_64-apple-darwin (flecs/private/hashmap.h)
        //	x86_64-unknown-linux-gnu (flecs/private/hashmap.h)
        //	aarch64-unknown-linux-gnu (flecs/private/hashmap.h)
        //	aarch64-pc-windows-msvc (flecs\private\hashmap.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern flecs_hashmap_iter_t flecs_hashmap_iter(ecs_hashmap_t* map);

        // Function @ meta.h:464:5
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_meta_set_entity(ecs_meta_cursor_t* cursor, ecs_entity_t value);

        // Function @ sparse.h:230:17
        //	aarch64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-pc-windows-msvc (flecs\private\sparse.h)
        //	x86_64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-pc-windows-msvc (flecs\private\sparse.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong* flecs_sparse_ids(ecs_sparse_t* sparse);

        // Function @ strbuf.h:167:6
        //	aarch64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-pc-windows-msvc (flecs\private\strbuf.h)
        //	x86_64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-pc-windows-msvc (flecs\private\strbuf.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_strbuf_list_push(ecs_strbuf_t* buffer, CString list_open, CString separator);

        // Function @ flecs.h:3885:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_worker_next(ecs_iter_t* it);

        // Function @ flecs.h:4388:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_stage_is_async(ecs_world_t* stage);

        // Function @ module.h:77:14
        //	aarch64-apple-darwin (flecs/addons/module.h)
        //	x86_64-pc-windows-msvc (flecs\addons\module.h)
        //	x86_64-apple-darwin (flecs/addons/module.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/module.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/module.h)
        //	aarch64-pc-windows-msvc (flecs\addons\module.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_import_from_library(ecs_world_t* world, CString library_name, CString module_name);

        // Function @ app.h:87:5
        //	aarch64-apple-darwin (flecs/addons/app.h)
        //	x86_64-pc-windows-msvc (flecs\addons\app.h)
        //	x86_64-apple-darwin (flecs/addons/app.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/app.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/app.h)
        //	aarch64-pc-windows-msvc (flecs\addons\app.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_app_set_run_action(ecs_app_run_action_t callback);

        // Function @ http.h:167:13
        //	aarch64-apple-darwin (flecs/addons/http.h)
        //	x86_64-pc-windows-msvc (flecs\addons\http.h)
        //	x86_64-apple-darwin (flecs/addons/http.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-pc-windows-msvc (flecs\addons\http.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_http_get_header(ecs_http_request_t* req, CString name);

        // Function @ flecs.h:2014:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_read_end(ecs_record_t* @record);

        // Function @ flecs.h:3817:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_iter_var_is_constrained(ecs_iter_t* it, int var_id);

        // Function @ flecs.h:3425:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_query_orphaned(ecs_query_t* query);

        // Function @ app.h:64:5
        //	aarch64-apple-darwin (flecs/addons/app.h)
        //	x86_64-pc-windows-msvc (flecs\addons\app.h)
        //	x86_64-apple-darwin (flecs/addons/app.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/app.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/app.h)
        //	aarch64-pc-windows-msvc (flecs\addons\app.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_app_run(ecs_world_t* world, ecs_app_desc_t* desc);

        // Function @ strbuf.h:86:6
        //	aarch64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-pc-windows-msvc (flecs\private\strbuf.h)
        //	x86_64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-pc-windows-msvc (flecs\private\strbuf.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_strbuf_append(ecs_strbuf_t* buffer, CString fmt);

        // Function @ parser.h:47:13
        //	aarch64-apple-darwin (flecs/addons/parser.h)
        //	x86_64-pc-windows-msvc (flecs\addons\parser.h)
        //	x86_64-apple-darwin (flecs/addons/parser.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/parser.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/parser.h)
        //	aarch64-pc-windows-msvc (flecs\addons\parser.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_parse_digit(CString ptr, CString token);

        // Function @ expr.h:86:12
        //	aarch64-apple-darwin (flecs/addons/expr.h)
        //	x86_64-pc-windows-msvc (flecs\addons\expr.h)
        //	x86_64-apple-darwin (flecs/addons/expr.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/expr.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/expr.h)
        //	aarch64-pc-windows-msvc (flecs\addons\expr.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_size_t ecs_stresc(CString @out, ecs_size_t size, CChar delimiter, CString @in);

        // Function @ flecs.h:4524:19
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_type_t* ecs_table_get_type(ecs_table_t* table);

        // Function @ stats.h:332:6
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_metric_reduce_last(ecs_metric_t* m, int t, int count);

        // Function @ flecs.h:4295:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_get_stage_count(ecs_world_t* world);

        // Function @ parser.h:35:13
        //	aarch64-apple-darwin (flecs/addons/parser.h)
        //	x86_64-pc-windows-msvc (flecs\addons\parser.h)
        //	x86_64-apple-darwin (flecs/addons/parser.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/parser.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/parser.h)
        //	aarch64-pc-windows-msvc (flecs\addons\parser.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_parse_eol_and_whitespace(CString ptr);

        // Function @ flecs.h:4378:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_async_stage_free(ecs_world_t* stage);

        // Function @ flecs.h:3873:12
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_iter_t ecs_worker_iter(ecs_iter_t* it, int index, int count);

        // Function @ flecs.h:1599:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_entity_init(ecs_world_t* world, ecs_entity_desc_t* desc);

        // Function @ flecs.h:1576:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_new_w_id(ecs_world_t* world, ecs_id_t id);

        // Function @ stats.h:211:6
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_query_stats_reduce_last(ecs_query_stats_t* stats, ecs_query_stats_t* old, int count);

        // Function @ hashmap.h:123:6
        //	aarch64-apple-darwin (flecs/private/hashmap.h)
        //	x86_64-pc-windows-msvc (flecs\private\hashmap.h)
        //	x86_64-apple-darwin (flecs/private/hashmap.h)
        //	x86_64-unknown-linux-gnu (flecs/private/hashmap.h)
        //	aarch64-unknown-linux-gnu (flecs/private/hashmap.h)
        //	aarch64-pc-windows-msvc (flecs\private\hashmap.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void flecs_hashmap_copy(ecs_hashmap_t* src, ecs_hashmap_t* dst);

        // Function @ flecs.h:3686:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_iter_is_true(ecs_iter_t* it);

        // Function @ system.h:221:14
        //	aarch64-apple-darwin (flecs/addons/system.h)
        //	x86_64-pc-windows-msvc (flecs\addons\system.h)
        //	x86_64-apple-darwin (flecs/addons/system.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/system.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/system.h)
        //	aarch64-pc-windows-msvc (flecs\addons\system.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_query_t* ecs_system_get_query(ecs_world_t* world, ecs_entity_t system);

        // Function @ map.h:177:6
        //	aarch64-apple-darwin (flecs/private/map.h)
        //	x86_64-pc-windows-msvc (flecs\private\map.h)
        //	x86_64-apple-darwin (flecs/private/map.h)
        //	x86_64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-pc-windows-msvc (flecs\private\map.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_map_free(ecs_map_t* map);

        // Function @ flecs.h:2415:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_set_alias(ecs_world_t* world, ecs_entity_t entity, CString alias);

        // Function @ rules.h:102:9
        //	aarch64-apple-darwin (flecs/addons/rules.h)
        //	x86_64-pc-windows-msvc (flecs\addons\rules.h)
        //	x86_64-apple-darwin (flecs/addons/rules.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/rules.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/rules.h)
        //	aarch64-pc-windows-msvc (flecs\addons\rules.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_rule_var_count(ecs_rule_t* rule);

        // Function @ os_api.h:275:6
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_os_init();

        // Function @ flecs.h:2271:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_table_t* ecs_get_storage_table(ecs_world_t* world, ecs_entity_t entity);

        // Function @ flecs.h:3736:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_iter_set_var_as_table(ecs_iter_t* it, int var_id, ecs_table_t* table);

        // Function @ flecs.h:2996:12
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_term_t ecs_term_move(ecs_term_t* src);

        // Function @ stats.h:257:6
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_system_stats_repeat_last(ecs_system_stats_t* stats);

        // Function @ flecs.h:3463:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_query_entity_count(ecs_query_t* query);

        // Function @ flecs.h:3639:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_iter_next(ecs_iter_t* it);

        // Function @ os_api_impl.h:16:6
        //	aarch64-apple-darwin (flecs/addons/os_api_impl.h)
        //	x86_64-pc-windows-msvc (flecs\addons\os_api_impl.h)
        //	x86_64-apple-darwin (flecs/addons/os_api_impl.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/os_api_impl.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/os_api_impl.h)
        //	aarch64-pc-windows-msvc (flecs\addons\os_api_impl.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_set_os_api_impl();

        // Function @ flecs.h:3239:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_filter_move(ecs_filter_t* dst, ecs_filter_t* src);

        // Function @ flecs.h:2855:15
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t* ecs_set_lookup_path(ecs_world_t* world, ecs_entity_t* lookup_path);

        // Function @ meta.h:488:9
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern long ecs_meta_get_int(ecs_meta_cursor_t* cursor);

        // Function @ flecs.h:1905:11
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_ref_t ecs_ref_init_id(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id);

        // Function @ http.h:157:6
        //	aarch64-apple-darwin (flecs/addons/http.h)
        //	x86_64-pc-windows-msvc (flecs\addons\http.h)
        //	x86_64-apple-darwin (flecs/addons/http.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-pc-windows-msvc (flecs\addons\http.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_http_server_stop(ecs_http_server_t* server);

        // Function @ os_api.h:447:8
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern double ecs_time_measure(ecs_time_t* start);

        // Function @ meta.h:428:5
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_meta_set_char(ecs_meta_cursor_t* cursor, CChar value);

        // Function @ meta.h:650:14
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_unit_prefix_init(ecs_world_t* world, ecs_unit_prefix_desc_t* desc);

        // Function @ os_api.h:423:6
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_os_fatal(CString file, int line, CString msg);

        // Function @ meta.h:388:5
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_meta_push(ecs_meta_cursor_t* cursor);

        // Function @ flecs.h:1630:21
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t* ecs_bulk_init(ecs_world_t* world, ecs_bulk_desc_t* desc);

        // Function @ snapshot.h:79:6
        //	aarch64-apple-darwin (flecs/addons/snapshot.h)
        //	x86_64-pc-windows-msvc (flecs\addons\snapshot.h)
        //	x86_64-apple-darwin (flecs/addons/snapshot.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/snapshot.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/snapshot.h)
        //	aarch64-pc-windows-msvc (flecs\addons\snapshot.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_snapshot_next(ecs_iter_t* iter);

        // Function @ sparse.h:296:10
        //	aarch64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-pc-windows-msvc (flecs\private\sparse.h)
        //	x86_64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-pc-windows-msvc (flecs\private\sparse.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong ecs_sparse_last_id(ecs_sparse_t* sparse);

        // Function @ flecs.h:3213:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_filter_pivot_term(ecs_world_t* world, ecs_filter_t* filter);

        // Function @ flecs_cpp.h:57:13
        //	aarch64-apple-darwin (flecs/addons/flecs_cpp.h)
        //	x86_64-pc-windows-msvc (flecs\addons\flecs_cpp.h)
        //	x86_64-apple-darwin (flecs/addons/flecs_cpp.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/flecs_cpp.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/flecs_cpp.h)
        //	aarch64-pc-windows-msvc (flecs\addons\flecs_cpp.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_cpp_trim_module(ecs_world_t* world, CString type_name);

        // Function @ flecs.h:3912:7
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void* ecs_field_w_size(ecs_iter_t* it, ulong size, int index);

        // Function @ sparse.h:150:6
        //	aarch64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-pc-windows-msvc (flecs\private\sparse.h)
        //	x86_64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-pc-windows-msvc (flecs\private\sparse.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool flecs_sparse_is_alive(ecs_sparse_t* sparse, ulong id);

        // Function @ timer.h:194:14
        //	aarch64-apple-darwin (flecs/addons/timer.h)
        //	x86_64-pc-windows-msvc (flecs\addons\timer.h)
        //	x86_64-apple-darwin (flecs/addons/timer.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/timer.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/timer.h)
        //	aarch64-pc-windows-msvc (flecs\addons\timer.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_set_rate(ecs_world_t* world, ecs_entity_t tick_source, int rate, ecs_entity_t source);

        // Function @ strbuf.h:116:6
        //	aarch64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-pc-windows-msvc (flecs\private\strbuf.h)
        //	x86_64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-pc-windows-msvc (flecs\private\strbuf.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_strbuf_appendflt(ecs_strbuf_t* buffer, double v, CChar nan_delim);

        // Function @ flecs.h:1547:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_new_id(ecs_world_t* world);

        // Function @ flecs.h:3398:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_query_changed(ecs_query_t* query, ecs_iter_t* it);

        // Function @ meta.h:403:14
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_meta_get_type(ecs_meta_cursor_t* cursor);

        // Function @ flecs.h:1281:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_should_quit(ecs_world_t* world);

        // Function @ flecs.h:4648:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_table_swap_rows(ecs_world_t* world, ecs_table_t* table, int row_1, int row_2);

        // Function @ flecs.h:1867:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_remove_all(ecs_world_t* world, ecs_id_t id);

        // Function @ plecs.h:72:5
        //	aarch64-apple-darwin (flecs/addons/plecs.h)
        //	x86_64-pc-windows-msvc (flecs\addons\plecs.h)
        //	x86_64-apple-darwin (flecs/addons/plecs.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/plecs.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/plecs.h)
        //	aarch64-pc-windows-msvc (flecs\addons\plecs.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_plecs_from_file(ecs_world_t* world, CString filename);

        // Function @ meta.h:376:5
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_meta_elem(ecs_meta_cursor_t* cursor, int elem);

        // Function @ flecs.h:1970:15
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_record_t* ecs_write_begin(ecs_world_t* world, ecs_entity_t entity);

        // Function @ system.h:234:7
        //	aarch64-apple-darwin (flecs/addons/system.h)
        //	x86_64-pc-windows-msvc (flecs\addons\system.h)
        //	x86_64-apple-darwin (flecs/addons/system.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/system.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/system.h)
        //	aarch64-pc-windows-msvc (flecs\addons\system.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void* ecs_get_system_ctx(ecs_world_t* world, ecs_entity_t system);

        // Function @ flecs.h:4415:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_search(ecs_world_t* world, ecs_table_t* table, ecs_id_t id, ecs_id_t* id_out);

        // Function @ flecs.h:4284:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_set_stage_count(ecs_world_t* world, int stages);

        // Function @ meta.h:569:14
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_array_init(ecs_world_t* world, ecs_array_desc_t* desc);

        // Function @ flecs.h:2779:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_set_scope(ecs_world_t* world, ecs_entity_t scope);

        // Function @ flecs.h:3227:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_filter_next(ecs_iter_t* it);

        // Function @ meta.h:540:14
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_enum_init(ecs_world_t* world, ecs_enum_desc_t* desc);

        // Function @ strbuf.h:94:6
        //	aarch64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-pc-windows-msvc (flecs\private\strbuf.h)
        //	x86_64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-pc-windows-msvc (flecs\private\strbuf.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_strbuf_vappend(ecs_strbuf_t* buffer, CString fmt, void* args);

        // Function @ rules.h:163:6
        //	aarch64-apple-darwin (flecs/addons/rules.h)
        //	x86_64-pc-windows-msvc (flecs\addons\rules.h)
        //	x86_64-apple-darwin (flecs/addons/rules.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/rules.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/rules.h)
        //	aarch64-pc-windows-msvc (flecs\addons\rules.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_rule_next(ecs_iter_t* it);

        // Function @ flecs.h:2381:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_set_name(ecs_world_t* world, ecs_entity_t entity, CString name);

        // Function @ flecs.h:2463:7
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_type_str(ecs_world_t* world, ecs_type_t* type);

        // Function @ hashmap.h:116:6
        //	aarch64-apple-darwin (flecs/private/hashmap.h)
        //	x86_64-pc-windows-msvc (flecs\private\hashmap.h)
        //	x86_64-apple-darwin (flecs/private/hashmap.h)
        //	x86_64-unknown-linux-gnu (flecs/private/hashmap.h)
        //	aarch64-unknown-linux-gnu (flecs/private/hashmap.h)
        //	aarch64-pc-windows-msvc (flecs\private\hashmap.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void flecs_hm_bucket_remove(ecs_hashmap_t* map, ecs_hm_bucket_t* bucket, ulong hash, int index);

        // Function @ flecs.h:3313:21
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_filter_t* ecs_query_get_filter(ecs_query_t* query);

        // Function @ flecs.h:4578:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_table_t* ecs_table_add_id(ecs_world_t* world, ecs_table_t* table, ecs_id_t id);

        // Function @ flecs.h:3837:12
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_iter_t ecs_page_iter(ecs_iter_t* it, int offset, int limit);

        // Function @ flecs.h:4637:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_table_has_module(ecs_table_t* table);

        // Function @ expr.h:57:7
        //	aarch64-apple-darwin (flecs/addons/expr.h)
        //	x86_64-pc-windows-msvc (flecs\addons\expr.h)
        //	x86_64-apple-darwin (flecs/addons/expr.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/expr.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/expr.h)
        //	aarch64-pc-windows-msvc (flecs\addons\expr.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_chresc(CString @out, CChar @in, CChar delimiter);

        // Function @ stats.h:292:6
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_pipeline_stats_reduce(ecs_pipeline_stats_t* dst, ecs_pipeline_stats_t* src);

        // Function @ flecs.h:4346:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_stage_is_readonly(ecs_world_t* world);

        // Function @ flecs.h:1386:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_set_entity_generation(ecs_world_t* world, ecs_entity_t entity_with_generation);

        // Function @ pipeline.h:178:6
        //	aarch64-apple-darwin (flecs/addons/pipeline.h)
        //	x86_64-pc-windows-msvc (flecs\addons\pipeline.h)
        //	x86_64-apple-darwin (flecs/addons/pipeline.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/pipeline.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/pipeline.h)
        //	aarch64-pc-windows-msvc (flecs\addons\pipeline.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_set_threads(ecs_world_t* world, int threads);

        // Function @ flecs.h:3036:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_id_is_wildcard(ecs_id_t id);

        // Function @ flecs.h:1228:5
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_fini(ecs_world_t* world);

        // Function @ snapshot.h:43:17
        //	aarch64-apple-darwin (flecs/addons/snapshot.h)
        //	x86_64-pc-windows-msvc (flecs\addons\snapshot.h)
        //	x86_64-apple-darwin (flecs/addons/snapshot.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/snapshot.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/snapshot.h)
        //	aarch64-pc-windows-msvc (flecs\addons\snapshot.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_snapshot_t* ecs_snapshot_take_w_iter(ecs_iter_t* iter);

        // Function @ flecs.h:2567:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_enable(ecs_world_t* world, ecs_entity_t entity, CBool enabled);

        // Function @ strbuf.h:192:6
        //	aarch64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-pc-windows-msvc (flecs\private\strbuf.h)
        //	x86_64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-pc-windows-msvc (flecs\private\strbuf.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_strbuf_list_appendstr(ecs_strbuf_t* buffer, CString str);

        // Function @ flecs_pinvoke.h:38:26
        //	aarch64-apple-darwin (/Users/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	x86_64-pc-windows-msvc (D:\a\flecs-cs\flecs-cs\src\c\production\flecs\include\flecs_pinvoke.h)
        //	x86_64-apple-darwin (/Users/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	x86_64-unknown-linux-gnu (/home/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	aarch64-unknown-linux-gnu (/home/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	aarch64-pc-windows-msvc (D:\a\flecs-cs\flecs-cs\src\c\production\flecs\include\flecs_pinvoke.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t pinvoke_EcsPrefab();

        // Function @ flecs.h:2900:12
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_iter_t ecs_term_chain_iter(ecs_iter_t* it, ecs_term_t* term);

        // Function @ rules.h:83:6
        //	aarch64-apple-darwin (flecs/addons/rules.h)
        //	x86_64-pc-windows-msvc (flecs\addons\rules.h)
        //	x86_64-apple-darwin (flecs/addons/rules.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/rules.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/rules.h)
        //	aarch64-pc-windows-msvc (flecs\addons\rules.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_rule_fini(ecs_rule_t* rule);

        // Function @ sparse.h:84:6
        //	aarch64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-pc-windows-msvc (flecs\private\sparse.h)
        //	x86_64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-pc-windows-msvc (flecs\private\sparse.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void flecs_sparse_free(ecs_sparse_t* sparse);

        // Function @ os_api.h:420:6
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_os_err(CString file, int line, CString msg);

        // Function @ flecs_cpp.h:101:9
        //	aarch64-apple-darwin (flecs/addons/flecs_cpp.h)
        //	x86_64-pc-windows-msvc (flecs\addons\flecs_cpp.h)
        //	x86_64-apple-darwin (flecs/addons/flecs_cpp.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/flecs_cpp.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/flecs_cpp.h)
        //	aarch64-pc-windows-msvc (flecs\addons\flecs_cpp.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_cpp_reset_count_get();

        // Function @ meta.h:493:10
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong ecs_meta_get_uint(ecs_meta_cursor_t* cursor);

        // Function @ flecs.h:2551:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_get_target_for_id(ecs_world_t* world, ecs_entity_t entity, ecs_entity_t rel, ecs_id_t id);

        // Function @ flecs.h:3585:7
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void* ecs_get_observer_binding_ctx(ecs_world_t* world, ecs_entity_t observer);

        // Function @ flecs.h:2526:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_get_target(ecs_world_t* world, ecs_entity_t entity, ecs_entity_t rel, int index);

        // Function @ sparse.h:122:17
        //	aarch64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-pc-windows-msvc (flecs\private\sparse.h)
        //	x86_64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-pc-windows-msvc (flecs\private\sparse.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong* flecs_sparse_new_ids(ecs_sparse_t* sparse, int count);

        // Function @ log.h:81:13
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_strerror(int error_code);

        // Function @ flecs_cpp.h:104:9
        //	aarch64-apple-darwin (flecs/addons/flecs_cpp.h)
        //	x86_64-pc-windows-msvc (flecs\addons\flecs_cpp.h)
        //	x86_64-apple-darwin (flecs/addons/flecs_cpp.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/flecs_cpp.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/flecs_cpp.h)
        //	aarch64-pc-windows-msvc (flecs\addons\flecs_cpp.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_cpp_reset_count_inc();

        // Function @ vector.h:206:6
        //	aarch64-apple-darwin (flecs/private/vector.h)
        //	x86_64-pc-windows-msvc (flecs\private\vector.h)
        //	x86_64-apple-darwin (flecs/private/vector.h)
        //	x86_64-unknown-linux-gnu (flecs/private/vector.h)
        //	aarch64-unknown-linux-gnu (flecs/private/vector.h)
        //	aarch64-pc-windows-msvc (flecs\private\vector.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_vector_remove_last(ecs_vector_t* vector);

        // Function @ flecs.h:1787:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_is_enabled_id(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id);

        // Function @ flecs.h:1715:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_remove_id(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id);

        // Function @ flecs.h:1401:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_enable_range_check(ecs_world_t* world, CBool enable);

        // Function @ os_api.h:452:12
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_time_t ecs_time_sub(ecs_time_t t1, ecs_time_t t2);

        // Function @ units.h:170:6
        //	aarch64-apple-darwin (flecs/addons/units.h)
        //	x86_64-pc-windows-msvc (flecs\addons\units.h)
        //	x86_64-apple-darwin (flecs/addons/units.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/units.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/units.h)
        //	aarch64-pc-windows-msvc (flecs\addons\units.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void FlecsUnitsImport(ecs_world_t* world);

        // Function @ flecs_pinvoke.h:16:26
        //	aarch64-apple-darwin (/Users/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	x86_64-pc-windows-msvc (D:\a\flecs-cs\flecs-cs\src\c\production\flecs\include\flecs_pinvoke.h)
        //	x86_64-apple-darwin (/Users/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	x86_64-unknown-linux-gnu (/home/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	aarch64-unknown-linux-gnu (/home/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	aarch64-pc-windows-msvc (D:\a\flecs-cs\flecs-cs\src\c\production\flecs\include\flecs_pinvoke.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t pinvoke_EcsIsA();

        // Function @ pipeline.h:86:6
        //	aarch64-apple-darwin (flecs/addons/pipeline.h)
        //	x86_64-pc-windows-msvc (flecs\addons\pipeline.h)
        //	x86_64-apple-darwin (flecs/addons/pipeline.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/pipeline.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/pipeline.h)
        //	aarch64-pc-windows-msvc (flecs\addons\pipeline.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_set_pipeline(ecs_world_t* world, ecs_entity_t pipeline);

        // Function @ flecs.h:2655:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_lookup_symbol(ecs_world_t* world, CString symbol, CBool lookup_as_path);

        // Function @ timer.h:72:14
        //	aarch64-apple-darwin (flecs/addons/timer.h)
        //	x86_64-pc-windows-msvc (flecs\addons\timer.h)
        //	x86_64-apple-darwin (flecs/addons/timer.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/timer.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/timer.h)
        //	aarch64-pc-windows-msvc (flecs\addons\timer.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_set_timeout(ecs_world_t* world, ecs_entity_t tick_source, float timeout);

        // Function @ stats.h:324:6
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_metric_reduce(ecs_metric_t* dst, ecs_metric_t* src, int t_dst, int t_src);

        // Function @ sparse.h:156:10
        //	aarch64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-pc-windows-msvc (flecs\private\sparse.h)
        //	x86_64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-pc-windows-msvc (flecs\private\sparse.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong flecs_sparse_get_alive(ecs_sparse_t* sparse, ulong id);

        // Function @ map.h:229:6
        //	aarch64-apple-darwin (flecs/private/map.h)
        //	x86_64-pc-windows-msvc (flecs\private\map.h)
        //	x86_64-apple-darwin (flecs/private/map.h)
        //	x86_64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-pc-windows-msvc (flecs\private\map.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_map_grow(ecs_map_t* map, int elem_count);

        // Function @ system.h:203:14
        //	aarch64-apple-darwin (flecs/addons/system.h)
        //	x86_64-pc-windows-msvc (flecs\addons\system.h)
        //	x86_64-apple-darwin (flecs/addons/system.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/system.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/system.h)
        //	aarch64-pc-windows-msvc (flecs\addons\system.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_run_w_filter(ecs_world_t* world, ecs_entity_t system, float delta_time, int offset, int limit, void* param);

        // Function @ json.h:142:5
        //	aarch64-apple-darwin (flecs/addons/json.h)
        //	x86_64-pc-windows-msvc (flecs\addons\json.h)
        //	x86_64-apple-darwin (flecs/addons/json.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-pc-windows-msvc (flecs\addons\json.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_type_info_to_json_buf(ecs_world_t* world, ecs_entity_t type, ecs_strbuf_t* buf_out);

        // Function @ sparse.h:115:10
        //	aarch64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-pc-windows-msvc (flecs\private\sparse.h)
        //	x86_64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-pc-windows-msvc (flecs\private\sparse.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong flecs_sparse_new_id(ecs_sparse_t* sparse);

        // Function @ system.h:174:14
        //	aarch64-apple-darwin (flecs/addons/system.h)
        //	x86_64-pc-windows-msvc (flecs\addons\system.h)
        //	x86_64-apple-darwin (flecs/addons/system.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/system.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/system.h)
        //	aarch64-pc-windows-msvc (flecs\addons\system.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_run_worker(ecs_world_t* world, ecs_entity_t system, int stage_current, int stage_count, float delta_time, void* param);

        // Function @ flecs.h:1237:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_is_fini(ecs_world_t* world);

        // Function @ pinvoke.h:186:25
        //	aarch64-apple-darwin (/Users/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/pinvoke.h)
        //	x86_64-pc-windows-msvc (D:\a\flecs-cs\flecs-cs\src\c\production\flecs\include\pinvoke.h)
        //	x86_64-apple-darwin (/Users/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/pinvoke.h)
        //	x86_64-unknown-linux-gnu (/home/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/pinvoke.h)
        //	aarch64-unknown-linux-gnu (/home/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/pinvoke.h)
        //	aarch64-pc-windows-msvc (D:\a\flecs-cs\flecs-cs\src\c\production\flecs\include\pinvoke.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString pinvoke_get_platform_name();

        // Function @ flecs.h:2353:13
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_get_name(ecs_world_t* world, ecs_entity_t entity);

        // Function @ stats.h:176:6
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_world_stats_repeat_last(ecs_world_stats_t* stats);

        // Function @ log.h:451:6
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_log_enable_timedelta(CBool enabled);

        // Function @ flecs.h:4306:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_get_stage_id(ecs_world_t* world);

        // Function @ flecs.h:1308:25
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_type_hooks_t* ecs_get_hooks_id(ecs_world_t* world, ecs_entity_t id);

        // Function @ snapshot.h:70:12
        //	aarch64-apple-darwin (flecs/addons/snapshot.h)
        //	x86_64-pc-windows-msvc (flecs\addons\snapshot.h)
        //	x86_64-apple-darwin (flecs/addons/snapshot.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/snapshot.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/snapshot.h)
        //	aarch64-pc-windows-msvc (flecs\addons\snapshot.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_iter_t ecs_snapshot_iter(ecs_snapshot_t* snapshot);

        // Function @ log.h:460:5
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_log_last_error();

        // Function @ flecs_pinvoke.h:44:26
        //	aarch64-apple-darwin (/Users/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	x86_64-pc-windows-msvc (D:\a\flecs-cs\flecs-cs\src\c\production\flecs\include\flecs_pinvoke.h)
        //	x86_64-apple-darwin (/Users/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	x86_64-unknown-linux-gnu (/home/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	aarch64-unknown-linux-gnu (/home/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	aarch64-pc-windows-msvc (D:\a\flecs-cs\flecs-cs\src\c\production\flecs\include\flecs_pinvoke.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t pinvoke_EcsOnUpdate();

        // Function @ flecs.h:1450:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_set_target_fps(ecs_world_t* world, float fps);

        // Function @ module.h:39:14
        //	aarch64-apple-darwin (flecs/addons/module.h)
        //	x86_64-pc-windows-msvc (flecs\addons\module.h)
        //	x86_64-apple-darwin (flecs/addons/module.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/module.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/module.h)
        //	aarch64-pc-windows-msvc (flecs\addons\module.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_import(ecs_world_t* world, ecs_module_action_t module, CString module_name);

        // Function @ system.h:157:14
        //	aarch64-apple-darwin (flecs/addons/system.h)
        //	x86_64-pc-windows-msvc (flecs\addons\system.h)
        //	x86_64-apple-darwin (flecs/addons/system.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/system.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/system.h)
        //	aarch64-pc-windows-msvc (flecs\addons\system.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_run(ecs_world_t* world, ecs_entity_t system, float delta_time, void* param);

        // Function @ flecs.h:2968:5
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_term_finalize(ecs_world_t* world, ecs_term_t* term);

        // Function @ flecs_cpp.h:81:14
        //	aarch64-apple-darwin (flecs/addons/flecs_cpp.h)
        //	x86_64-pc-windows-msvc (flecs\addons\flecs_cpp.h)
        //	x86_64-apple-darwin (flecs/addons/flecs_cpp.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/flecs_cpp.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/flecs_cpp.h)
        //	aarch64-pc-windows-msvc (flecs\addons\flecs_cpp.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_cpp_component_register_explicit(ecs_world_t* world, ecs_entity_t s_id, ecs_entity_t id, CString name, CString type_name, CString symbol, ulong size, ulong alignment, CBool is_component);

        // Function @ stats.h:316:6
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_pipeline_stats_copy_last(ecs_pipeline_stats_t* dst, ecs_pipeline_stats_t* src);

        // Function @ flecs.h:3176:12
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_iter_t ecs_filter_iter(ecs_world_t* world, ecs_filter_t* filter);

        // Function @ flecs.h:4266:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_set_automerge(ecs_world_t* world, CBool automerge);

        // Function @ flecs.h:3291:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_query_t* ecs_query_init(ecs_world_t* world, ecs_query_desc_t* desc);

        // Function @ flecs.h:1217:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_world_t* ecs_init_w_args(int argc, CString* argv);

        // Function @ strbuf.h:180:6
        //	aarch64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-pc-windows-msvc (flecs\private\strbuf.h)
        //	x86_64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-pc-windows-msvc (flecs\private\strbuf.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_strbuf_list_next(ecs_strbuf_t* buffer);

        // Function @ meta.h:382:5
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_meta_member(ecs_meta_cursor_t* cursor, CString name);

        // Function @ doc.h:55:6
        //	aarch64-apple-darwin (flecs/addons/doc.h)
        //	x86_64-pc-windows-msvc (flecs\addons\doc.h)
        //	x86_64-apple-darwin (flecs/addons/doc.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/doc.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/doc.h)
        //	aarch64-pc-windows-msvc (flecs\addons\doc.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_doc_set_brief(ecs_world_t* world, ecs_entity_t entity, CString description);

        // Function @ sparse.h:183:9
        //	aarch64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-pc-windows-msvc (flecs\private\sparse.h)
        //	x86_64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-pc-windows-msvc (flecs\private\sparse.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int flecs_sparse_size(ecs_sparse_t* sparse);

        // Function @ flecs_cpp.h:45:7
        //	aarch64-apple-darwin (flecs/addons/flecs_cpp.h)
        //	x86_64-pc-windows-msvc (flecs\addons\flecs_cpp.h)
        //	x86_64-apple-darwin (flecs/addons/flecs_cpp.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/flecs_cpp.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/flecs_cpp.h)
        //	aarch64-pc-windows-msvc (flecs\addons\flecs_cpp.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_cpp_get_symbol_name(CString symbol_name, CString type_name, ulong len);

        // Function @ flecs.h:3443:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_query_table_count(ecs_query_t* query);

        // Function @ json.h:64:7
        //	aarch64-apple-darwin (flecs/addons/json.h)
        //	x86_64-pc-windows-msvc (flecs\addons\json.h)
        //	x86_64-apple-darwin (flecs/addons/json.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-pc-windows-msvc (flecs\addons\json.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_array_to_json(ecs_world_t* world, ecs_entity_t type, void* data, int count);

        // Function @ flecs.h:2923:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_term_id_is_set(ecs_term_id_t* id);

        // Function @ flecs.h:4335:20
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_world_t* ecs_get_world(ecs_poly_t* world);

        // Function @ meta.h:440:5
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_meta_set_uint(ecs_meta_cursor_t* cursor, ulong value);

        // Function @ map.h:241:12
        //	aarch64-apple-darwin (flecs/private/map.h)
        //	x86_64-pc-windows-msvc (flecs\private\map.h)
        //	x86_64-apple-darwin (flecs/private/map.h)
        //	x86_64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-pc-windows-msvc (flecs\private\map.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_map_t* ecs_map_copy(ecs_map_t* map);

        // Function @ flecs.h:4325:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_world_t* ecs_get_stage(ecs_world_t* world, int stage_id);

        // Function @ flecs.h:1416:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_measure_frame_time(ecs_world_t* world, CBool enable);

        // Function @ rules.h:172:6
        //	aarch64-apple-darwin (flecs/addons/rules.h)
        //	x86_64-pc-windows-msvc (flecs\addons\rules.h)
        //	x86_64-apple-darwin (flecs/addons/rules.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/rules.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/rules.h)
        //	aarch64-pc-windows-msvc (flecs\addons\rules.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_rule_next_instanced(ecs_iter_t* it);

        // Function @ pipeline.h:97:14
        //	aarch64-apple-darwin (flecs/addons/pipeline.h)
        //	x86_64-pc-windows-msvc (flecs\addons\pipeline.h)
        //	x86_64-apple-darwin (flecs/addons/pipeline.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/pipeline.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/pipeline.h)
        //	aarch64-pc-windows-msvc (flecs\addons\pipeline.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_get_pipeline(ecs_world_t* world);

        // Function @ expr.h:145:7
        //	aarch64-apple-darwin (flecs/addons/expr.h)
        //	x86_64-pc-windows-msvc (flecs\addons\expr.h)
        //	x86_64-apple-darwin (flecs/addons/expr.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/expr.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/expr.h)
        //	aarch64-pc-windows-msvc (flecs\addons\expr.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_ptr_to_expr(ecs_world_t* world, ecs_entity_t type, void* data);

        // Function @ map.h:200:9
        //	aarch64-apple-darwin (flecs/private/map.h)
        //	x86_64-pc-windows-msvc (flecs\private\map.h)
        //	x86_64-apple-darwin (flecs/private/map.h)
        //	x86_64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-pc-windows-msvc (flecs\private\map.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_map_bucket_count(ecs_map_t* map);

        // Function @ flecs.h:1342:25
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_world_info_t* ecs_get_world_info(ecs_world_t* world);

        // Function @ flecs.h:2438:7
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_id_str(ecs_world_t* world, ecs_id_t id);

        // Function @ strbuf.h:145:6
        //	aarch64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-pc-windows-msvc (flecs\private\strbuf.h)
        //	x86_64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-pc-windows-msvc (flecs\private\strbuf.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_strbuf_appendstrn(ecs_strbuf_t* buffer, CString str, int n);

        // Function @ flecs.h:1648:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_component_init(ecs_world_t* world, ecs_component_desc_t* desc);

        // Function @ sparse.h:95:6
        //	aarch64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-pc-windows-msvc (flecs\private\sparse.h)
        //	x86_64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-pc-windows-msvc (flecs\private\sparse.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void flecs_sparse_set_id_source(ecs_sparse_t* sparse, ulong* id_source);

        // Function @ meta.h:498:8
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern double ecs_meta_get_float(ecs_meta_cursor_t* cursor);

        // Function @ rules.h:125:13
        //	aarch64-apple-darwin (flecs/addons/rules.h)
        //	x86_64-pc-windows-msvc (flecs\addons\rules.h)
        //	x86_64-apple-darwin (flecs/addons/rules.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/rules.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/rules.h)
        //	aarch64-pc-windows-msvc (flecs\addons\rules.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_rule_var_name(ecs_rule_t* rule, int var_id);

        // Function @ rest.h:53:6
        //	aarch64-apple-darwin (flecs/addons/rest.h)
        //	x86_64-pc-windows-msvc (flecs\addons\rest.h)
        //	x86_64-apple-darwin (flecs/addons/rest.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/rest.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/rest.h)
        //	aarch64-pc-windows-msvc (flecs\addons\rest.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void FlecsRestImport(ecs_world_t* world);

        // Function @ stats.h:237:6
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_system_stats_get(ecs_world_t* world, ecs_entity_t system, ecs_system_stats_t* stats);

        // Function @ flecs.h:3749:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_iter_set_var_as_range(ecs_iter_t* it, int var_id, ecs_table_range_t* range);

        // Function @ flecs.h:4022:7
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_iter_str(ecs_iter_t* it);

        // Function @ flecs.h:2982:12
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_term_t ecs_term_copy(ecs_term_t* src);

        // Function @ flecs.h:4190:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_merge(ecs_world_t* world);

        // Function @ sparse.h:178:9
        //	aarch64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-pc-windows-msvc (flecs\private\sparse.h)
        //	x86_64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-pc-windows-msvc (flecs\private\sparse.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int flecs_sparse_not_alive_count(ecs_sparse_t* sparse);

        // Function @ flecs_pinvoke.h:21:26
        //	aarch64-apple-darwin (/Users/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	x86_64-pc-windows-msvc (D:\a\flecs-cs\flecs-cs\src\c\production\flecs\include\flecs_pinvoke.h)
        //	x86_64-apple-darwin (/Users/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	x86_64-unknown-linux-gnu (/home/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	aarch64-unknown-linux-gnu (/home/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	aarch64-pc-windows-msvc (D:\a\flecs-cs\flecs-cs\src\c\production\flecs\include\flecs_pinvoke.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t pinvoke_EcsDependsOn();

        // Function @ log.h:434:6
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_log_enable_timestamp(CBool enabled);

        // Function @ sparse.h:128:6
        //	aarch64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-pc-windows-msvc (flecs\private\sparse.h)
        //	x86_64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-pc-windows-msvc (flecs\private\sparse.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void flecs_sparse_remove(ecs_sparse_t* sparse, ulong id);

        // Function @ flecs.h:2813:10
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_id_t ecs_get_with(ecs_world_t* world);

        // Function @ doc.h:111:13
        //	aarch64-apple-darwin (flecs/addons/doc.h)
        //	x86_64-pc-windows-msvc (flecs\addons\doc.h)
        //	x86_64-apple-darwin (flecs/addons/doc.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/doc.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/doc.h)
        //	aarch64-pc-windows-msvc (flecs\addons\doc.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_doc_get_name(ecs_world_t* world, ecs_entity_t entity);

        // Function @ meta.h:512:14
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_meta_get_entity(ecs_meta_cursor_t* cursor);

        // Function @ app.h:96:5
        //	aarch64-apple-darwin (flecs/addons/app.h)
        //	x86_64-pc-windows-msvc (flecs\addons\app.h)
        //	x86_64-apple-darwin (flecs/addons/app.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/app.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/app.h)
        //	aarch64-pc-windows-msvc (flecs\addons\app.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_app_set_frame_action(ecs_app_frame_action_t callback);

        // Function @ log.h:423:6
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_log_enable_colors(CBool enabled);

        // Function @ flecs.h:4625:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_table_unlock(ecs_world_t* world, ecs_table_t* table);

        // Function @ flecs.h:1261:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_run_post_frame(ecs_world_t* world, ecs_fini_action_t action, void* ctx);

        // Function @ flecs.h:2285:24
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_type_info_t* ecs_get_type_info(ecs_world_t* world, ecs_id_t id);

        // Function @ json.h:241:7
        //	aarch64-apple-darwin (flecs/addons/json.h)
        //	x86_64-pc-windows-msvc (flecs\addons\json.h)
        //	x86_64-apple-darwin (flecs/addons/json.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-pc-windows-msvc (flecs\addons\json.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_iter_to_json(ecs_world_t* world, ecs_iter_t* iter, ecs_iter_to_json_desc_t* desc);

        // Function @ flecs.h:1889:13
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void* ecs_get_id(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id);

        // Function @ json.h:42:13
        //	aarch64-apple-darwin (flecs/addons/json.h)
        //	x86_64-pc-windows-msvc (flecs\addons\json.h)
        //	x86_64-apple-darwin (flecs/addons/json.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-pc-windows-msvc (flecs\addons\json.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_parse_json(ecs_world_t* world, CString ptr, ecs_entity_t type, void* data_out, ecs_parse_json_desc_t* desc);

        // Function @ stats.h:218:6
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_query_stats_repeat_last(ecs_query_stats_t* stats);

        // Function @ flecs.h:1743:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_override_id(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id);

        // Function @ parser.h:25:13
        //	aarch64-apple-darwin (flecs/addons/parser.h)
        //	x86_64-pc-windows-msvc (flecs\addons\parser.h)
        //	x86_64-apple-darwin (flecs/addons/parser.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/parser.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/parser.h)
        //	aarch64-pc-windows-msvc (flecs\addons\parser.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_parse_whitespace(CString ptr);

        // Function @ doc.h:144:13
        //	aarch64-apple-darwin (flecs/addons/doc.h)
        //	x86_64-pc-windows-msvc (flecs\addons\doc.h)
        //	x86_64-apple-darwin (flecs/addons/doc.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/doc.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/doc.h)
        //	aarch64-pc-windows-msvc (flecs\addons\doc.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_doc_get_link(ecs_world_t* world, ecs_entity_t entity);

        // Function @ flecs.h:3189:12
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_iter_t ecs_filter_chain_iter(ecs_iter_t* it, ecs_filter_t* filter);

        // Function @ meta.h:458:5
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_meta_set_string_literal(ecs_meta_cursor_t* cursor, CString value);

        // Function @ flecs.h:4688:15
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_record_t* ecs_record_find(ecs_world_t* world, ecs_entity_t entity);

        // Function @ meta_c.h:67:5
        //	aarch64-apple-darwin (flecs/addons/meta_c.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta_c.h)
        //	x86_64-apple-darwin (flecs/addons/meta_c.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta_c.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta_c.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta_c.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_meta_from_desc(ecs_world_t* world, ecs_entity_t component, ecs_type_kind_t kind, CString desc);

        // Function @ stats.h:287:6
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_pipeline_stats_fini(ecs_pipeline_stats_t* stats);

        // Function @ meta.h:554:14
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_bitmask_init(ecs_world_t* world, ecs_bitmask_desc_t* desc);

        // Function @ flecs.h:4203:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_defer_begin(ecs_world_t* world);

        // Function @ monitor.h:53:6
        //	aarch64-apple-darwin (flecs/addons/monitor.h)
        //	x86_64-pc-windows-msvc (flecs\addons\monitor.h)
        //	x86_64-apple-darwin (flecs/addons/monitor.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/monitor.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/monitor.h)
        //	aarch64-pc-windows-msvc (flecs\addons\monitor.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void FlecsMonitorImport(ecs_world_t* world);

        // Function @ timer.h:234:6
        //	aarch64-apple-darwin (flecs/addons/timer.h)
        //	x86_64-pc-windows-msvc (flecs\addons\timer.h)
        //	x86_64-apple-darwin (flecs/addons/timer.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/timer.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/timer.h)
        //	aarch64-pc-windows-msvc (flecs\addons\timer.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void FlecsTimerImport(ecs_world_t* world);

        // Function @ flecs.h:2705:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_get_path_w_sep_buf(ecs_world_t* world, ecs_entity_t parent, ecs_entity_t child, CString sep, CString prefix, ecs_strbuf_t* buf);

        // Function @ flecs_cpp.h:39:7
        //	aarch64-apple-darwin (flecs/addons/flecs_cpp.h)
        //	x86_64-pc-windows-msvc (flecs\addons\flecs_cpp.h)
        //	x86_64-apple-darwin (flecs/addons/flecs_cpp.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/flecs_cpp.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/flecs_cpp.h)
        //	aarch64-pc-windows-msvc (flecs\addons\flecs_cpp.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_cpp_get_type_name(CString type_name, CString func_name, ulong len);

        // Function @ meta.h:393:5
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_meta_pop(ecs_meta_cursor_t* cursor);

        // Function @ flecs.h:3452:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_query_empty_table_count(ecs_query_t* query);

        // Function @ flecs_cpp.h:62:6
        //	aarch64-apple-darwin (flecs/addons/flecs_cpp.h)
        //	x86_64-pc-windows-msvc (flecs\addons\flecs_cpp.h)
        //	x86_64-apple-darwin (flecs/addons/flecs_cpp.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/flecs_cpp.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/flecs_cpp.h)
        //	aarch64-pc-windows-msvc (flecs\addons\flecs_cpp.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_cpp_component_validate(ecs_world_t* world, ecs_entity_t id, CString name, ulong size, ulong alignment, CBool implicit_name);

        // Function @ map.h:195:9
        //	aarch64-apple-darwin (flecs/private/map.h)
        //	x86_64-pc-windows-msvc (flecs\private\map.h)
        //	x86_64-apple-darwin (flecs/private/map.h)
        //	x86_64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-pc-windows-msvc (flecs\private\map.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_map_count(ecs_map_t* map);

        // Function @ flecs.h:3413:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_query_skip(ecs_iter_t* it);

        // Function @ flecs.h:3766:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_iter_get_var(ecs_iter_t* it, int var_id);

        // Function @ flecs.h:2506:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_has_id(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id);

        // Function @ parser.h:58:13
        //	aarch64-apple-darwin (flecs/addons/parser.h)
        //	x86_64-pc-windows-msvc (flecs\addons\parser.h)
        //	x86_64-apple-darwin (flecs/addons/parser.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/parser.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/parser.h)
        //	aarch64-pc-windows-msvc (flecs\addons\parser.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_parse_fluff(CString ptr, CString* last_comment);

        // Function @ flecs.h:1374:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_set_entity_range(ecs_world_t* world, ecs_entity_t id_start, ecs_entity_t id_end);

        // Function @ flecs.h:1843:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_delete(ecs_world_t* world, ecs_entity_t entity);

        // Function @ doc.h:79:6
        //	aarch64-apple-darwin (flecs/addons/doc.h)
        //	x86_64-pc-windows-msvc (flecs\addons\doc.h)
        //	x86_64-apple-darwin (flecs/addons/doc.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/doc.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/doc.h)
        //	aarch64-pc-windows-msvc (flecs\addons\doc.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_doc_set_link(ecs_world_t* world, ecs_entity_t entity, CString link);

        // Function @ flecs.h:1981:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_write_end(ecs_record_t* @record);

        // Function @ flecs.h:3941:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_field_is_writeonly(ecs_iter_t* it, int index);

        // Function @ flecs.h:1200:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_world_t* ecs_init();

        // Function @ flecs.h:2601:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_lookup(ecs_world_t* world, CString name);

        // Function @ strbuf.h:185:6
        //	aarch64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-pc-windows-msvc (flecs\private\strbuf.h)
        //	x86_64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-pc-windows-msvc (flecs\private\strbuf.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_strbuf_list_append(ecs_strbuf_t* buffer, CString fmt);

        // Function @ rules.h:93:21
        //	aarch64-apple-darwin (flecs/addons/rules.h)
        //	x86_64-pc-windows-msvc (flecs\addons\rules.h)
        //	x86_64-apple-darwin (flecs/addons/rules.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/rules.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/rules.h)
        //	aarch64-pc-windows-msvc (flecs\addons\rules.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_filter_t* ecs_rule_get_filter(ecs_rule_t* rule);

        // Function @ snapshot.h:32:17
        //	aarch64-apple-darwin (flecs/addons/snapshot.h)
        //	x86_64-pc-windows-msvc (flecs\addons\snapshot.h)
        //	x86_64-apple-darwin (flecs/addons/snapshot.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/snapshot.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/snapshot.h)
        //	aarch64-pc-windows-msvc (flecs\addons\snapshot.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_snapshot_t* ecs_snapshot_take(ecs_world_t* world);

        // Function @ flecs.h:2476:7
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_table_str(ecs_world_t* world, ecs_table_t* table);

        // Function @ vector.h:100:6
        //	aarch64-apple-darwin (flecs/private/vector.h)
        //	x86_64-pc-windows-msvc (flecs\private\vector.h)
        //	x86_64-apple-darwin (flecs/private/vector.h)
        //	x86_64-unknown-linux-gnu (flecs/private/vector.h)
        //	aarch64-unknown-linux-gnu (flecs/private/vector.h)
        //	aarch64-pc-windows-msvc (flecs\private\vector.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_vector_clear(ecs_vector_t* vector);

        // Function @ strbuf.h:174:6
        //	aarch64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-pc-windows-msvc (flecs\private\strbuf.h)
        //	x86_64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-pc-windows-msvc (flecs\private\strbuf.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_strbuf_list_pop(ecs_strbuf_t* buffer, CString list_close);

        // Function @ flecs.h:2688:7
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_get_path_w_sep(ecs_world_t* world, ecs_entity_t parent, ecs_entity_t child, CString sep, CString prefix);

        // Function @ meta.h:470:5
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_meta_set_null(ecs_meta_cursor_t* cursor);

        // Function @ flecs.h:3162:7
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_filter_str(ecs_world_t* world, ecs_filter_t* filter);

        // Function @ map.h:190:6
        //	aarch64-apple-darwin (flecs/private/map.h)
        //	x86_64-pc-windows-msvc (flecs\private\map.h)
        //	x86_64-apple-darwin (flecs/private/map.h)
        //	x86_64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-pc-windows-msvc (flecs\private\map.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_map_clear(ecs_map_t* map);

        // Function @ json.h:177:7
        //	aarch64-apple-darwin (flecs/addons/json.h)
        //	x86_64-pc-windows-msvc (flecs\addons\json.h)
        //	x86_64-apple-darwin (flecs/addons/json.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-pc-windows-msvc (flecs\addons\json.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_entity_to_json(ecs_world_t* world, ecs_entity_t entity, ecs_entity_to_json_desc_t* desc);

        // Function @ flecs.h:3066:15
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_flags32_t ecs_id_get_flags(ecs_world_t* world, ecs_id_t id);

        // Function @ flecs.h:2826:13
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_set_name_prefix(ecs_world_t* world, CString prefix);

        // Function @ stats.h:262:6
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_system_stats_copy_last(ecs_system_stats_t* dst, ecs_system_stats_t* src);

        // Function @ meta.h:656:14
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_quantity_init(ecs_world_t* world, ecs_entity_desc_t* desc);

        // Function @ flecs.h:3975:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_field_src(ecs_iter_t* it, int index);

        // Function @ flecs.h:3800:19
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_table_range_t ecs_iter_get_var_as_range(ecs_iter_t* it, int var_id);

        // Function @ stats.h:244:6
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_system_stats_reduce(ecs_system_stats_t* dst, ecs_system_stats_t* src);

        // Function @ flecs.h:3849:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_page_next(ecs_iter_t* it);

        // Function @ strbuf.h:157:7
        //	aarch64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-pc-windows-msvc (flecs\private\strbuf.h)
        //	x86_64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-pc-windows-msvc (flecs\private\strbuf.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_strbuf_get_small(ecs_strbuf_t* buffer);

        // Function @ api_support.h:41:7
        //	aarch64-apple-darwin (flecs/private/api_support.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_support.h)
        //	x86_64-apple-darwin (flecs/private/api_support.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_support.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_support.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_support.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_module_path_from_c(CString c_name);

        // Function @ doc.h:122:13
        //	aarch64-apple-darwin (flecs/addons/doc.h)
        //	x86_64-pc-windows-msvc (flecs\addons\doc.h)
        //	x86_64-apple-darwin (flecs/addons/doc.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/doc.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/doc.h)
        //	aarch64-pc-windows-msvc (flecs\addons\doc.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_doc_get_brief(ecs_world_t* world, ecs_entity_t entity);

        // Function @ meta.h:446:5
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_meta_set_float(ecs_meta_cursor_t* cursor, double value);

        // Function @ json.h:129:7
        //	aarch64-apple-darwin (flecs/addons/json.h)
        //	x86_64-pc-windows-msvc (flecs\addons\json.h)
        //	x86_64-apple-darwin (flecs/addons/json.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-pc-windows-msvc (flecs\addons\json.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_type_info_to_json(ecs_world_t* world, ecs_entity_t type);

        // Function @ stats.h:163:6
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_world_stats_reduce(ecs_world_stats_t* dst, ecs_world_stats_t* src);

        // Function @ flecs.h:1565:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_new_low_id(ecs_world_t* world);

        // Function @ pipeline.h:162:6
        //	aarch64-apple-darwin (flecs/addons/pipeline.h)
        //	x86_64-pc-windows-msvc (flecs\addons\pipeline.h)
        //	x86_64-apple-darwin (flecs/addons/pipeline.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/pipeline.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/pipeline.h)
        //	aarch64-pc-windows-msvc (flecs\addons\pipeline.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_run_pipeline(ecs_world_t* world, ecs_entity_t pipeline, float delta_time);

        // Function @ os_api.h:472:6
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_os_has_threading();

        // Function @ strbuf.h:152:7
        //	aarch64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-pc-windows-msvc (flecs\private\strbuf.h)
        //	x86_64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-pc-windows-msvc (flecs\private\strbuf.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_strbuf_get(ecs_strbuf_t* buffer);

        // Function @ flecs.h:1273:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_quit(ecs_world_t* world);

        // Function @ system.h:258:6
        //	aarch64-apple-darwin (flecs/addons/system.h)
        //	x86_64-pc-windows-msvc (flecs\addons\system.h)
        //	x86_64-apple-darwin (flecs/addons/system.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/system.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/system.h)
        //	aarch64-pc-windows-msvc (flecs\addons\system.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void FlecsSystemImport(ecs_world_t* world);

        // Function @ flecs.h:4565:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_table_count(ecs_table_t* table);

        // Function @ flecs.h:4121:13
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern float ecs_frame_begin(ecs_world_t* world, float delta_time);

        // Function @ sparse.h:241:15
        //	aarch64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-pc-windows-msvc (flecs\private\sparse.h)
        //	x86_64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-pc-windows-msvc (flecs\private\sparse.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_sparse_t* flecs_sparse_copy(ecs_sparse_t* src);

        // Function @ flecs.h:2064:7
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void* ecs_emplace_id(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id);

        // Function @ os_api.h:417:6
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_os_warn(CString file, int line, CString msg);

        // Function @ rules.h:139:6
        //	aarch64-apple-darwin (flecs/addons/rules.h)
        //	x86_64-pc-windows-msvc (flecs\addons\rules.h)
        //	x86_64-apple-darwin (flecs/addons/rules.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/rules.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/rules.h)
        //	aarch64-pc-windows-msvc (flecs\addons\rules.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_rule_var_is_entity(ecs_rule_t* rule, int var_id);

        // Function @ map.h:235:6
        //	aarch64-apple-darwin (flecs/private/map.h)
        //	x86_64-pc-windows-msvc (flecs\private\map.h)
        //	x86_64-apple-darwin (flecs/private/map.h)
        //	x86_64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-pc-windows-msvc (flecs\private\map.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_map_set_size(ecs_map_t* map, int elem_count);

        // Function @ json.h:97:7
        //	aarch64-apple-darwin (flecs/addons/json.h)
        //	x86_64-pc-windows-msvc (flecs\addons\json.h)
        //	x86_64-apple-darwin (flecs/addons/json.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-pc-windows-msvc (flecs\addons\json.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_ptr_to_json(ecs_world_t* world, ecs_entity_t type, void* data);

        // Function @ flecs.h:2729:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_new_from_path_w_sep(ecs_world_t* world, ecs_entity_t parent, CString path, CString sep, CString prefix);

        // Function @ flecs.h:2328:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_id_is_tag(ecs_world_t* world, ecs_id_t id);

        // Function @ flecs.h:3245:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_filter_copy(ecs_filter_t* dst, ecs_filter_t* src);

        // Function @ flecs.h:3670:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_iter_count(ecs_iter_t* it);

        // Function @ os_api.h:480:6
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_os_has_logging();

        // Function @ flecs.h:3434:7
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_query_str(ecs_query_t* query);

        // Function @ flecs.h:3580:7
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void* ecs_get_observer_ctx(ecs_world_t* world, ecs_entity_t observer);

        // Function @ flecs.h:2450:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_id_str_buf(ecs_world_t* world, ecs_id_t id, ecs_strbuf_t* buf);

        // Function @ json.h:112:5
        //	aarch64-apple-darwin (flecs/addons/json.h)
        //	x86_64-pc-windows-msvc (flecs\addons\json.h)
        //	x86_64-apple-darwin (flecs/addons/json.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-pc-windows-msvc (flecs\addons\json.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_ptr_to_json_buf(ecs_world_t* world, ecs_entity_t type, void* data, ecs_strbuf_t* buf_out);

        // Function @ flecs.h:4533:7
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void* ecs_table_get_column(ecs_table_t* table, int index);

        // Function @ meta.h:452:5
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_meta_set_string(ecs_meta_cursor_t* cursor, CString value);

        // Function @ flecs.h:4224:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_defer_end(ecs_world_t* world);

        // Function @ meta.h:478:6
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_meta_get_bool(ecs_meta_cursor_t* cursor);

        // Function @ snapshot.h:88:6
        //	aarch64-apple-darwin (flecs/addons/snapshot.h)
        //	x86_64-pc-windows-msvc (flecs\addons\snapshot.h)
        //	x86_64-apple-darwin (flecs/addons/snapshot.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/snapshot.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/snapshot.h)
        //	aarch64-pc-windows-msvc (flecs\addons\snapshot.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_snapshot_free(ecs_snapshot_t* snapshot);

        // Function @ flecs.h:4614:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_table_lock(ecs_world_t* world, ecs_table_t* table);

        // Function @ sparse.h:252:6
        //	aarch64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-pc-windows-msvc (flecs\private\sparse.h)
        //	x86_64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-pc-windows-msvc (flecs\private\sparse.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void flecs_sparse_memory(ecs_sparse_t* sparse, int* allocd, int* used);

        // Function @ flecs.h:2887:12
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_iter_t ecs_term_iter(ecs_world_t* world, ecs_term_t* term);

        // Function @ timer.h:223:6
        //	aarch64-apple-darwin (flecs/addons/timer.h)
        //	x86_64-pc-windows-msvc (flecs\addons\timer.h)
        //	x86_64-apple-darwin (flecs/addons/timer.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/timer.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/timer.h)
        //	aarch64-pc-windows-msvc (flecs\addons\timer.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_set_tick_source(ecs_world_t* world, ecs_entity_t system, ecs_entity_t tick_source);

        // Function @ stats.h:223:6
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_query_stats_copy_last(ecs_query_stats_t* dst, ecs_query_stats_t* src);

        // Function @ stats.h:305:6
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_pipeline_stats_repeat_last(ecs_pipeline_stats_t* stats);

        // Function @ flecs.h:1506:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_delete_empty_tables(ecs_world_t* world, ecs_id_t id, ushort clear_generation, ushort delete_generation, int min_id_count, double time_budget_seconds);

        // Function @ flecs_cpp.h:51:7
        //	aarch64-apple-darwin (flecs/addons/flecs_cpp.h)
        //	x86_64-pc-windows-msvc (flecs\addons\flecs_cpp.h)
        //	x86_64-apple-darwin (flecs/addons/flecs_cpp.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/flecs_cpp.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/flecs_cpp.h)
        //	aarch64-pc-windows-msvc (flecs\addons\flecs_cpp.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_cpp_get_constant_name(CString constant_name, CString func_name, ulong len);

        // Function @ meta.h:691:6
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void FlecsMetaImport(ecs_world_t* world);

        // Function @ os_api.h:458:8
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern double ecs_time_to_double(ecs_time_t t);

        // Function @ flecs.h:1248:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_atfini(ecs_world_t* world, ecs_fini_action_t action, void* ctx);

        // Function @ flecs.h:4006:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_field_is_self(ecs_iter_t* it, int index);

        // Function @ flecs.h:4090:8
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong ecs_iter_column_size(ecs_iter_t* it, int index);

        // Function @ flecs.h:3655:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_iter_fini(ecs_iter_t* it);

        // Function @ flecs.h:3102:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_filter_t* ecs_filter_init(ecs_world_t* world, ecs_filter_desc_t* desc);

        // Function @ flecs.h:2146:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_is_alive(ecs_world_t* world, ecs_entity_t e);

        // Function @ meta.h:366:7
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void* ecs_meta_get_ptr(ecs_meta_cursor_t* cursor);

        // Function @ vector.h:105:6
        //	aarch64-apple-darwin (flecs/private/vector.h)
        //	x86_64-pc-windows-msvc (flecs\private\vector.h)
        //	x86_64-apple-darwin (flecs/private/vector.h)
        //	x86_64-unknown-linux-gnu (flecs/private/vector.h)
        //	aarch64-unknown-linux-gnu (flecs/private/vector.h)
        //	aarch64-pc-windows-msvc (flecs\private\vector.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_vector_assert_size(ecs_vector_t* vector_inout, ecs_size_t elem_size);

        // Function @ flecs.h:1946:7
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void* ecs_get_mut_id(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id);

        // Function @ coredoc.h:29:6
        //	aarch64-apple-darwin (flecs/addons/coredoc.h)
        //	x86_64-pc-windows-msvc (flecs\addons\coredoc.h)
        //	x86_64-apple-darwin (flecs/addons/coredoc.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/coredoc.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/coredoc.h)
        //	aarch64-pc-windows-msvc (flecs\addons\coredoc.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void FlecsCoreDocImport(ecs_world_t* world);

        // Function @ flecs.h:3541:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_emit(ecs_world_t* world, ecs_event_desc_t* desc);

        // Function @ expr.h:160:5
        //	aarch64-apple-darwin (flecs/addons/expr.h)
        //	x86_64-pc-windows-msvc (flecs\addons\expr.h)
        //	x86_64-apple-darwin (flecs/addons/expr.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/expr.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/expr.h)
        //	aarch64-pc-windows-msvc (flecs\addons\expr.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_ptr_to_expr_buf(ecs_world_t* world, ecs_entity_t type, void* data, ecs_strbuf_t* buf);

        // Function @ flecs.h:4176:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_readonly_end(ecs_world_t* world);

        // Function @ vector.h:309:9
        //	aarch64-apple-darwin (flecs/private/vector.h)
        //	x86_64-pc-windows-msvc (flecs\private\vector.h)
        //	x86_64-apple-darwin (flecs/private/vector.h)
        //	x86_64-unknown-linux-gnu (flecs/private/vector.h)
        //	aarch64-unknown-linux-gnu (flecs/private/vector.h)
        //	aarch64-pc-windows-msvc (flecs\private\vector.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_vector_size(ecs_vector_t* vector);

        // Function @ os_api.h:488:6
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_os_has_modules();

        // Function @ flecs.h:3926:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_field_is_readonly(ecs_iter_t* it, int index);

        // Function @ flecs.h:4368:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_world_t* ecs_async_stage_new(ecs_world_t* world);

        // Function @ expr.h:69:13
        //	aarch64-apple-darwin (flecs/addons/expr.h)
        //	x86_64-pc-windows-msvc (flecs\addons\expr.h)
        //	x86_64-apple-darwin (flecs/addons/expr.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/expr.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/expr.h)
        //	aarch64-pc-windows-msvc (flecs\addons\expr.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_chrparse(CString @in, CString @out);

        // Function @ os_api.h:285:6
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_os_set_api_defaults();

        // Function @ flecs.h:2176:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_get_alive(ecs_world_t* world, ecs_entity_t e);

        // Function @ flecs.h:1430:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_measure_system_time(ecs_world_t* world, CBool enable);

        // Function @ flecs.h:2156:10
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_id_t ecs_strip_generation(ecs_entity_t e);

        // Function @ stats.h:186:6
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_world_stats_log(ecs_world_t* world, ecs_world_stats_t* stats);

        // Function @ flecs.h:4246:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_defer_resume(ecs_world_t* world);

        // Function @ http.h:118:20
        //	aarch64-apple-darwin (flecs/addons/http.h)
        //	x86_64-pc-windows-msvc (flecs\addons\http.h)
        //	x86_64-apple-darwin (flecs/addons/http.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-pc-windows-msvc (flecs\addons\http.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_http_server_t* ecs_http_server_init(ecs_http_server_desc_t* desc);

        // Function @ map.h:120:6
        //	aarch64-apple-darwin (flecs/private/map.h)
        //	x86_64-pc-windows-msvc (flecs\private\map.h)
        //	x86_64-apple-darwin (flecs/private/map.h)
        //	x86_64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-pc-windows-msvc (flecs\private\map.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_map_is_initialized(ecs_map_t* result);

        // Function @ expr.h:101:7
        //	aarch64-apple-darwin (flecs/addons/expr.h)
        //	x86_64-pc-windows-msvc (flecs\addons\expr.h)
        //	x86_64-apple-darwin (flecs/addons/expr.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/expr.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/expr.h)
        //	aarch64-pc-windows-msvc (flecs\addons\expr.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_astresc(CChar delimiter, CString @in);

        // Function @ api_support.h:44:6
        //	aarch64-apple-darwin (flecs/private/api_support.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_support.h)
        //	x86_64-apple-darwin (flecs/private/api_support.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_support.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_support.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_support.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_identifier_is_0(CString id);

        // Function @ flecs.h:2946:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_term_match_0(ecs_term_t* term);

        // Function @ stats.h:198:6
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_query_stats_get(ecs_world_t* world, ecs_query_t* query, ecs_query_stats_t* stats);

        // Function @ parser.h:72:13
        //	aarch64-apple-darwin (flecs/addons/parser.h)
        //	x86_64-pc-windows-msvc (flecs\addons\parser.h)
        //	x86_64-apple-darwin (flecs/addons/parser.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/parser.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/parser.h)
        //	aarch64-pc-windows-msvc (flecs\addons\parser.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_parse_token(CString name, CString expr, CString ptr, CString token_out);

        // Function @ flecs.h:1919:7
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void* ecs_ref_get_id(ecs_world_t* world, ecs_ref_t* @ref, ecs_id_t id);

        // Function @ os_api.h:426:13
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_os_strerror(int err);

        // Function @ timer.h:119:14
        //	aarch64-apple-darwin (flecs/addons/timer.h)
        //	x86_64-pc-windows-msvc (flecs\addons\timer.h)
        //	x86_64-apple-darwin (flecs/addons/timer.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/timer.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/timer.h)
        //	aarch64-pc-windows-msvc (flecs\addons\timer.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_set_interval(ecs_world_t* world, ecs_entity_t tick_source, float interval);

        // Function @ map.h:205:16
        //	aarch64-apple-darwin (flecs/private/map.h)
        //	x86_64-pc-windows-msvc (flecs\private\map.h)
        //	x86_64-apple-darwin (flecs/private/map.h)
        //	x86_64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-pc-windows-msvc (flecs\private\map.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_map_iter_t ecs_map_iter(ecs_map_t* map);

        // Function @ system.h:98:14
        //	aarch64-apple-darwin (flecs/addons/system.h)
        //	x86_64-pc-windows-msvc (flecs\addons\system.h)
        //	x86_64-apple-darwin (flecs/addons/system.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/system.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/system.h)
        //	aarch64-pc-windows-msvc (flecs\addons\system.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_system_init(ecs_world_t* world, ecs_system_desc_t* desc);

        // Function @ flecs.h:2247:19
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_type_t* ecs_get_type(ecs_world_t* world, ecs_entity_t entity);

        // Function @ flecs.h:4678:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_commit(ecs_world_t* world, ecs_entity_t entity, ecs_record_t* @record, ecs_table_t* table, ecs_type_t* added, ecs_type_t* removed);

        // Function @ sparse.h:246:6
        //	aarch64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-pc-windows-msvc (flecs\private\sparse.h)
        //	x86_64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-pc-windows-msvc (flecs\private\sparse.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void flecs_sparse_restore(ecs_sparse_t* dst, ecs_sparse_t* src);

        // Function @ sparse.h:173:9
        //	aarch64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-pc-windows-msvc (flecs\private\sparse.h)
        //	x86_64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-pc-windows-msvc (flecs\private\sparse.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int flecs_sparse_count(ecs_sparse_t* sparse);

        // Function @ flecs.h:1332:7
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void* ecs_get_context(ecs_world_t* world);

        // Function @ doc.h:67:6
        //	aarch64-apple-darwin (flecs/addons/doc.h)
        //	x86_64-pc-windows-msvc (flecs\addons\doc.h)
        //	x86_64-apple-darwin (flecs/addons/doc.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/doc.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/doc.h)
        //	aarch64-pc-windows-msvc (flecs\addons\doc.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_doc_set_detail(ecs_world_t* world, ecs_entity_t entity, CString description);

        // Function @ stats.h:298:6
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_pipeline_stats_reduce_last(ecs_pipeline_stats_t* stats, ecs_pipeline_stats_t* old, int count);

        // Function @ flecs.h:4076:7
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void* ecs_iter_column_w_size(ecs_iter_t* it, ulong size, int index);

        // Function @ rules.h:154:12
        //	aarch64-apple-darwin (flecs/addons/rules.h)
        //	x86_64-pc-windows-msvc (flecs\addons\rules.h)
        //	x86_64-apple-darwin (flecs/addons/rules.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/rules.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/rules.h)
        //	aarch64-pc-windows-msvc (flecs\addons\rules.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_iter_t ecs_rule_iter(ecs_world_t* world, ecs_rule_t* rule);

        // Function @ flecs.h:3365:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_query_next_instanced(ecs_iter_t* iter);

        // Function @ http.h:178:13
        //	aarch64-apple-darwin (flecs/addons/http.h)
        //	x86_64-pc-windows-msvc (flecs\addons\http.h)
        //	x86_64-apple-darwin (flecs/addons/http.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-pc-windows-msvc (flecs\addons\http.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_http_get_param(ecs_http_request_t* req, CString name);

        // Function @ pipeline.h:187:6
        //	aarch64-apple-darwin (flecs/addons/pipeline.h)
        //	x86_64-pc-windows-msvc (flecs\addons\pipeline.h)
        //	x86_64-apple-darwin (flecs/addons/pipeline.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/pipeline.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/pipeline.h)
        //	aarch64-pc-windows-msvc (flecs\addons\pipeline.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void FlecsPipelineImport(ecs_world_t* world);

        // Function @ flecs.h:1679:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_clone(ecs_world_t* world, ecs_entity_t dst, ecs_entity_t src, CBool copy_value);

        // Function @ os_api.h:476:6
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_os_has_time();

        // Function @ flecs.h:1320:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_set_context(ecs_world_t* world, void* ctx);

        // Function @ flecs.h:2639:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_lookup_path_w_sep(ecs_world_t* world, ecs_entity_t parent, CString path, CString sep, CString prefix, CBool recursive);

        // Function @ flecs.h:3145:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_filter_find_this_var(ecs_filter_t* filter);

        // Function @ doc.h:92:6
        //	aarch64-apple-darwin (flecs/addons/doc.h)
        //	x86_64-pc-windows-msvc (flecs\addons\doc.h)
        //	x86_64-apple-darwin (flecs/addons/doc.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/doc.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/doc.h)
        //	aarch64-pc-windows-msvc (flecs\addons\doc.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_doc_set_color(ecs_world_t* world, ecs_entity_t entity, CString color);

        // Function @ meta.h:371:5
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_meta_next(ecs_meta_cursor_t* cursor);

        // Function @ expr.h:195:13
        //	aarch64-apple-darwin (flecs/addons/expr.h)
        //	x86_64-pc-windows-msvc (flecs\addons\expr.h)
        //	x86_64-apple-darwin (flecs/addons/expr.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/expr.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/expr.h)
        //	aarch64-pc-windows-msvc (flecs\addons\expr.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_parse_expr_token(CString name, CString expr, CString ptr, CString token);

        // Function @ json.h:81:5
        //	aarch64-apple-darwin (flecs/addons/json.h)
        //	x86_64-pc-windows-msvc (flecs\addons\json.h)
        //	x86_64-apple-darwin (flecs/addons/json.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-pc-windows-msvc (flecs\addons\json.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_array_to_json_buf(ecs_world_t* world, ecs_entity_t type, void* data, int count, ecs_strbuf_t* buf_out);

        // Function @ flecs.h:2791:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_get_scope(ecs_world_t* world);

        // Function @ flecs.h:1296:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_set_hooks_id(ecs_world_t* world, ecs_entity_t id, ecs_type_hooks_t* hooks);

        // Function @ flecs.h:2031:13
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void* ecs_record_get_id(ecs_world_t* world, ecs_record_t* @record, ecs_id_t id);

        // Function @ flecs.h:3576:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_observer_default_run_action(ecs_iter_t* it);

        // Function @ flecs.h:4132:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_frame_end(ecs_world_t* world);

        // Function @ plecs.h:57:5
        //	aarch64-apple-darwin (flecs/addons/plecs.h)
        //	x86_64-pc-windows-msvc (flecs\addons\plecs.h)
        //	x86_64-apple-darwin (flecs/addons/plecs.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/plecs.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/plecs.h)
        //	aarch64-pc-windows-msvc (flecs\addons\plecs.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_plecs_from_str(ecs_world_t* world, CString name, CString str);

        // Function @ rules.h:74:13
        //	aarch64-apple-darwin (flecs/addons/rules.h)
        //	x86_64-pc-windows-msvc (flecs\addons\rules.h)
        //	x86_64-apple-darwin (flecs/addons/rules.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/rules.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/rules.h)
        //	aarch64-pc-windows-msvc (flecs\addons\rules.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_rule_t* ecs_rule_init(ecs_world_t* world, ecs_filter_desc_t* desc);

        // Function @ flecs.h:3952:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_field_is_set(ecs_iter_t* it, int index);

        // Function @ sparse.h:89:6
        //	aarch64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-pc-windows-msvc (flecs\private\sparse.h)
        //	x86_64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-pc-windows-msvc (flecs\private\sparse.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void flecs_sparse_clear(ecs_sparse_t* sparse);

        // Function @ stats.h:250:6
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_system_stats_reduce_last(ecs_system_stats_t* stats, ecs_system_stats_t* old, int count);

        // Function @ flecs.h:3619:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_iter_poly(ecs_world_t* world, ecs_poly_t* poly, ecs_iter_t* iter, ecs_term_t* filter);

        // Function @ json.h:255:5
        //	aarch64-apple-darwin (flecs/addons/json.h)
        //	x86_64-pc-windows-msvc (flecs\addons\json.h)
        //	x86_64-apple-darwin (flecs/addons/json.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-pc-windows-msvc (flecs\addons\json.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_iter_to_json_buf(ecs_world_t* world, ecs_iter_t* iter, ecs_strbuf_t* buf_out, ecs_iter_to_json_desc_t* desc);

        // Function @ strbuf.h:102:6
        //	aarch64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-pc-windows-msvc (flecs\private\strbuf.h)
        //	x86_64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-pc-windows-msvc (flecs\private\strbuf.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_strbuf_appendstr(ecs_strbuf_t* buffer, CString str);

        // Function @ flecs.h:2751:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_add_path_w_sep(ecs_world_t* world, ecs_entity_t entity, ecs_entity_t parent, CString path, CString sep, CString prefix);

        // Function @ sparse.h:300:9
        //	aarch64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-pc-windows-msvc (flecs\private\sparse.h)
        //	x86_64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-pc-windows-msvc (flecs\private\sparse.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_sparse_count(ecs_sparse_t* sparse);

        // Function @ module.h:85:14
        //	aarch64-apple-darwin (flecs/addons/module.h)
        //	x86_64-pc-windows-msvc (flecs\addons\module.h)
        //	x86_64-apple-darwin (flecs/addons/module.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/module.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/module.h)
        //	aarch64-pc-windows-msvc (flecs\addons\module.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_module_init(ecs_world_t* world, CString c_name, ecs_component_desc_t* desc);

        // Function @ stats.h:181:6
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_world_stats_copy_last(ecs_world_stats_t* dst, ecs_world_stats_t* src);

        // Function @ flecs.h:3112:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_filter_fini(ecs_filter_t* filter);

        // Function @ flecs.h:2398:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_set_symbol(ecs_world_t* world, ecs_entity_t entity, CString symbol);

        // Function @ flecs_pinvoke.h:5:22
        //	aarch64-apple-darwin (/Users/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	x86_64-pc-windows-msvc (D:\a\flecs-cs\flecs-cs\src\c\production\flecs\include\flecs_pinvoke.h)
        //	x86_64-apple-darwin (/Users/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	x86_64-unknown-linux-gnu (/home/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	aarch64-unknown-linux-gnu (/home/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	aarch64-pc-windows-msvc (D:\a\flecs-cs\flecs-cs\src\c\production\flecs\include\flecs_pinvoke.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_id_t pinvoke_ECS_PAIR();

        // Function @ flecs.h:2427:13
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_id_flag_str(ecs_id_t id_flags);

        // Function @ pipeline.h:119:6
        //	aarch64-apple-darwin (flecs/addons/pipeline.h)
        //	x86_64-pc-windows-msvc (flecs\addons\pipeline.h)
        //	x86_64-apple-darwin (flecs/addons/pipeline.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/pipeline.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/pipeline.h)
        //	aarch64-pc-windows-msvc (flecs\addons\pipeline.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_progress(ecs_world_t* world, float delta_time);

        // Function @ flecs.h:3129:5
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_filter_finalize(ecs_world_t* world, ecs_filter_t* filter);

        // Function @ expr.h:128:13
        //	aarch64-apple-darwin (flecs/addons/expr.h)
        //	x86_64-pc-windows-msvc (flecs\addons\expr.h)
        //	x86_64-apple-darwin (flecs/addons/expr.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/expr.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/expr.h)
        //	aarch64-pc-windows-msvc (flecs\addons\expr.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_parse_expr(ecs_world_t* world, CString ptr, ecs_entity_t type, void* data_out, ecs_parse_expr_desc_t* desc);

        // Function @ flecs.h:3017:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_id_match(ecs_id_t id, ecs_id_t pattern);

        // Function @ strbuf.h:138:6
        //	aarch64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-pc-windows-msvc (flecs\private\strbuf.h)
        //	x86_64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-pc-windows-msvc (flecs\private\strbuf.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_strbuf_appendstr_zerocpy_const(ecs_strbuf_t* buffer, CString str);

        // Function @ flecs.h:1662:21
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t* ecs_bulk_new_w_id(ecs_world_t* world, ecs_id_t id, int count);

        // Function @ meta.h:632:14
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_unit_init(ecs_world_t* world, ecs_unit_desc_t* desc);

        // Function @ log.h:413:5
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_log_set_level(int level);

        // Function @ stats.h:205:6
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_query_stats_reduce(ecs_query_stats_t* dst, ecs_query_stats_t* src);

        // Function @ flecs.h:4165:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_readonly_begin(ecs_world_t* world);

        // Function @ system.h:248:7
        //	aarch64-apple-darwin (flecs/addons/system.h)
        //	x86_64-pc-windows-msvc (flecs\addons\system.h)
        //	x86_64-apple-darwin (flecs/addons/system.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/system.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/system.h)
        //	aarch64-pc-windows-msvc (flecs\addons\system.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void* ecs_get_system_binding_ctx(ecs_world_t* world, ecs_entity_t system);

        // Function @ flecs.h:1770:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_enable_id(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id, CBool enable);

        // Function @ meta.h:527:14
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_primitive_init(ecs_world_t* world, ecs_primitive_desc_t* desc);

        // Function @ flecs.h:3153:7
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CString ecs_term_str(ecs_world_t* world, ecs_term_t* term);

        // Function @ flecs_cpp.h:93:14
        //	aarch64-apple-darwin (flecs/addons/flecs_cpp.h)
        //	x86_64-pc-windows-msvc (flecs\addons\flecs_cpp.h)
        //	x86_64-apple-darwin (flecs/addons/flecs_cpp.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/flecs_cpp.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/flecs_cpp.h)
        //	aarch64-pc-windows-msvc (flecs\addons\flecs_cpp.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_cpp_enum_constant_register(ecs_world_t* world, ecs_entity_t parent, ecs_entity_t id, CString name, int value);

        // Function @ flecs.h:2045:7
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void* ecs_record_get_mut_id(ecs_world_t* world, ecs_record_t* @record, ecs_id_t id);

        // Function @ strbuf.h:109:6
        //	aarch64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-pc-windows-msvc (flecs\private\strbuf.h)
        //	x86_64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-pc-windows-msvc (flecs\private\strbuf.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_strbuf_appendch(ecs_strbuf_t* buffer, CChar ch);

        // Function @ strbuf.h:124:6
        //	aarch64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-pc-windows-msvc (flecs\private\strbuf.h)
        //	x86_64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-pc-windows-msvc (flecs\private\strbuf.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_strbuf_mergebuff(ecs_strbuf_t* dst_buffer, ecs_strbuf_t* src_buffer);

        // Function @ timer.h:159:6
        //	aarch64-apple-darwin (flecs/addons/timer.h)
        //	x86_64-pc-windows-msvc (flecs\addons\timer.h)
        //	x86_64-apple-darwin (flecs/addons/timer.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/timer.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/timer.h)
        //	aarch64-pc-windows-msvc (flecs\addons\timer.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_stop_timer(ecs_world_t* world, ecs_entity_t tick_source);

        // Function @ vector.h:95:6
        //	aarch64-apple-darwin (flecs/private/vector.h)
        //	x86_64-pc-windows-msvc (flecs\private\vector.h)
        //	x86_64-apple-darwin (flecs/private/vector.h)
        //	x86_64-unknown-linux-gnu (flecs/private/vector.h)
        //	aarch64-unknown-linux-gnu (flecs/private/vector.h)
        //	aarch64-pc-windows-msvc (flecs\private\vector.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_vector_free(ecs_vector_t* vector);

        // Function @ flecs.h:2133:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_is_valid(ecs_world_t* world, ecs_entity_t e);

        // Function @ expr.h:178:5
        //	aarch64-apple-darwin (flecs/addons/expr.h)
        //	x86_64-pc-windows-msvc (flecs\addons\expr.h)
        //	x86_64-apple-darwin (flecs/addons/expr.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/expr.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/expr.h)
        //	aarch64-pc-windows-msvc (flecs\addons\expr.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_primitive_to_expr_buf(ecs_world_t* world, ecs_primitive_kind_t kind, void* data, ecs_strbuf_t* buf);

        // Function @ hashmap.h:111:18
        //	aarch64-apple-darwin (flecs/private/hashmap.h)
        //	x86_64-pc-windows-msvc (flecs\private\hashmap.h)
        //	x86_64-apple-darwin (flecs/private/hashmap.h)
        //	x86_64-unknown-linux-gnu (flecs/private/hashmap.h)
        //	aarch64-unknown-linux-gnu (flecs/private/hashmap.h)
        //	aarch64-pc-windows-msvc (flecs\private\hashmap.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_hm_bucket_t* flecs_hashmap_get_bucket(ecs_hashmap_t* map, ulong hash);

        // Function @ flecs.h:3053:6
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern CBool ecs_id_is_valid(ecs_world_t* world, ecs_id_t id);

        // Function @ flecs.h:2099:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_entity_t ecs_set_id(ecs_world_t* world, ecs_entity_t entity, ecs_id_t id, ulong size, void* ptr);

        // Function @ os_api.h:281:6
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern void ecs_os_set_api(ecs_os_api_t* os_api);

        // Function @ flecs_pinvoke.h:10:22
        //	aarch64-apple-darwin (/Users/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	x86_64-pc-windows-msvc (D:\a\flecs-cs\flecs-cs\src\c\production\flecs\include\flecs_pinvoke.h)
        //	x86_64-apple-darwin (/Users/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	x86_64-unknown-linux-gnu (/home/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	aarch64-unknown-linux-gnu (/home/runner/work/flecs-cs/flecs-cs/src/c/production/flecs/include/flecs_pinvoke.h)
        //	aarch64-pc-windows-msvc (D:\a\flecs-cs\flecs-cs\src\c\production\flecs\include\flecs_pinvoke.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern ecs_id_t pinvoke_ECS_OVERRIDE();

        // Function @ vector.h:304:9
        //	aarch64-apple-darwin (flecs/private/vector.h)
        //	x86_64-pc-windows-msvc (flecs\private\vector.h)
        //	x86_64-apple-darwin (flecs/private/vector.h)
        //	x86_64-unknown-linux-gnu (flecs/private/vector.h)
        //	aarch64-unknown-linux-gnu (flecs/private/vector.h)
        //	aarch64-pc-windows-msvc (flecs\private\vector.h)
        [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int ecs_vector_count(ecs_vector_t* vector);

        #endregion

        #region Types

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Ecs_os_cond_t
        {
            public delegate* unmanaged<ecs_os_cond_t> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_VoidPtr_VoidPtr_Int
        {
            public delegate* unmanaged<void*, void*, int> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Ecs_iter_tPtr_CBool
        {
            public delegate* unmanaged<ecs_iter_t*, CBool> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Ecs_os_cond_t_Ecs_os_mutex_t_Void
        {
            public delegate* unmanaged<ecs_os_cond_t, ecs_os_mutex_t, void> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Ecs_world_tPtr_Ecs_app_desc_tPtr_Int
        {
            public delegate* unmanaged<ecs_world_t*, ecs_app_desc_t*, int> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Ecs_os_dl_t_Void
        {
            public delegate* unmanaged<ecs_os_dl_t, void> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Ecs_os_thread_t_VoidPtr
        {
            public delegate* unmanaged<ecs_os_thread_t, void*> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Int_Int_Void
        {
            public delegate* unmanaged<int, int, void> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Ulong
        {
            public delegate* unmanaged<ulong> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_VoidPtr_Ulong
        {
            public delegate* unmanaged<void*, ulong> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Ecs_world_tPtr_Int
        {
            public delegate* unmanaged<ecs_world_t*, int> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_VoidPtr_VoidPtr
        {
            public delegate* unmanaged<void*, void*> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_VoidPtr_Void
        {
            public delegate* unmanaged<void*, void> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Ecs_world_tPtr_CString_VoidPtr_Ecs_entity_t
        {
            public delegate* unmanaged<ecs_world_t*, CString, void*, ecs_entity_t> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_VoidPtr_Int_Ecs_type_info_tPtr_Void
        {
            public delegate* unmanaged<void*, int, ecs_type_info_t*, void> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Ecs_os_mutex_t
        {
            public delegate* unmanaged<ecs_os_mutex_t> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Ecs_os_dl_t_CString_Ecs_os_proc_t
        {
            public delegate* unmanaged<ecs_os_dl_t, CString, ecs_os_proc_t> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Ecs_world_tPtr_VoidPtr_Void
        {
            public delegate* unmanaged<ecs_world_t*, void*, void> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Ecs_world_tPtr_Void
        {
            public delegate* unmanaged<ecs_world_t*, void> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Int_CString_Int_CString_Void
        {
            public delegate* unmanaged<int, CString, int, CString, void> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_CString_Ecs_os_dl_t
        {
            public delegate* unmanaged<CString, ecs_os_dl_t> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Ecs_os_mutex_t_Void
        {
            public delegate* unmanaged<ecs_os_mutex_t, void> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Ecs_world_tPtr_Ecs_table_tPtr_Ecs_entity_tPtr_VoidPtr_Int_Int_Int_Ecs_order_by_action_t_Void
        {
            public delegate* unmanaged<ecs_world_t*, ecs_table_t*, ecs_entity_t*, void*, int, int, int, ecs_order_by_action_t, void> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Ecs_world_tPtr_Ecs_poly_tPtr_Ecs_iter_tPtr_Ecs_term_tPtr_Void
        {
            public delegate* unmanaged<ecs_world_t*, ecs_poly_t*, ecs_iter_t*, ecs_term_t*, void> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_IntPtr_Int
        {
            public delegate* unmanaged<int*, int> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Ecs_os_cond_t_Void
        {
            public delegate* unmanaged<ecs_os_cond_t, void> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Ecs_iter_tPtr_Void
        {
            public delegate* unmanaged<ecs_iter_t*, void> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_VoidPtr_VoidPtr_Int_Ecs_type_info_tPtr_Void
        {
            public delegate* unmanaged<void*, void*, int, ecs_type_info_t*, void> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Ecs_http_request_tPtr_Ecs_http_reply_tPtr_VoidPtr_CBool
        {
            public delegate* unmanaged<ecs_http_request_t*, ecs_http_reply_t*, void*, CBool> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Ecs_os_thread_callback_t_VoidPtr_Ecs_os_thread_t
        {
            public delegate* unmanaged<ecs_os_thread_callback_t, void*, ecs_os_thread_t> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_VoidPtr_Ecs_size_t_VoidPtr
        {
            public delegate* unmanaged<void*, ecs_size_t, void*> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Ecs_size_t_VoidPtr
        {
            public delegate* unmanaged<ecs_size_t, void*> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Ecs_time_tPtr_Void
        {
            public delegate* unmanaged<ecs_time_t*, void> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Ecs_world_tPtr_Ecs_table_tPtr_Ecs_id_t_VoidPtr_Ulong
        {
            public delegate* unmanaged<ecs_world_t*, ecs_table_t*, ecs_id_t, void*, ulong> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Ecs_entity_t_VoidPtr_Ecs_entity_t_VoidPtr_Int
        {
            public delegate* unmanaged<ecs_entity_t, void*, ecs_entity_t, void*, int> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_CString_CString
        {
            public delegate* unmanaged<CString, CString> Pointer;
        }

        // FunctionPointer @ NoLocation
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Void
        {
            public delegate* unmanaged<void> Pointer;
        }

        // Struct @ map.h:67:16
        //	aarch64-apple-darwin (flecs/private/map.h)
        //	x86_64-pc-windows-msvc (flecs\private\map.h)
        //	x86_64-apple-darwin (flecs/private/map.h)
        //	x86_64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-pc-windows-msvc (flecs\private\map.h)
        [StructLayout(LayoutKind.Explicit, Size = 72, Pack = 8)]
        public struct ecs_map_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_bucket_t* buckets;

            [FieldOffset(8)] // size = 8
            public ecs_bucket_t* buckets_end;

            [FieldOffset(16)] // size = 2
            public short elem_size;

            [FieldOffset(18)] // size = 1
            public byte bucket_shift;

            [FieldOffset(20)] // size = 4
            public int bucket_count;

            [FieldOffset(24)] // size = 4
            public int count;

            [FieldOffset(32)] // size = 40
            public ecs_block_allocator_t allocator;
        }

        // Struct @ flecs.h:641:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 296, Pack = 8)]
        public struct ecs_bulk_desc_t
        {
            [FieldOffset(0)] // size = 4
            public int _canary;

            [FieldOffset(8)] // size = 8
            public ecs_entity_t* entities;

            [FieldOffset(16)] // size = 4
            public int count;

            [FieldOffset(24)] // size = 256
            public fixed byte _ids[256]; // ecs_id_t[32]

            public Span<ecs_id_t> ids
            {
                get
                {
                    fixed (ecs_bulk_desc_t* @this = &this)
                    {
                        var pointer = &@this->_ids[0];
                        var span = new Span<ecs_id_t>(pointer, 32);
                        return span;
                    }
                }
            }

            [FieldOffset(280)] // size = 8
            public void** data;

            [FieldOffset(288)] // size = 8
            public ecs_table_t* table;
        }

        // Struct @ monitor.h:41:9
        //	aarch64-apple-darwin (flecs/addons/monitor.h)
        //	x86_64-pc-windows-msvc (flecs\addons\monitor.h)
        //	x86_64-apple-darwin (flecs/addons/monitor.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/monitor.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/monitor.h)
        //	aarch64-pc-windows-msvc (flecs\addons\monitor.h)
        [StructLayout(LayoutKind.Explicit, Size = 42260, Pack = 4)]
        public struct EcsWorldStats
        {
            [FieldOffset(0)] // size = 8
            public EcsStatsHeader hdr;

            [FieldOffset(8)] // size = 42252
            public ecs_world_stats_t stats;
        }

        // Struct @ meta.h:602:16
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [StructLayout(LayoutKind.Explicit, Size = 56, Pack = 8)]
        public struct ecs_unit_desc_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_entity_t entity;

            [FieldOffset(8)] // size = 8
            public CString symbol;

            [FieldOffset(16)] // size = 8
            public ecs_entity_t quantity;

            [FieldOffset(24)] // size = 8
            public ecs_entity_t @base;

            [FieldOffset(32)] // size = 8
            public ecs_entity_t over;

            [FieldOffset(40)] // size = 8
            public ecs_unit_translation_t translation;

            [FieldOffset(48)] // size = 8
            public ecs_entity_t prefix;
        }

        // Struct @ stats.h:21:16
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [StructLayout(LayoutKind.Explicit, Size = 720, Pack = 4)]
        public struct ecs_gauge_t
        {
            [FieldOffset(0)] // size = 240
            public fixed byte _avg[240]; // float[60]

            public Span<float> avg
            {
                get
                {
                    fixed (ecs_gauge_t* @this = &this)
                    {
                        var pointer = &@this->_avg[0];
                        var span = new Span<float>(pointer, 60);
                        return span;
                    }
                }
            }

            [FieldOffset(240)] // size = 240
            public fixed byte _min[240]; // float[60]

            public Span<float> min
            {
                get
                {
                    fixed (ecs_gauge_t* @this = &this)
                    {
                        var pointer = &@this->_min[0];
                        var span = new Span<float>(pointer, 60);
                        return span;
                    }
                }
            }

            [FieldOffset(480)] // size = 240
            public fixed byte _max[240]; // float[60]

            public Span<float> max
            {
                get
                {
                    fixed (ecs_gauge_t* @this = &this)
                    {
                        var pointer = &@this->_max[0];
                        var span = new Span<float>(pointer, 60);
                        return span;
                    }
                }
            }
        }

        // Struct @ meta.h:546:16
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [StructLayout(LayoutKind.Explicit, Size = 776, Pack = 8)]
        public struct ecs_bitmask_desc_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_entity_t entity;

            [FieldOffset(8)] // size = 768
            public fixed byte _constants[768]; // ecs_bitmask_constant_t[32]

            public Span<ecs_bitmask_constant_t> constants
            {
                get
                {
                    fixed (ecs_bitmask_desc_t* @this = &this)
                    {
                        var pointer = &@this->_constants[0];
                        var span = new Span<ecs_bitmask_constant_t>(pointer, 32);
                        return span;
                    }
                }
            }
        }

        // Struct @ api_types.h:179:16
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        [StructLayout(LayoutKind.Explicit, Size = 56, Pack = 8)]
        public struct ecs_rule_iter_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_rule_t* rule;

            [FieldOffset(8)] // size = 8
            public ecs_var_t* registers;

            [FieldOffset(16)] // size = 8
            public ecs_rule_op_ctx_t* op_ctx;

            [FieldOffset(24)] // size = 8
            public int* columns;

            [FieldOffset(32)] // size = 8
            public ecs_entity_t entity;

            [FieldOffset(40)] // size = 1
            public CBool redo;

            [FieldOffset(44)] // size = 4
            public int op;

            [FieldOffset(48)] // size = 4
            public int sp;
        }

        // Struct @ hashmap.h:18:9
        //	aarch64-apple-darwin (flecs/private/hashmap.h)
        //	x86_64-pc-windows-msvc (flecs\private\hashmap.h)
        //	x86_64-apple-darwin (flecs/private/hashmap.h)
        //	x86_64-unknown-linux-gnu (flecs/private/hashmap.h)
        //	aarch64-unknown-linux-gnu (flecs/private/hashmap.h)
        //	aarch64-pc-windows-msvc (flecs\private\hashmap.h)
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct ecs_hm_bucket_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_vector_t* keys;

            [FieldOffset(8)] // size = 8
            public ecs_vector_t* values;
        }

        // Struct @ meta.h:560:16
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct ecs_array_desc_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_entity_t entity;

            [FieldOffset(8)] // size = 8
            public ecs_entity_t type;

            [FieldOffset(16)] // size = 4
            public int count;
        }

        // Struct @ flecs.h:434:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
        public struct ecs_term_id_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_entity_t id;

            [FieldOffset(8)] // size = 8
            public CString name;

            [FieldOffset(16)] // size = 8
            public ecs_entity_t trav;

            [FieldOffset(24)] // size = 4
            public ecs_flags32_t flags;
        }

        // Struct @ json.h:148:16
        //	aarch64-apple-darwin (flecs/addons/json.h)
        //	x86_64-pc-windows-msvc (flecs\addons\json.h)
        //	x86_64-apple-darwin (flecs/addons/json.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-pc-windows-msvc (flecs\addons\json.h)
        [StructLayout(LayoutKind.Explicit, Size = 12, Pack = 1)]
        public struct ecs_entity_to_json_desc_t
        {
            [FieldOffset(0)] // size = 1
            public CBool serialize_path;

            [FieldOffset(1)] // size = 1
            public CBool serialize_meta_ids;

            [FieldOffset(2)] // size = 1
            public CBool serialize_label;

            [FieldOffset(3)] // size = 1
            public CBool serialize_brief;

            [FieldOffset(4)] // size = 1
            public CBool serialize_link;

            [FieldOffset(5)] // size = 1
            public CBool serialize_color;

            [FieldOffset(6)] // size = 1
            public CBool serialize_id_labels;

            [FieldOffset(7)] // size = 1
            public CBool serialize_base;

            [FieldOffset(8)] // size = 1
            public CBool serialize_private;

            [FieldOffset(9)] // size = 1
            public CBool serialize_hidden;

            [FieldOffset(10)] // size = 1
            public CBool serialize_values;

            [FieldOffset(11)] // size = 1
            public CBool serialize_type_info;
        }

        // Struct @ api_types.h:206:16
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        [StructLayout(LayoutKind.Explicit, Size = 248, Pack = 8)]
        public struct ecs_iter_cache_t
        {
            [FieldOffset(0)] // size = 32
            public fixed byte _ids[32]; // ecs_id_t[4]

            public Span<ecs_id_t> ids
            {
                get
                {
                    fixed (ecs_iter_cache_t* @this = &this)
                    {
                        var pointer = &@this->_ids[0];
                        var span = new Span<ecs_id_t>(pointer, 4);
                        return span;
                    }
                }
            }

            [FieldOffset(32)] // size = 16
            public fixed byte _columns[16]; // int32_t[4]

            public Span<int> columns
            {
                get
                {
                    fixed (ecs_iter_cache_t* @this = &this)
                    {
                        var pointer = &@this->_columns[0];
                        var span = new Span<int>(pointer, 4);
                        return span;
                    }
                }
            }

            [FieldOffset(48)] // size = 32
            public fixed byte _sources[32]; // ecs_entity_t[4]

            public Span<ecs_entity_t> sources
            {
                get
                {
                    fixed (ecs_iter_cache_t* @this = &this)
                    {
                        var pointer = &@this->_sources[0];
                        var span = new Span<ecs_entity_t>(pointer, 4);
                        return span;
                    }
                }
            }

            [FieldOffset(80)] // size = 16
            public fixed byte _sizes[16]; // ecs_size_t[4]

            public Span<ecs_size_t> sizes
            {
                get
                {
                    fixed (ecs_iter_cache_t* @this = &this)
                    {
                        var pointer = &@this->_sizes[0];
                        var span = new Span<ecs_size_t>(pointer, 4);
                        return span;
                    }
                }
            }

            [FieldOffset(96)] // size = 32
            public fixed byte _ptrs[32]; // void*[4]

            public Span<nint> ptrs
            {
                get
                {
                    fixed (ecs_iter_cache_t* @this = &this)
                    {
                        var pointer = &@this->_ptrs[0];
                        var span = new Span<nint>(pointer, 4);
                        return span;
                    }
                }
            }

            [FieldOffset(128)] // size = 16
            public fixed byte _match_indices[16]; // int32_t[4]

            public Span<int> match_indices
            {
                get
                {
                    fixed (ecs_iter_cache_t* @this = &this)
                    {
                        var pointer = &@this->_match_indices[0];
                        var span = new Span<int>(pointer, 4);
                        return span;
                    }
                }
            }

            [FieldOffset(144)] // size = 96
            public fixed byte _variables[96]; // ecs_var_t[4]

            public Span<ecs_var_t> variables
            {
                get
                {
                    fixed (ecs_iter_cache_t* @this = &this)
                    {
                        var pointer = &@this->_variables[0];
                        var span = new Span<ecs_var_t>(pointer, 4);
                        return span;
                    }
                }
            }

            [FieldOffset(240)] // size = 1
            public ecs_flags8_t used;

            [FieldOffset(241)] // size = 1
            public ecs_flags8_t allocated;
        }

        // Struct @ stats.h:39:16
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [StructLayout(LayoutKind.Explicit, Size = 42252, Pack = 4)]
        public struct ecs_world_stats_t
        {
            [FieldOffset(0)] // size = 4
            public int first_;

            [FieldOffset(4)] // size = 960
            public ecs_metric_t entity_count;

            [FieldOffset(964)] // size = 960
            public ecs_metric_t entity_not_alive_count;

            [FieldOffset(1924)] // size = 960
            public ecs_metric_t id_count;

            [FieldOffset(2884)] // size = 960
            public ecs_metric_t tag_id_count;

            [FieldOffset(3844)] // size = 960
            public ecs_metric_t component_id_count;

            [FieldOffset(4804)] // size = 960
            public ecs_metric_t pair_id_count;

            [FieldOffset(5764)] // size = 960
            public ecs_metric_t wildcard_id_count;

            [FieldOffset(6724)] // size = 960
            public ecs_metric_t component_count;

            [FieldOffset(7684)] // size = 960
            public ecs_metric_t id_create_count;

            [FieldOffset(8644)] // size = 960
            public ecs_metric_t id_delete_count;

            [FieldOffset(9604)] // size = 960
            public ecs_metric_t table_count;

            [FieldOffset(10564)] // size = 960
            public ecs_metric_t empty_table_count;

            [FieldOffset(11524)] // size = 960
            public ecs_metric_t tag_table_count;

            [FieldOffset(12484)] // size = 960
            public ecs_metric_t trivial_table_count;

            [FieldOffset(13444)] // size = 960
            public ecs_metric_t table_record_count;

            [FieldOffset(14404)] // size = 960
            public ecs_metric_t table_storage_count;

            [FieldOffset(15364)] // size = 960
            public ecs_metric_t table_create_count;

            [FieldOffset(16324)] // size = 960
            public ecs_metric_t table_delete_count;

            [FieldOffset(17284)] // size = 960
            public ecs_metric_t query_count;

            [FieldOffset(18244)] // size = 960
            public ecs_metric_t observer_count;

            [FieldOffset(19204)] // size = 960
            public ecs_metric_t system_count;

            [FieldOffset(20164)] // size = 960
            public ecs_metric_t new_count;

            [FieldOffset(21124)] // size = 960
            public ecs_metric_t bulk_new_count;

            [FieldOffset(22084)] // size = 960
            public ecs_metric_t delete_count;

            [FieldOffset(23044)] // size = 960
            public ecs_metric_t clear_count;

            [FieldOffset(24004)] // size = 960
            public ecs_metric_t add_count;

            [FieldOffset(24964)] // size = 960
            public ecs_metric_t remove_count;

            [FieldOffset(25924)] // size = 960
            public ecs_metric_t set_count;

            [FieldOffset(26884)] // size = 960
            public ecs_metric_t discard_count;

            [FieldOffset(27844)] // size = 960
            public ecs_metric_t world_time_total_raw;

            [FieldOffset(28804)] // size = 960
            public ecs_metric_t world_time_total;

            [FieldOffset(29764)] // size = 960
            public ecs_metric_t frame_time_total;

            [FieldOffset(30724)] // size = 960
            public ecs_metric_t system_time_total;

            [FieldOffset(31684)] // size = 960
            public ecs_metric_t merge_time_total;

            [FieldOffset(32644)] // size = 960
            public ecs_metric_t fps;

            [FieldOffset(33604)] // size = 960
            public ecs_metric_t delta_time;

            [FieldOffset(34564)] // size = 960
            public ecs_metric_t frame_count_total;

            [FieldOffset(35524)] // size = 960
            public ecs_metric_t merge_count_total;

            [FieldOffset(36484)] // size = 960
            public ecs_metric_t pipeline_build_count_total;

            [FieldOffset(37444)] // size = 960
            public ecs_metric_t systems_ran_frame;

            [FieldOffset(38404)] // size = 960
            public ecs_metric_t alloc_count;

            [FieldOffset(39364)] // size = 960
            public ecs_metric_t realloc_count;

            [FieldOffset(40324)] // size = 960
            public ecs_metric_t free_count;

            [FieldOffset(41284)] // size = 960
            public ecs_metric_t outstanding_alloc_count;

            [FieldOffset(42244)] // size = 4
            public int last_;

            [FieldOffset(42248)] // size = 4
            public int t;
        }

        // Struct @ api_types.h:112:16
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        [StructLayout(LayoutKind.Explicit, Size = 256, Pack = 8)]
        public struct ecs_term_iter_t
        {
            [FieldOffset(0)] // size = 136
            public ecs_term_t term;

            [FieldOffset(136)] // size = 8
            public ecs_id_record_t* self_index;

            [FieldOffset(144)] // size = 8
            public ecs_id_record_t* set_index;

            [FieldOffset(152)] // size = 8
            public ecs_id_record_t* cur;

            [FieldOffset(160)] // size = 24
            public ecs_table_cache_iter_t it;

            [FieldOffset(184)] // size = 4
            public int index;

            [FieldOffset(192)] // size = 8
            public ecs_table_t* table;

            [FieldOffset(200)] // size = 4
            public int cur_match;

            [FieldOffset(204)] // size = 4
            public int match_count;

            [FieldOffset(208)] // size = 4
            public int last_column;

            [FieldOffset(212)] // size = 1
            public CBool empty_tables;

            [FieldOffset(216)] // size = 8
            public ecs_id_t id;

            [FieldOffset(224)] // size = 4
            public int column;

            [FieldOffset(232)] // size = 8
            public ecs_entity_t subject;

            [FieldOffset(240)] // size = 4
            public ecs_size_t size;

            [FieldOffset(248)] // size = 8
            public void* ptr;
        }

        // Struct @ api_types.h:100:16
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 4)]
        public struct ecs_worker_iter_t
        {
            [FieldOffset(0)] // size = 4
            public int index;

            [FieldOffset(4)] // size = 4
            public int count;
        }

        // Struct @ json.h:25:16
        //	aarch64-apple-darwin (flecs/addons/json.h)
        //	x86_64-pc-windows-msvc (flecs\addons\json.h)
        //	x86_64-apple-darwin (flecs/addons/json.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-pc-windows-msvc (flecs\addons\json.h)
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct ecs_parse_json_desc_t
        {
            [FieldOffset(0)] // size = 8
            public CString name;

            [FieldOffset(8)] // size = 8
            public CString expr;
        }

        // Struct @ http.h:43:9
        //	aarch64-apple-darwin (flecs/addons/http.h)
        //	x86_64-pc-windows-msvc (flecs\addons\http.h)
        //	x86_64-apple-darwin (flecs/addons/http.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-pc-windows-msvc (flecs\addons\http.h)
        [StructLayout(LayoutKind.Explicit, Size = 160, Pack = 8)]
        public struct ecs_http_connection_t
        {
            [FieldOffset(0)] // size = 8
            public ulong id;

            [FieldOffset(8)] // size = 8
            public ecs_http_server_t* server;

            [FieldOffset(16)] // size = 128
            public fixed byte _host[128]; // char[128]

            public string host
            {
                get
                {
                    fixed (ecs_http_connection_t* @this = &this)
                    {
                        var pointer = &@this->_host[0];
                        var cString = new CString(pointer);
                        return Runtime.CStrings.String(cString);
                    }
                }
            }

            [FieldOffset(144)] // size = 16
            public fixed byte _port[16]; // char[16]

            public string port
            {
                get
                {
                    fixed (ecs_http_connection_t* @this = &this)
                    {
                        var pointer = &@this->_port[0];
                        var cString = new CString(pointer);
                        return Runtime.CStrings.String(cString);
                    }
                }
            }
        }

        // Struct @ flecs.h:606:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 320, Pack = 8)]
        public struct ecs_entity_desc_t
        {
            [FieldOffset(0)] // size = 4
            public int _canary;

            [FieldOffset(8)] // size = 8
            public ecs_entity_t id;

            [FieldOffset(16)] // size = 8
            public CString name;

            [FieldOffset(24)] // size = 8
            public CString sep;

            [FieldOffset(32)] // size = 8
            public CString root_sep;

            [FieldOffset(40)] // size = 8
            public CString symbol;

            [FieldOffset(48)] // size = 1
            public CBool use_low_id;

            [FieldOffset(56)] // size = 256
            public fixed byte _add[256]; // ecs_id_t[32]

            public Span<ecs_id_t> add
            {
                get
                {
                    fixed (ecs_entity_desc_t* @this = &this)
                    {
                        var pointer = &@this->_add[0];
                        var span = new Span<ecs_id_t>(pointer, 32);
                        return span;
                    }
                }
            }

            [FieldOffset(312)] // size = 8
            public CString add_expr;
        }

        // Union @ stats.h:34:15
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [StructLayout(LayoutKind.Explicit, Size = 960, Pack = 4)]
        public struct ecs_metric_t
        {
            [FieldOffset(0)] // size = 720
            public ecs_gauge_t gauge;

            [FieldOffset(0)] // size = 960
            public ecs_counter_t counter;
        }

        // Struct @ http.h:52:9
        //	aarch64-apple-darwin (flecs/addons/http.h)
        //	x86_64-pc-windows-msvc (flecs\addons\http.h)
        //	x86_64-apple-darwin (flecs/addons/http.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-pc-windows-msvc (flecs\addons\http.h)
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct ecs_http_key_value_t
        {
            [FieldOffset(0)] // size = 8
            public CString key;

            [FieldOffset(8)] // size = 8
            public CString value;
        }

        // Struct @ meta.h:637:16
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct ecs_unit_prefix_desc_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_entity_t entity;

            [FieldOffset(8)] // size = 8
            public CString symbol;

            [FieldOffset(16)] // size = 8
            public ecs_unit_translation_t translation;
        }

        // Struct @ map.h:77:16
        //	aarch64-apple-darwin (flecs/private/map.h)
        //	x86_64-pc-windows-msvc (flecs\private\map.h)
        //	x86_64-apple-darwin (flecs/private/map.h)
        //	x86_64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-pc-windows-msvc (flecs\private\map.h)
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct ecs_map_iter_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_map_t* map;

            [FieldOffset(8)] // size = 8
            public ecs_bucket_t* bucket;

            [FieldOffset(16)] // size = 8
            public ecs_bucket_entry_t* entry;
        }

        // Struct @ strbuf.h:52:16
        //	aarch64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-pc-windows-msvc (flecs\private\strbuf.h)
        //	x86_64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-pc-windows-msvc (flecs\private\strbuf.h)
        [StructLayout(LayoutKind.Explicit, Size = 1104, Pack = 8)]
        public struct ecs_strbuf_t
        {
            [FieldOffset(0)] // size = 8
            public CString buf;

            [FieldOffset(8)] // size = 4
            public int max;

            [FieldOffset(12)] // size = 4
            public int size;

            [FieldOffset(16)] // size = 4
            public int elementCount;

            [FieldOffset(24)] // size = 536
            public ecs_strbuf_element_embedded firstElement;

            [FieldOffset(560)] // size = 8
            public ecs_strbuf_element* current;

            [FieldOffset(568)] // size = 512
            public fixed byte _list_stack[512]; // ecs_strbuf_list_elem[32]

            public Span<ecs_strbuf_list_elem> list_stack
            {
                get
                {
                    fixed (ecs_strbuf_t* @this = &this)
                    {
                        var pointer = &@this->_list_stack[0];
                        var span = new Span<ecs_strbuf_list_elem>(pointer, 32);
                        return span;
                    }
                }
            }

            [FieldOffset(1080)] // size = 4
            public int list_sp;

            [FieldOffset(1088)] // size = 8
            public CString content;

            [FieldOffset(1096)] // size = 4
            public int length;
        }

        // Struct @ meta.h:257:16
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 4)]
        public struct ecs_unit_translation_t
        {
            [FieldOffset(0)] // size = 4
            public int factor;

            [FieldOffset(4)] // size = 4
            public int power;
        }

        // Struct @ map.h:45:16
        //	aarch64-apple-darwin (flecs/private/map.h)
        //	x86_64-pc-windows-msvc (flecs\private\map.h)
        //	x86_64-apple-darwin (flecs/private/map.h)
        //	x86_64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-pc-windows-msvc (flecs\private\map.h)
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct ecs_block_allocator_block_t
        {
            [FieldOffset(0)] // size = 8
            public void* memory;

            [FieldOffset(8)] // size = 8
            public ecs_block_allocator_block_t* next;
        }

        // Struct @ map.h:54:16
        //	aarch64-apple-darwin (flecs/private/map.h)
        //	x86_64-pc-windows-msvc (flecs\private\map.h)
        //	x86_64-apple-darwin (flecs/private/map.h)
        //	x86_64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-pc-windows-msvc (flecs\private\map.h)
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct ecs_block_allocator_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_block_allocator_chunk_header_t* head;

            [FieldOffset(8)] // size = 8
            public ecs_block_allocator_block_t* block_head;

            [FieldOffset(16)] // size = 8
            public ecs_block_allocator_block_t* block_tail;

            [FieldOffset(24)] // size = 4
            public int chunk_size;

            [FieldOffset(28)] // size = 4
            public int chunks_per_block;

            [FieldOffset(32)] // size = 4
            public int block_size;
        }

        // Struct @ http.h:104:9
        //	aarch64-apple-darwin (flecs/addons/http.h)
        //	x86_64-pc-windows-msvc (flecs\addons\http.h)
        //	x86_64-apple-darwin (flecs/addons/http.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-pc-windows-msvc (flecs\addons\http.h)
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
        public struct ecs_http_server_desc_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_http_reply_action_t callback;

            [FieldOffset(8)] // size = 8
            public void* ctx;

            [FieldOffset(16)] // size = 2
            public ushort port;

            [FieldOffset(24)] // size = 8
            public CString ipaddr;
        }

        // Struct @ monitor.h:46:9
        //	aarch64-apple-darwin (flecs/addons/monitor.h)
        //	x86_64-pc-windows-msvc (flecs\addons\monitor.h)
        //	x86_64-apple-darwin (flecs/addons/monitor.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/monitor.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/monitor.h)
        //	aarch64-pc-windows-msvc (flecs\addons\monitor.h)
        [StructLayout(LayoutKind.Explicit, Size = 104, Pack = 8)]
        public struct EcsPipelineStats
        {
            [FieldOffset(0)] // size = 8
            public EcsStatsHeader hdr;

            [FieldOffset(8)] // size = 96
            public ecs_pipeline_stats_t stats;
        }

        // Struct @ api_types.h:236:8
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        [StructLayout(LayoutKind.Explicit, Size = 792, Pack = 8)]
        public struct ecs_iter_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_world_t* world;

            [FieldOffset(8)] // size = 8
            public ecs_world_t* real_world;

            [FieldOffset(16)] // size = 8
            public ecs_entity_t* entities;

            [FieldOffset(24)] // size = 8
            public void** ptrs;

            [FieldOffset(32)] // size = 8
            public ecs_size_t* sizes;

            [FieldOffset(40)] // size = 8
            public ecs_table_t* table;

            [FieldOffset(48)] // size = 8
            public ecs_table_t* other_table;

            [FieldOffset(56)] // size = 8
            public ecs_id_t* ids;

            [FieldOffset(64)] // size = 8
            public ecs_var_t* variables;

            [FieldOffset(72)] // size = 8
            public int* columns;

            [FieldOffset(80)] // size = 8
            public ecs_entity_t* sources;

            [FieldOffset(88)] // size = 8
            public int* match_indices;

            [FieldOffset(96)] // size = 8
            public ecs_ref_t* references;

            [FieldOffset(104)] // size = 8
            public ecs_flags64_t constrained_vars;

            [FieldOffset(112)] // size = 8
            public ecs_entity_t system;

            [FieldOffset(120)] // size = 8
            public ecs_entity_t @event;

            [FieldOffset(128)] // size = 8
            public ecs_id_t event_id;

            [FieldOffset(136)] // size = 8
            public ecs_term_t* terms;

            [FieldOffset(144)] // size = 4
            public int table_count;

            [FieldOffset(148)] // size = 4
            public int term_count;

            [FieldOffset(152)] // size = 4
            public int term_index;

            [FieldOffset(156)] // size = 4
            public int variable_count;

            [FieldOffset(160)] // size = 8
            public CString* variable_names;

            [FieldOffset(168)] // size = 8
            public void* param;

            [FieldOffset(176)] // size = 8
            public void* ctx;

            [FieldOffset(184)] // size = 8
            public void* binding_ctx;

            [FieldOffset(192)] // size = 4
            public float delta_time;

            [FieldOffset(196)] // size = 4
            public float delta_system_time;

            [FieldOffset(200)] // size = 4
            public int frame_offset;

            [FieldOffset(204)] // size = 4
            public int offset;

            [FieldOffset(208)] // size = 4
            public int count;

            [FieldOffset(212)] // size = 4
            public int instance_count;

            [FieldOffset(216)] // size = 4
            public ecs_flags32_t flags;

            [FieldOffset(224)] // size = 8
            public ecs_entity_t interrupted_by;

            [FieldOffset(232)] // size = 528
            public ecs_iter_private_t priv;

            [FieldOffset(760)] // size = 8
            public ecs_iter_next_action_t next;

            [FieldOffset(768)] // size = 8
            public ecs_iter_action_t callback;

            [FieldOffset(776)] // size = 8
            public ecs_iter_fini_action_t fini;

            [FieldOffset(784)] // size = 8
            public ecs_iter_t* chain_it;
        }

        // Struct @ http.h:68:9
        //	aarch64-apple-darwin (flecs/addons/http.h)
        //	x86_64-pc-windows-msvc (flecs\addons\http.h)
        //	x86_64-apple-darwin (flecs/addons/http.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-pc-windows-msvc (flecs\addons\http.h)
        [StructLayout(LayoutKind.Explicit, Size = 1072, Pack = 8)]
        public struct ecs_http_request_t
        {
            [FieldOffset(0)] // size = 8
            public ulong id;

            [FieldOffset(8)] // size = 4
            public ecs_http_method_t method;

            [FieldOffset(16)] // size = 8
            public CString path;

            [FieldOffset(24)] // size = 8
            public CString body;

            [FieldOffset(32)] // size = 512
            public fixed byte _headers[512]; // ecs_http_key_value_t[32]

            public Span<ecs_http_key_value_t> headers
            {
                get
                {
                    fixed (ecs_http_request_t* @this = &this)
                    {
                        var pointer = &@this->_headers[0];
                        var span = new Span<ecs_http_key_value_t>(pointer, 32);
                        return span;
                    }
                }
            }

            [FieldOffset(544)] // size = 512
            public fixed byte _params[512]; // ecs_http_key_value_t[32]

            public Span<ecs_http_key_value_t> @params
            {
                get
                {
                    fixed (ecs_http_request_t* @this = &this)
                    {
                        var pointer = &@this->_params[0];
                        var span = new Span<ecs_http_key_value_t>(pointer, 32);
                        return span;
                    }
                }
            }

            [FieldOffset(1056)] // size = 4
            public int header_count;

            [FieldOffset(1060)] // size = 4
            public int param_count;

            [FieldOffset(1064)] // size = 8
            public ecs_http_connection_t* conn;
        }

        // Struct @ stats.h:28:16
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [StructLayout(LayoutKind.Explicit, Size = 960, Pack = 4)]
        public struct ecs_counter_t
        {
            [FieldOffset(0)] // size = 720
            public ecs_gauge_t rate;

            [FieldOffset(720)] // size = 240
            public fixed byte _value[240]; // float[60]

            public Span<float> value
            {
                get
                {
                    fixed (ecs_counter_t* @this = &this)
                    {
                        var pointer = &@this->_value[0];
                        var span = new Span<float>(pointer, 60);
                        return span;
                    }
                }
            }
        }

        // Struct @ flecs.h:585:8
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 136, Pack = 8)]
        public struct ecs_type_info_t
        {
            [FieldOffset(0)] // size = 4
            public ecs_size_t size;

            [FieldOffset(4)] // size = 4
            public ecs_size_t alignment;

            [FieldOffset(8)] // size = 120
            public ecs_type_hooks_t hooks;

            [FieldOffset(128)] // size = 8
            public ecs_entity_t component;
        }

        // Struct @ api_types.h:153:16
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct ecs_query_iter_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_query_t* query;

            [FieldOffset(8)] // size = 8
            public ecs_query_table_node_t* node;

            [FieldOffset(16)] // size = 8
            public ecs_query_table_node_t* prev;

            [FieldOffset(24)] // size = 4
            public int sparse_smallest;

            [FieldOffset(28)] // size = 4
            public int sparse_first;

            [FieldOffset(32)] // size = 4
            public int bitset_first;

            [FieldOffset(36)] // size = 4
            public int skip_count;
        }

        // Struct @ api_types.h:163:16
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        [StructLayout(LayoutKind.Explicit, Size = 80, Pack = 8)]
        public struct ecs_snapshot_iter_t
        {
            [FieldOffset(0)] // size = 64
            public ecs_filter_t filter;

            [FieldOffset(64)] // size = 8
            public ecs_vector_t* tables;

            [FieldOffset(72)] // size = 4
            public int index;
        }

        // Struct @ strbuf.h:47:16
        //	aarch64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-pc-windows-msvc (flecs\private\strbuf.h)
        //	x86_64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-pc-windows-msvc (flecs\private\strbuf.h)
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct ecs_strbuf_list_elem
        {
            [FieldOffset(0)] // size = 4
            public int count;

            [FieldOffset(8)] // size = 8
            public CString separator;
        }

        // Struct @ flecs.h:669:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 152, Pack = 8)]
        public struct ecs_component_desc_t
        {
            [FieldOffset(0)] // size = 4
            public int _canary;

            [FieldOffset(8)] // size = 8
            public ecs_entity_t entity;

            [FieldOffset(16)] // size = 136
            public ecs_type_info_t type;
        }

        // Struct @ hashmap.h:37:9
        //	aarch64-apple-darwin (flecs/private/hashmap.h)
        //	x86_64-pc-windows-msvc (flecs\private\hashmap.h)
        //	x86_64-apple-darwin (flecs/private/hashmap.h)
        //	x86_64-unknown-linux-gnu (flecs/private/hashmap.h)
        //	aarch64-unknown-linux-gnu (flecs/private/hashmap.h)
        //	aarch64-pc-windows-msvc (flecs\private\hashmap.h)
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct flecs_hashmap_result_t
        {
            [FieldOffset(0)] // size = 8
            public void* key;

            [FieldOffset(8)] // size = 8
            public void* value;

            [FieldOffset(16)] // size = 8
            public ulong hash;
        }

        // Struct @ json.h:198:16
        //	aarch64-apple-darwin (flecs/addons/json.h)
        //	x86_64-pc-windows-msvc (flecs\addons\json.h)
        //	x86_64-apple-darwin (flecs/addons/json.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/json.h)
        //	aarch64-pc-windows-msvc (flecs\addons\json.h)
        [StructLayout(LayoutKind.Explicit, Size = 14, Pack = 1)]
        public struct ecs_iter_to_json_desc_t
        {
            [FieldOffset(0)] // size = 1
            public CBool serialize_term_ids;

            [FieldOffset(1)] // size = 1
            public CBool serialize_ids;

            [FieldOffset(2)] // size = 1
            public CBool serialize_sources;

            [FieldOffset(3)] // size = 1
            public CBool serialize_variables;

            [FieldOffset(4)] // size = 1
            public CBool serialize_is_set;

            [FieldOffset(5)] // size = 1
            public CBool serialize_values;

            [FieldOffset(6)] // size = 1
            public CBool serialize_entities;

            [FieldOffset(7)] // size = 1
            public CBool serialize_entity_labels;

            [FieldOffset(8)] // size = 1
            public CBool serialize_entity_ids;

            [FieldOffset(9)] // size = 1
            public CBool serialize_variable_labels;

            [FieldOffset(10)] // size = 1
            public CBool serialize_variable_ids;

            [FieldOffset(11)] // size = 1
            public CBool serialize_colors;

            [FieldOffset(12)] // size = 1
            public CBool measure_eval_duration;

            [FieldOffset(13)] // size = 1
            public CBool serialize_type_info;
        }

        // Struct @ sparse.h:45:8
        //	aarch64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-pc-windows-msvc (flecs\private\sparse.h)
        //	x86_64-apple-darwin (flecs/private/sparse.h)
        //	x86_64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-unknown-linux-gnu (flecs/private/sparse.h)
        //	aarch64-pc-windows-msvc (flecs\private\sparse.h)
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct ecs_sparse_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_vector_t* dense;

            [FieldOffset(8)] // size = 8
            public ecs_vector_t* chunks;

            [FieldOffset(16)] // size = 4
            public ecs_size_t size;

            [FieldOffset(20)] // size = 4
            public int count;

            [FieldOffset(24)] // size = 8
            public ulong max_id_local;

            [FieldOffset(32)] // size = 8
            public ulong* max_id;
        }

        // Struct @ meta.h:346:16
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [StructLayout(LayoutKind.Explicit, Size = 2080, Pack = 8)]
        public struct ecs_meta_cursor_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_world_t* world;

            [FieldOffset(8)] // size = 2048
            public fixed byte _scope[2048]; // ecs_meta_scope_t[32]

            public Span<ecs_meta_scope_t> scope
            {
                get
                {
                    fixed (ecs_meta_cursor_t* @this = &this)
                    {
                        var pointer = &@this->_scope[0];
                        var span = new Span<ecs_meta_scope_t>(pointer, 32);
                        return span;
                    }
                }
            }

            [FieldOffset(2056)] // size = 4
            public int depth;

            [FieldOffset(2060)] // size = 1
            public CBool valid;

            [FieldOffset(2061)] // size = 1
            public CBool is_primitive_scope;

            [FieldOffset(2064)] // size = 8
            public FnPtr_Ecs_world_tPtr_CString_VoidPtr_Ecs_entity_t lookup_action;

            [FieldOffset(2072)] // size = 8
            public void* lookup_ctx;
        }

        // Struct @ api_types.h:106:16
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct ecs_table_cache_iter_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_table_cache_hdr_t* cur;

            [FieldOffset(8)] // size = 8
            public ecs_table_cache_hdr_t* next;

            [FieldOffset(16)] // size = 8
            public ecs_table_cache_hdr_t* next_list;
        }

        // Struct @ api_types.h:61:8
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct ecs_record_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_table_t* table;

            [FieldOffset(8)] // size = 4
            public uint row;
        }

        // Struct @ api_types.h:85:8
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
        public struct ecs_ref_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_entity_t entity;

            [FieldOffset(8)] // size = 8
            public ecs_entity_t id;

            [FieldOffset(16)] // size = 8
            public ecs_table_record_t* tr;

            [FieldOffset(24)] // size = 8
            public ecs_record_t* @record;
        }

        // Struct @ hashmap.h:31:9
        //	aarch64-apple-darwin (flecs/private/hashmap.h)
        //	x86_64-pc-windows-msvc (flecs\private\hashmap.h)
        //	x86_64-apple-darwin (flecs/private/hashmap.h)
        //	x86_64-unknown-linux-gnu (flecs/private/hashmap.h)
        //	aarch64-unknown-linux-gnu (flecs/private/hashmap.h)
        //	aarch64-pc-windows-msvc (flecs\private\hashmap.h)
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct flecs_hashmap_iter_t
        {
            [FieldOffset(0)] // size = 24
            public ecs_map_iter_t it;

            [FieldOffset(24)] // size = 8
            public ecs_hm_bucket_t* bucket;

            [FieldOffset(32)] // size = 4
            public int index;
        }

        // Struct @ flecs.h:713:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 2312, Pack = 8)]
        public struct ecs_query_desc_t
        {
            [FieldOffset(0)] // size = 4
            public int _canary;

            [FieldOffset(8)] // size = 2232
            public ecs_filter_desc_t filter;

            [FieldOffset(2240)] // size = 8
            public ecs_entity_t order_by_component;

            [FieldOffset(2248)] // size = 8
            public ecs_order_by_action_t order_by;

            [FieldOffset(2256)] // size = 8
            public ecs_sort_table_action_t sort_table;

            [FieldOffset(2264)] // size = 8
            public ecs_id_t group_by_id;

            [FieldOffset(2272)] // size = 8
            public ecs_group_by_action_t group_by;

            [FieldOffset(2280)] // size = 8
            public void* group_by_ctx;

            [FieldOffset(2288)] // size = 8
            public ecs_ctx_free_t group_by_ctx_free;

            [FieldOffset(2296)] // size = 8
            public ecs_query_t* parent;

            [FieldOffset(2304)] // size = 8
            public ecs_entity_t entity;
        }

        // Struct @ flecs.h:170:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct ecs_type_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_id_t* array;

            [FieldOffset(8)] // size = 4
            public int count;
        }

        // Struct @ api_types.h:93:16
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        [StructLayout(LayoutKind.Explicit, Size = 12, Pack = 4)]
        public struct ecs_page_iter_t
        {
            [FieldOffset(0)] // size = 4
            public int offset;

            [FieldOffset(4)] // size = 4
            public int limit;

            [FieldOffset(8)] // size = 4
            public int remaining;
        }

        // Struct @ stats.h:108:16
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [StructLayout(LayoutKind.Explicit, Size = 2892, Pack = 4)]
        public struct ecs_query_stats_t
        {
            [FieldOffset(0)] // size = 4
            public int first_;

            [FieldOffset(4)] // size = 960
            public ecs_metric_t matched_table_count;

            [FieldOffset(964)] // size = 960
            public ecs_metric_t matched_empty_table_count;

            [FieldOffset(1924)] // size = 960
            public ecs_metric_t matched_entity_count;

            [FieldOffset(2884)] // size = 4
            public int last_;

            [FieldOffset(2888)] // size = 4
            public int t;
        }

        // Struct @ flecs.h:456:8
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 136, Pack = 8)]
        public struct ecs_term_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_id_t id;

            [FieldOffset(8)] // size = 32
            public ecs_term_id_t src;

            [FieldOffset(40)] // size = 32
            public ecs_term_id_t first;

            [FieldOffset(72)] // size = 32
            public ecs_term_id_t second;

            [FieldOffset(104)] // size = 4
            public ecs_inout_kind_t inout;

            [FieldOffset(108)] // size = 4
            public ecs_oper_kind_t oper;

            [FieldOffset(112)] // size = 8
            public ecs_id_t id_flags;

            [FieldOffset(120)] // size = 8
            public CString name;

            [FieldOffset(128)] // size = 4
            public int index;

            [FieldOffset(132)] // size = 1
            public CBool move;
        }

        // Struct @ http.h:83:9
        //	aarch64-apple-darwin (flecs/addons/http.h)
        //	x86_64-pc-windows-msvc (flecs\addons\http.h)
        //	x86_64-apple-darwin (flecs/addons/http.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-pc-windows-msvc (flecs\addons\http.h)
        [StructLayout(LayoutKind.Explicit, Size = 2232, Pack = 8)]
        public struct ecs_http_reply_t
        {
            [FieldOffset(0)] // size = 4
            public int code;

            [FieldOffset(8)] // size = 1104
            public ecs_strbuf_t body;

            [FieldOffset(1112)] // size = 8
            public CString status;

            [FieldOffset(1120)] // size = 8
            public CString content_type;

            [FieldOffset(1128)] // size = 1104
            public ecs_strbuf_t headers;
        }

        // Struct @ system.h:39:16
        //	aarch64-apple-darwin (flecs/addons/system.h)
        //	x86_64-pc-windows-msvc (flecs\addons\system.h)
        //	x86_64-apple-darwin (flecs/addons/system.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/system.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/system.h)
        //	aarch64-pc-windows-msvc (flecs\addons\system.h)
        [StructLayout(LayoutKind.Explicit, Size = 2400, Pack = 8)]
        public struct ecs_system_desc_t
        {
            [FieldOffset(0)] // size = 4
            public int _canary;

            [FieldOffset(8)] // size = 8
            public ecs_entity_t entity;

            [FieldOffset(16)] // size = 2312
            public ecs_query_desc_t query;

            [FieldOffset(2328)] // size = 8
            public ecs_run_action_t run;

            [FieldOffset(2336)] // size = 8
            public ecs_iter_action_t callback;

            [FieldOffset(2344)] // size = 8
            public void* ctx;

            [FieldOffset(2352)] // size = 8
            public void* binding_ctx;

            [FieldOffset(2360)] // size = 8
            public ecs_ctx_free_t ctx_free;

            [FieldOffset(2368)] // size = 8
            public ecs_ctx_free_t binding_ctx_free;

            [FieldOffset(2376)] // size = 4
            public float interval;

            [FieldOffset(2380)] // size = 4
            public int rate;

            [FieldOffset(2384)] // size = 8
            public ecs_entity_t tick_source;

            [FieldOffset(2392)] // size = 1
            public CBool multi_threaded;

            [FieldOffset(2393)] // size = 1
            public CBool no_staging;
        }

        // Struct @ flecs.h:831:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 4)]
        public struct EcsComponent
        {
            [FieldOffset(0)] // size = 4
            public ecs_size_t size;

            [FieldOffset(4)] // size = 4
            public ecs_size_t alignment;
        }

        // Struct @ flecs.h:383:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct ecs_header_t
        {
            [FieldOffset(0)] // size = 4
            public int magic;

            [FieldOffset(4)] // size = 4
            public int type;

            [FieldOffset(8)] // size = 8
            public ecs_mixins_t* mixins;
        }

        // Struct @ meta.h:222:16
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct ecs_bitmask_constant_t
        {
            [FieldOffset(0)] // size = 8
            public CString name;

            [FieldOffset(8)] // size = 4
            public ecs_flags32_t value;

            [FieldOffset(16)] // size = 8
            public ecs_entity_t constant;
        }

        // Struct @ api_types.h:221:16
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        [StructLayout(LayoutKind.Explicit, Size = 528, Pack = 8)]
        public struct ecs_iter_private_t
        {
            [FieldOffset(0)] // size = 280
            public ecs_iter_private_t_ANONYMOUS_FIELD0 iter;

            [FieldOffset(280)] // size = 248
            public ecs_iter_cache_t cache;
        }

        // Struct @ os_api.h:31:16
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 4)]
        public struct ecs_time_t
        {
            [FieldOffset(0)] // size = 4
            public uint sec;

            [FieldOffset(4)] // size = 4
            public uint nanosec;
        }

        // Struct @ expr.h:106:16
        //	aarch64-apple-darwin (flecs/addons/expr.h)
        //	x86_64-pc-windows-msvc (flecs\addons\expr.h)
        //	x86_64-apple-darwin (flecs/addons/expr.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/expr.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/expr.h)
        //	aarch64-pc-windows-msvc (flecs\addons\expr.h)
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
        public struct ecs_parse_expr_desc_t
        {
            [FieldOffset(0)] // size = 8
            public CString name;

            [FieldOffset(8)] // size = 8
            public CString expr;

            [FieldOffset(16)] // size = 8
            public FnPtr_Ecs_world_tPtr_CString_VoidPtr_Ecs_entity_t lookup_action;

            [FieldOffset(24)] // size = 8
            public void* lookup_ctx;
        }

        // Struct @ map.h:39:16
        //	aarch64-apple-darwin (flecs/private/map.h)
        //	x86_64-pc-windows-msvc (flecs\private\map.h)
        //	x86_64-apple-darwin (flecs/private/map.h)
        //	x86_64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-pc-windows-msvc (flecs\private\map.h)
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct ecs_bucket_entry_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_bucket_entry_t* next;

            [FieldOffset(8)] // size = 8
            public ecs_map_key_t key;
        }

        // Struct @ strbuf.h:30:16
        //	aarch64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-pc-windows-msvc (flecs\private\strbuf.h)
        //	x86_64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-pc-windows-msvc (flecs\private\strbuf.h)
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct ecs_strbuf_element
        {
            [FieldOffset(0)] // size = 1
            public CBool buffer_embedded;

            [FieldOffset(4)] // size = 4
            public int pos;

            [FieldOffset(8)] // size = 8
            public CString buf;

            [FieldOffset(16)] // size = 8
            public ecs_strbuf_element* next;
        }

        // Struct @ hashmap.h:23:9
        //	aarch64-apple-darwin (flecs/private/hashmap.h)
        //	x86_64-pc-windows-msvc (flecs\private\hashmap.h)
        //	x86_64-apple-darwin (flecs/private/hashmap.h)
        //	x86_64-unknown-linux-gnu (flecs/private/hashmap.h)
        //	aarch64-unknown-linux-gnu (flecs/private/hashmap.h)
        //	aarch64-pc-windows-msvc (flecs\private\hashmap.h)
        [StructLayout(LayoutKind.Explicit, Size = 96, Pack = 8)]
        public struct ecs_hashmap_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_hash_value_action_t hash;

            [FieldOffset(8)] // size = 8
            public ecs_compare_action_t compare;

            [FieldOffset(16)] // size = 4
            public ecs_size_t key_size;

            [FieldOffset(20)] // size = 4
            public ecs_size_t value_size;

            [FieldOffset(24)] // size = 72
            public ecs_map_t impl;
        }

        // Struct @ flecs.h:391:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_iterable_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_iter_init_action_t init;
        }

        // Struct @ api_types.h:144:16
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        [StructLayout(LayoutKind.Explicit, Size = 280, Pack = 8)]
        public struct ecs_filter_iter_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_filter_t* filter;

            [FieldOffset(8)] // size = 4
            public ecs_iter_kind_t kind;

            [FieldOffset(16)] // size = 256
            public ecs_term_iter_t term_iter;

            [FieldOffset(272)] // size = 4
            public int matches_left;

            [FieldOffset(276)] // size = 4
            public int pivot_term;
        }

        // Struct @ map.h:63:16
        //	aarch64-apple-darwin (flecs/private/map.h)
        //	x86_64-pc-windows-msvc (flecs\private\map.h)
        //	x86_64-apple-darwin (flecs/private/map.h)
        //	x86_64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-pc-windows-msvc (flecs\private\map.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_bucket_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_bucket_entry_t* first;
        }

        // Struct @ flecs.h:853:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 176, Pack = 8)]
        public struct ecs_world_info_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_entity_t last_component_id;

            [FieldOffset(8)] // size = 8
            public ecs_entity_t last_id;

            [FieldOffset(16)] // size = 8
            public ecs_entity_t min_id;

            [FieldOffset(24)] // size = 8
            public ecs_entity_t max_id;

            [FieldOffset(32)] // size = 4
            public float delta_time_raw;

            [FieldOffset(36)] // size = 4
            public float delta_time;

            [FieldOffset(40)] // size = 4
            public float time_scale;

            [FieldOffset(44)] // size = 4
            public float target_fps;

            [FieldOffset(48)] // size = 4
            public float frame_time_total;

            [FieldOffset(52)] // size = 4
            public float system_time_total;

            [FieldOffset(56)] // size = 4
            public float merge_time_total;

            [FieldOffset(60)] // size = 4
            public float world_time_total;

            [FieldOffset(64)] // size = 4
            public float world_time_total_raw;

            [FieldOffset(68)] // size = 4
            public int frame_count_total;

            [FieldOffset(72)] // size = 4
            public int merge_count_total;

            [FieldOffset(76)] // size = 4
            public int id_create_total;

            [FieldOffset(80)] // size = 4
            public int id_delete_total;

            [FieldOffset(84)] // size = 4
            public int table_create_total;

            [FieldOffset(88)] // size = 4
            public int table_delete_total;

            [FieldOffset(92)] // size = 4
            public int pipeline_build_count_total;

            [FieldOffset(96)] // size = 4
            public int systems_ran_frame;

            [FieldOffset(100)] // size = 4
            public int id_count;

            [FieldOffset(104)] // size = 4
            public int tag_id_count;

            [FieldOffset(108)] // size = 4
            public int component_id_count;

            [FieldOffset(112)] // size = 4
            public int pair_id_count;

            [FieldOffset(116)] // size = 4
            public int wildcard_id_count;

            [FieldOffset(120)] // size = 4
            public int table_count;

            [FieldOffset(124)] // size = 4
            public int tag_table_count;

            [FieldOffset(128)] // size = 4
            public int trivial_table_count;

            [FieldOffset(132)] // size = 4
            public int empty_table_count;

            [FieldOffset(136)] // size = 4
            public int table_record_count;

            [FieldOffset(140)] // size = 4
            public int table_storage_count;

            [FieldOffset(144)] // size = 4
            public int new_count;

            [FieldOffset(148)] // size = 4
            public int bulk_new_count;

            [FieldOffset(152)] // size = 4
            public int delete_count;

            [FieldOffset(156)] // size = 4
            public int clear_count;

            [FieldOffset(160)] // size = 4
            public int add_count;

            [FieldOffset(164)] // size = 4
            public int remove_count;

            [FieldOffset(168)] // size = 4
            public int set_count;

            [FieldOffset(172)] // size = 4
            public int discard_count;
        }

        // Struct @ flecs.h:679:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 2232, Pack = 8)]
        public struct ecs_filter_desc_t
        {
            [FieldOffset(0)] // size = 4
            public int _canary;

            [FieldOffset(8)] // size = 2176
            public fixed byte _terms[2176]; // ecs_term_t[16]

            public Span<ecs_term_t> terms
            {
                get
                {
                    fixed (ecs_filter_desc_t* @this = &this)
                    {
                        var pointer = &@this->_terms[0];
                        var span = new Span<ecs_term_t>(pointer, 16);
                        return span;
                    }
                }
            }

            [FieldOffset(2184)] // size = 8
            public ecs_term_t* terms_buffer;

            [FieldOffset(2192)] // size = 4
            public int terms_buffer_count;

            [FieldOffset(2200)] // size = 8
            public ecs_filter_t* storage;

            [FieldOffset(2208)] // size = 1
            public CBool instanced;

            [FieldOffset(2212)] // size = 4
            public ecs_flags32_t flags;

            [FieldOffset(2216)] // size = 8
            public CString expr;

            [FieldOffset(2224)] // size = 8
            public CString name;
        }

        // Struct @ pipeline.h:63:16
        //	aarch64-apple-darwin (flecs/addons/pipeline.h)
        //	x86_64-pc-windows-msvc (flecs\addons\pipeline.h)
        //	x86_64-apple-darwin (flecs/addons/pipeline.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/pipeline.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/pipeline.h)
        //	aarch64-pc-windows-msvc (flecs\addons\pipeline.h)
        [StructLayout(LayoutKind.Explicit, Size = 2320, Pack = 8)]
        public struct ecs_pipeline_desc_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_entity_t entity;

            [FieldOffset(8)] // size = 2312
            public ecs_query_desc_t query;
        }

        // Struct @ app.h:29:16
        //	aarch64-apple-darwin (flecs/addons/app.h)
        //	x86_64-pc-windows-msvc (flecs\addons\app.h)
        //	x86_64-apple-darwin (flecs/addons/app.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/app.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/app.h)
        //	aarch64-pc-windows-msvc (flecs\addons\app.h)
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
        public struct ecs_app_desc_t
        {
            [FieldOffset(0)] // size = 4
            public float target_fps;

            [FieldOffset(4)] // size = 4
            public float delta_time;

            [FieldOffset(8)] // size = 4
            public int threads;

            [FieldOffset(12)] // size = 1
            public CBool enable_rest;

            [FieldOffset(13)] // size = 1
            public CBool enable_monitor;

            [FieldOffset(16)] // size = 8
            public ecs_app_init_action_t init;

            [FieldOffset(24)] // size = 8
            public void* ctx;
        }

        // Struct @ flecs.h:762:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 2392, Pack = 8)]
        public struct ecs_observer_desc_t
        {
            [FieldOffset(0)] // size = 4
            public int _canary;

            [FieldOffset(8)] // size = 8
            public ecs_entity_t entity;

            [FieldOffset(16)] // size = 2232
            public ecs_filter_desc_t filter;

            [FieldOffset(2248)] // size = 64
            public fixed byte _events[64]; // ecs_entity_t[8]

            public Span<ecs_entity_t> events
            {
                get
                {
                    fixed (ecs_observer_desc_t* @this = &this)
                    {
                        var pointer = &@this->_events[0];
                        var span = new Span<ecs_entity_t>(pointer, 8);
                        return span;
                    }
                }
            }

            [FieldOffset(2312)] // size = 1
            public CBool yield_existing;

            [FieldOffset(2320)] // size = 8
            public ecs_iter_action_t callback;

            [FieldOffset(2328)] // size = 8
            public ecs_run_action_t run;

            [FieldOffset(2336)] // size = 8
            public void* ctx;

            [FieldOffset(2344)] // size = 8
            public void* binding_ctx;

            [FieldOffset(2352)] // size = 8
            public ecs_ctx_free_t ctx_free;

            [FieldOffset(2360)] // size = 8
            public ecs_ctx_free_t binding_ctx_free;

            [FieldOffset(2368)] // size = 8
            public ecs_poly_t* observable;

            [FieldOffset(2376)] // size = 8
            public int* last_event_id;

            [FieldOffset(2384)] // size = 4
            public int term_index;
        }

        // Struct @ map.h:50:16
        //	aarch64-apple-darwin (flecs/private/map.h)
        //	x86_64-pc-windows-msvc (flecs\private\map.h)
        //	x86_64-apple-darwin (flecs/private/map.h)
        //	x86_64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-pc-windows-msvc (flecs\private\map.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_block_allocator_chunk_header_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_block_allocator_chunk_header_t* next;
        }

        // Struct @ monitor.h:36:9
        //	aarch64-apple-darwin (flecs/addons/monitor.h)
        //	x86_64-pc-windows-msvc (flecs\addons\monitor.h)
        //	x86_64-apple-darwin (flecs/addons/monitor.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/monitor.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/monitor.h)
        //	aarch64-pc-windows-msvc (flecs\addons\monitor.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 4)]
        public struct EcsStatsHeader
        {
            [FieldOffset(0)] // size = 4
            public float elapsed;

            [FieldOffset(4)] // size = 4
            public int reduce_count;
        }

        // Struct @ flecs.h:539:8
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 120, Pack = 8)]
        public struct ecs_type_hooks_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_xtor_t ctor;

            [FieldOffset(8)] // size = 8
            public ecs_xtor_t dtor;

            [FieldOffset(16)] // size = 8
            public ecs_copy_t copy;

            [FieldOffset(24)] // size = 8
            public ecs_move_t move;

            [FieldOffset(32)] // size = 8
            public ecs_copy_t copy_ctor;

            [FieldOffset(40)] // size = 8
            public ecs_move_t move_ctor;

            [FieldOffset(48)] // size = 8
            public ecs_move_t ctor_move_dtor;

            [FieldOffset(56)] // size = 8
            public ecs_move_t move_dtor;

            [FieldOffset(64)] // size = 8
            public ecs_iter_action_t on_add;

            [FieldOffset(72)] // size = 8
            public ecs_iter_action_t on_set;

            [FieldOffset(80)] // size = 8
            public ecs_iter_action_t on_remove;

            [FieldOffset(88)] // size = 8
            public void* ctx;

            [FieldOffset(96)] // size = 8
            public void* binding_ctx;

            [FieldOffset(104)] // size = 8
            public ecs_ctx_free_t ctx_free;

            [FieldOffset(112)] // size = 8
            public ecs_ctx_free_t binding_ctx_free;
        }

        // Struct @ meta.h:331:16
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [StructLayout(LayoutKind.Explicit, Size = 64, Pack = 8)]
        public struct ecs_meta_scope_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_entity_t type;

            [FieldOffset(8)] // size = 8
            public ecs_meta_type_op_t* ops;

            [FieldOffset(16)] // size = 4
            public int op_count;

            [FieldOffset(20)] // size = 4
            public int op_cur;

            [FieldOffset(24)] // size = 4
            public int elem_cur;

            [FieldOffset(32)] // size = 8
            public void* ptr;

            [FieldOffset(40)] // size = 8
            public EcsComponent* comp;

            [FieldOffset(48)] // size = 8
            public ecs_vector_t** vector;

            [FieldOffset(56)] // size = 1
            public CBool is_collection;

            [FieldOffset(57)] // size = 1
            public CBool is_inline_array;
        }

        // Struct @ flecs.h:3473:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 72, Pack = 8)]
        public struct ecs_event_desc_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_entity_t @event;

            [FieldOffset(8)] // size = 8
            public ecs_type_t* ids;

            [FieldOffset(16)] // size = 8
            public ecs_table_t* table;

            [FieldOffset(24)] // size = 8
            public ecs_table_t* other_table;

            [FieldOffset(32)] // size = 4
            public int offset;

            [FieldOffset(36)] // size = 4
            public int count;

            [FieldOffset(40)] // size = 8
            public void* param;

            [FieldOffset(48)] // size = 8
            public ecs_poly_t* observable;

            [FieldOffset(56)] // size = 1
            public CBool table_event;

            [FieldOffset(64)] // size = 8
            public ecs_entity_t relationship;
        }

        // Struct @ api_types.h:67:16
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct ecs_table_range_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_table_t* table;

            [FieldOffset(8)] // size = 4
            public int offset;

            [FieldOffset(12)] // size = 4
            public int count;
        }

        // Struct @ meta.h:575:16
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct ecs_vector_desc_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_entity_t entity;

            [FieldOffset(8)] // size = 8
            public ecs_entity_t type;
        }

        // Struct @ stats.h:120:16
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [StructLayout(LayoutKind.Explicit, Size = 6744, Pack = 4)]
        public struct ecs_system_stats_t
        {
            [FieldOffset(0)] // size = 4
            public int first_;

            [FieldOffset(4)] // size = 960
            public ecs_metric_t time_spent;

            [FieldOffset(964)] // size = 960
            public ecs_metric_t invoke_count;

            [FieldOffset(1924)] // size = 960
            public ecs_metric_t active;

            [FieldOffset(2884)] // size = 960
            public ecs_metric_t enabled;

            [FieldOffset(3844)] // size = 4
            public int last_;

            [FieldOffset(3848)] // size = 1
            public CBool task;

            [FieldOffset(3852)] // size = 2892
            public ecs_query_stats_t query;
        }

        // Struct @ stats.h:134:16
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        [StructLayout(LayoutKind.Explicit, Size = 96, Pack = 8)]
        public struct ecs_pipeline_stats_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_vector_t* systems;

            [FieldOffset(8)] // size = 72
            public ecs_map_t system_stats;

            [FieldOffset(80)] // size = 4
            public int t;

            [FieldOffset(84)] // size = 4
            public int system_count;

            [FieldOffset(88)] // size = 4
            public int active_system_count;

            [FieldOffset(92)] // size = 4
            public int rebuild_count;
        }

        // Struct @ api_types.h:74:16
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct ecs_var_t
        {
            [FieldOffset(0)] // size = 16
            public ecs_table_range_t range;

            [FieldOffset(16)] // size = 8
            public ecs_entity_t entity;
        }

        // Struct @ meta.h:206:16
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct ecs_enum_constant_t
        {
            [FieldOffset(0)] // size = 8
            public CString name;

            [FieldOffset(8)] // size = 4
            public int value;

            [FieldOffset(16)] // size = 8
            public ecs_entity_t constant;
        }

        // Struct @ rest.h:45:9
        //	aarch64-apple-darwin (flecs/addons/rest.h)
        //	x86_64-pc-windows-msvc (flecs\addons\rest.h)
        //	x86_64-apple-darwin (flecs/addons/rest.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/rest.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/rest.h)
        //	aarch64-pc-windows-msvc (flecs\addons\rest.h)
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct EcsRest
        {
            [FieldOffset(0)] // size = 2
            public ushort port;

            [FieldOffset(8)] // size = 8
            public CString ipaddr;

            [FieldOffset(16)] // size = 8
            public void* impl;
        }

        // Struct @ meta.h:310:16
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [StructLayout(LayoutKind.Explicit, Size = 56, Pack = 8)]
        public struct ecs_meta_type_op_t
        {
            [FieldOffset(0)] // size = 4
            public ecs_meta_type_op_kind_t kind;

            [FieldOffset(4)] // size = 4
            public ecs_size_t offset;

            [FieldOffset(8)] // size = 4
            public int count;

            [FieldOffset(16)] // size = 8
            public CString name;

            [FieldOffset(24)] // size = 4
            public int op_count;

            [FieldOffset(28)] // size = 4
            public ecs_size_t size;

            [FieldOffset(32)] // size = 8
            public ecs_entity_t type;

            [FieldOffset(40)] // size = 8
            public ecs_entity_t unit;

            [FieldOffset(48)] // size = 8
            public ecs_hashmap_t* members;
        }

        // Struct @ meta.h:589:16
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [StructLayout(LayoutKind.Explicit, Size = 1544, Pack = 8)]
        public struct ecs_struct_desc_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_entity_t entity;

            [FieldOffset(8)] // size = 1536
            public fixed byte _members[1536]; // ecs_member_t[32]

            public Span<ecs_member_t> members
            {
                get
                {
                    fixed (ecs_struct_desc_t* @this = &this)
                    {
                        var pointer = &@this->_members[0];
                        var span = new Span<ecs_member_t>(pointer, 32);
                        return span;
                    }
                }
            }
        }

        // Struct @ meta.h:183:16
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [StructLayout(LayoutKind.Explicit, Size = 48, Pack = 8)]
        public struct ecs_member_t
        {
            [FieldOffset(0)] // size = 8
            public CString name;

            [FieldOffset(8)] // size = 8
            public ecs_entity_t type;

            [FieldOffset(16)] // size = 4
            public int count;

            [FieldOffset(20)] // size = 4
            public int offset;

            [FieldOffset(24)] // size = 8
            public ecs_entity_t unit;

            [FieldOffset(32)] // size = 4
            public ecs_size_t size;

            [FieldOffset(40)] // size = 8
            public ecs_entity_t member;
        }

        // Struct @ flecs.h:482:8
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 64, Pack = 8)]
        public struct ecs_filter_t
        {
            [FieldOffset(0)] // size = 16
            public ecs_header_t hdr;

            [FieldOffset(16)] // size = 8
            public ecs_term_t* terms;

            [FieldOffset(24)] // size = 4
            public int term_count;

            [FieldOffset(28)] // size = 4
            public int term_count_actual;

            [FieldOffset(32)] // size = 1
            public CBool owned;

            [FieldOffset(33)] // size = 1
            public CBool terms_owned;

            [FieldOffset(36)] // size = 4
            public ecs_flags32_t flags;

            [FieldOffset(40)] // size = 8
            public CString name;

            [FieldOffset(48)] // size = 8
            public fixed byte _variable_names[8]; // char*[1]

            public Span<CString> variable_names
            {
                get
                {
                    fixed (ecs_filter_t* @this = &this)
                    {
                        var pointer = &@this->_variable_names[0];
                        var span = new Span<CString>(pointer, 1);
                        return span;
                    }
                }
            }

            [FieldOffset(56)] // size = 8
            public ecs_iterable_t iterable;
        }

        // Struct @ meta.h:532:16
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [StructLayout(LayoutKind.Explicit, Size = 776, Pack = 8)]
        public struct ecs_enum_desc_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_entity_t entity;

            [FieldOffset(8)] // size = 768
            public fixed byte _constants[768]; // ecs_enum_constant_t[32]

            public Span<ecs_enum_constant_t> constants
            {
                get
                {
                    fixed (ecs_enum_desc_t* @this = &this)
                    {
                        var pointer = &@this->_constants[0];
                        var span = new Span<ecs_enum_constant_t>(pointer, 32);
                        return span;
                    }
                }
            }
        }

        // Struct @ os_api.h:191:16
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 272, Pack = 8)]
        public struct ecs_os_api_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_os_api_init_t init_;

            [FieldOffset(8)] // size = 8
            public ecs_os_api_fini_t fini_;

            [FieldOffset(16)] // size = 8
            public ecs_os_api_malloc_t malloc_;

            [FieldOffset(24)] // size = 8
            public ecs_os_api_realloc_t realloc_;

            [FieldOffset(32)] // size = 8
            public ecs_os_api_calloc_t calloc_;

            [FieldOffset(40)] // size = 8
            public ecs_os_api_free_t free_;

            [FieldOffset(48)] // size = 8
            public ecs_os_api_strdup_t strdup_;

            [FieldOffset(56)] // size = 8
            public ecs_os_api_thread_new_t thread_new_;

            [FieldOffset(64)] // size = 8
            public ecs_os_api_thread_join_t thread_join_;

            [FieldOffset(72)] // size = 8
            public ecs_os_api_ainc_t ainc_;

            [FieldOffset(80)] // size = 8
            public ecs_os_api_ainc_t adec_;

            [FieldOffset(88)] // size = 8
            public ecs_os_api_mutex_new_t mutex_new_;

            [FieldOffset(96)] // size = 8
            public ecs_os_api_mutex_free_t mutex_free_;

            [FieldOffset(104)] // size = 8
            public ecs_os_api_mutex_lock_t mutex_lock_;

            [FieldOffset(112)] // size = 8
            public ecs_os_api_mutex_lock_t mutex_unlock_;

            [FieldOffset(120)] // size = 8
            public ecs_os_api_cond_new_t cond_new_;

            [FieldOffset(128)] // size = 8
            public ecs_os_api_cond_free_t cond_free_;

            [FieldOffset(136)] // size = 8
            public ecs_os_api_cond_signal_t cond_signal_;

            [FieldOffset(144)] // size = 8
            public ecs_os_api_cond_broadcast_t cond_broadcast_;

            [FieldOffset(152)] // size = 8
            public ecs_os_api_cond_wait_t cond_wait_;

            [FieldOffset(160)] // size = 8
            public ecs_os_api_sleep_t sleep_;

            [FieldOffset(168)] // size = 8
            public ecs_os_api_now_t now_;

            [FieldOffset(176)] // size = 8
            public ecs_os_api_get_time_t get_time_;

            [FieldOffset(184)] // size = 8
            public ecs_os_api_log_t log_;

            [FieldOffset(192)] // size = 8
            public ecs_os_api_abort_t abort_;

            [FieldOffset(200)] // size = 8
            public ecs_os_api_dlopen_t dlopen_;

            [FieldOffset(208)] // size = 8
            public ecs_os_api_dlproc_t dlproc_;

            [FieldOffset(216)] // size = 8
            public ecs_os_api_dlclose_t dlclose_;

            [FieldOffset(224)] // size = 8
            public ecs_os_api_module_to_path_t module_to_dl_;

            [FieldOffset(232)] // size = 8
            public ecs_os_api_module_to_path_t module_to_etc_;

            [FieldOffset(240)] // size = 4
            public int log_level_;

            [FieldOffset(244)] // size = 4
            public int log_indent_;

            [FieldOffset(248)] // size = 4
            public int log_last_error_;

            [FieldOffset(256)] // size = 8
            public long log_last_timestamp_;

            [FieldOffset(264)] // size = 4
            public ecs_flags32_t flags_;
        }

        // Struct @ meta.h:519:16
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct ecs_primitive_desc_t
        {
            [FieldOffset(0)] // size = 8
            public ecs_entity_t entity;

            [FieldOffset(8)] // size = 4
            public ecs_primitive_kind_t kind;
        }

        // Union @ api_types.h:222:5
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        [StructLayout(LayoutKind.Explicit, Size = 280, Pack = 8)]
        public struct ecs_iter_private_t_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 256
            public ecs_term_iter_t term;

            [FieldOffset(0)] // size = 280
            public ecs_filter_iter_t filter;

            [FieldOffset(0)] // size = 40
            public ecs_query_iter_t query;

            [FieldOffset(0)] // size = 56
            public ecs_rule_iter_t rule;

            [FieldOffset(0)] // size = 80
            public ecs_snapshot_iter_t snapshot;

            [FieldOffset(0)] // size = 12
            public ecs_page_iter_t page;

            [FieldOffset(0)] // size = 8
            public ecs_worker_iter_t worker;
        }

        // Struct @ strbuf.h:37:16
        //	aarch64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-pc-windows-msvc (flecs\private\strbuf.h)
        //	x86_64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-pc-windows-msvc (flecs\private\strbuf.h)
        [StructLayout(LayoutKind.Explicit, Size = 536, Pack = 8)]
        public struct ecs_strbuf_element_embedded
        {
            [FieldOffset(0)] // size = 24
            public ecs_strbuf_element super;

            [FieldOffset(24)] // size = 512
            public fixed byte _buf[512]; // char[512]

            public string buf
            {
                get
                {
                    fixed (ecs_strbuf_element_embedded* @this = &this)
                    {
                        var pointer = &@this->_buf[0];
                        var cString = new CString(pointer);
                        return Runtime.CStrings.String(cString);
                    }
                }
            }
        }

        // OpaqueType @ flecs.h:160:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct ecs_poly_t
        {
        }

        // OpaqueType @ snapshot.h:23:31
        //	aarch64-apple-darwin (flecs/addons/snapshot.h)
        //	x86_64-pc-windows-msvc (flecs\addons\snapshot.h)
        //	x86_64-apple-darwin (flecs/addons/snapshot.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/snapshot.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/snapshot.h)
        //	aarch64-pc-windows-msvc (flecs\addons\snapshot.h)
        [StructLayout(LayoutKind.Sequential)]
        public struct ecs_snapshot_t
        {
        }

        // OpaqueType @ api_types.h:182:12
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        [StructLayout(LayoutKind.Sequential)]
        public struct ecs_rule_op_ctx_t
        {
        }

        // OpaqueType @ flecs.h:212:29
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct ecs_mixins_t
        {
        }

        // OpaqueType @ flecs.h:176:28
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct ecs_world_t
        {
        }

        // OpaqueType @ vector.h:53:29
        //	aarch64-apple-darwin (flecs/private/vector.h)
        //	x86_64-pc-windows-msvc (flecs\private\vector.h)
        //	x86_64-apple-darwin (flecs/private/vector.h)
        //	x86_64-unknown-linux-gnu (flecs/private/vector.h)
        //	aarch64-unknown-linux-gnu (flecs/private/vector.h)
        //	aarch64-pc-windows-msvc (flecs\private\vector.h)
        [StructLayout(LayoutKind.Sequential)]
        public struct ecs_vector_t
        {
        }

        // OpaqueType @ flecs.h:191:27
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct ecs_rule_t
        {
        }

        // OpaqueType @ api_types.h:107:12
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        [StructLayout(LayoutKind.Sequential)]
        public struct ecs_table_cache_hdr_t
        {
        }

        // OpaqueType @ flecs.h:185:28
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct ecs_query_t
        {
        }

        // OpaqueType @ api_types.h:49:8
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        [StructLayout(LayoutKind.Sequential)]
        public struct ecs_table_record_t
        {
        }

        // OpaqueType @ api_types.h:46:39
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        [StructLayout(LayoutKind.Sequential)]
        public struct ecs_query_table_node_t
        {
        }

        // OpaqueType @ api_types.h:43:32
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        [StructLayout(LayoutKind.Sequential)]
        public struct ecs_id_record_t
        {
        }

        // OpaqueType @ flecs.h:179:28
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Sequential)]
        public struct ecs_table_t
        {
        }

        // OpaqueType @ http.h:40:34
        //	aarch64-apple-darwin (flecs/addons/http.h)
        //	x86_64-pc-windows-msvc (flecs\addons\http.h)
        //	x86_64-apple-darwin (flecs/addons/http.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-pc-windows-msvc (flecs\addons\http.h)
        [StructLayout(LayoutKind.Sequential)]
        public struct ecs_http_server_t
        {
        }

        // TypeAlias @ os_api.h:137:8
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_cond_wait_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_os_cond_t_Ecs_os_mutex_t_Void Data;

            public static implicit operator FnPtr_Ecs_os_cond_t_Ecs_os_mutex_t_Void(ecs_os_api_cond_wait_t data) => data.Data;
            public static implicit operator ecs_os_api_cond_wait_t(FnPtr_Ecs_os_cond_t_Ecs_os_mutex_t_Void data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:181:8
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_dlclose_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_os_dl_t_Void Data;

            public static implicit operator FnPtr_Ecs_os_dl_t_Void(ecs_os_api_dlclose_t data) => data.Data;
            public static implicit operator ecs_os_api_dlclose_t(FnPtr_Ecs_os_dl_t_Void data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:151:8
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_get_time_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_time_tPtr_Void Data;

            public static implicit operator FnPtr_Ecs_time_tPtr_Void(ecs_os_api_get_time_t data) => data.Data;
            public static implicit operator ecs_os_api_get_time_t(FnPtr_Ecs_time_tPtr_Void data) => new() { Data = data };
        }

        // TypeAlias @ flecs.h:358:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_copy_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_VoidPtr_VoidPtr_Int_Ecs_type_info_tPtr_Void Data;

            public static implicit operator FnPtr_VoidPtr_VoidPtr_Int_Ecs_type_info_tPtr_Void(ecs_copy_t data) => data.Data;
            public static implicit operator ecs_copy_t(FnPtr_VoidPtr_VoidPtr_Int_Ecs_type_info_tPtr_Void data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:167:8
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_abort_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Void Data;

            public static implicit operator FnPtr_Void(ecs_os_api_abort_t data) => data.Data;
            public static implicit operator ecs_os_api_abort_t(FnPtr_Void data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:159:8
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_log_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Int_CString_Int_CString_Void Data;

            public static implicit operator FnPtr_Int_CString_Int_CString_Void(ecs_os_api_log_t data) => data.Data;
            public static implicit operator ecs_os_api_log_t(FnPtr_Int_CString_Int_CString_Void data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:185:9
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_module_to_path_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_CString_CString Data;

            public static implicit operator FnPtr_CString_CString(ecs_os_api_module_to_path_t data) => data.Data;
            public static implicit operator ecs_os_api_module_to_path_t(FnPtr_CString_CString data) => new() { Data = data };
        }

        // TypeAlias @ flecs.h:330:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_module_action_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_world_tPtr_Void Data;

            public static implicit operator FnPtr_Ecs_world_tPtr_Void(ecs_module_action_t data) => data.Data;
            public static implicit operator ecs_module_action_t(FnPtr_Ecs_world_tPtr_Void data) => new() { Data = data };
        }

        // TypeAlias @ app.h:43:14
        //	aarch64-apple-darwin (flecs/addons/app.h)
        //	x86_64-pc-windows-msvc (flecs\addons\app.h)
        //	x86_64-apple-darwin (flecs/addons/app.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/app.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/app.h)
        //	aarch64-pc-windows-msvc (flecs\addons\app.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_app_run_action_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_world_tPtr_Ecs_app_desc_tPtr_Int Data;

            public static implicit operator FnPtr_Ecs_world_tPtr_Ecs_app_desc_tPtr_Int(ecs_app_run_action_t data) => data.Data;
            public static implicit operator ecs_app_run_action_t(FnPtr_Ecs_world_tPtr_Ecs_app_desc_tPtr_Int data) => new() { Data = data };
        }

        // TypeAlias @ flecs.h:365:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_move_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_VoidPtr_VoidPtr_Int_Ecs_type_info_tPtr_Void Data;

            public static implicit operator FnPtr_VoidPtr_VoidPtr_Int_Ecs_type_info_tPtr_Void(ecs_move_t data) => data.Data;
            public static implicit operator ecs_move_t(FnPtr_VoidPtr_VoidPtr_Int_Ecs_type_info_tPtr_Void data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:70:9
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_realloc_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_VoidPtr_Ecs_size_t_VoidPtr Data;

            public static implicit operator FnPtr_VoidPtr_Ecs_size_t_VoidPtr(ecs_os_api_realloc_t data) => data.Data;
            public static implicit operator ecs_os_api_realloc_t(FnPtr_VoidPtr_Ecs_size_t_VoidPtr data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:93:9
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_thread_join_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_os_thread_t_VoidPtr Data;

            public static implicit operator FnPtr_Ecs_os_thread_t_VoidPtr(ecs_os_api_thread_join_t data) => data.Data;
            public static implicit operator ecs_os_api_thread_join_t(FnPtr_Ecs_os_thread_t_VoidPtr data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:84:9
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_thread_callback_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_VoidPtr_VoidPtr Data;

            public static implicit operator FnPtr_VoidPtr_VoidPtr(ecs_os_thread_callback_t data) => data.Data;
            public static implicit operator ecs_os_thread_callback_t(FnPtr_VoidPtr_VoidPtr data) => new() { Data = data };
        }

        // TypeAlias @ flecs.h:352:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_xtor_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_VoidPtr_Int_Ecs_type_info_tPtr_Void Data;

            public static implicit operator FnPtr_VoidPtr_Int_Ecs_type_info_tPtr_Void(ecs_xtor_t data) => data.Data;
            public static implicit operator ecs_xtor_t(FnPtr_VoidPtr_Int_Ecs_type_info_tPtr_Void data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:46:19
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_dl_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public UIntPtr Data;

            public static implicit operator UIntPtr(ecs_os_dl_t data) => data.Data;
            public static implicit operator ecs_os_dl_t(UIntPtr data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:133:8
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_cond_broadcast_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_os_cond_t_Void Data;

            public static implicit operator FnPtr_Ecs_os_cond_t_Void(ecs_os_api_cond_broadcast_t data) => data.Data;
            public static implicit operator ecs_os_api_cond_broadcast_t(FnPtr_Ecs_os_cond_t_Void data) => new() { Data = data };
        }

        // TypeAlias @ app.h:25:14
        //	aarch64-apple-darwin (flecs/addons/app.h)
        //	x86_64-pc-windows-msvc (flecs\addons\app.h)
        //	x86_64-apple-darwin (flecs/addons/app.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/app.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/app.h)
        //	aarch64-pc-windows-msvc (flecs\addons\app.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_app_init_action_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_world_tPtr_Int Data;

            public static implicit operator FnPtr_Ecs_world_tPtr_Int(ecs_app_init_action_t data) => data.Data;
            public static implicit operator ecs_app_init_action_t(FnPtr_Ecs_world_tPtr_Int data) => new() { Data = data };
        }

        // TypeAlias @ flecs.h:164:18
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_id_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public ulong Data;

            public static implicit operator ulong(ecs_id_t data) => data.Data;
            public static implicit operator ecs_id_t(ulong data) => new() { Data = data };
        }

        // TypeAlias @ flecs.h:343:15
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_compare_action_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_VoidPtr_VoidPtr_Int Data;

            public static implicit operator FnPtr_VoidPtr_VoidPtr_Int(ecs_compare_action_t data) => data.Data;
            public static implicit operator ecs_compare_action_t(FnPtr_VoidPtr_VoidPtr_Int data) => new() { Data = data };
        }

        // TypeAlias @ flecs.h:312:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_sort_table_action_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_world_tPtr_Ecs_table_tPtr_Ecs_entity_tPtr_VoidPtr_Int_Int_Int_Ecs_order_by_action_t_Void Data;

            public static implicit operator FnPtr_Ecs_world_tPtr_Ecs_table_tPtr_Ecs_entity_tPtr_VoidPtr_Int_Int_Int_Ecs_order_by_action_t_Void(ecs_sort_table_action_t data) => data.Data;
            public static implicit operator ecs_sort_table_action_t(FnPtr_Ecs_world_tPtr_Ecs_table_tPtr_Ecs_entity_tPtr_VoidPtr_Int_Int_Int_Ecs_order_by_action_t_Void data) => new() { Data = data };
        }

        // TypeAlias @ http.h:98:16
        //	aarch64-apple-darwin (flecs/addons/http.h)
        //	x86_64-pc-windows-msvc (flecs\addons\http.h)
        //	x86_64-apple-darwin (flecs/addons/http.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-pc-windows-msvc (flecs\addons\http.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_http_reply_action_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_http_request_tPtr_Ecs_http_reply_tPtr_VoidPtr_CBool Data;

            public static implicit operator FnPtr_Ecs_http_request_tPtr_Ecs_http_reply_tPtr_VoidPtr_CBool(ecs_http_reply_action_t data) => data.Data;
            public static implicit operator ecs_http_reply_action_t(FnPtr_Ecs_http_request_tPtr_Ecs_http_reply_tPtr_VoidPtr_CBool data) => new() { Data = data };
        }

        // TypeAlias @ flecs.h:323:20
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_group_by_action_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_world_tPtr_Ecs_table_tPtr_Ecs_id_t_VoidPtr_Ulong Data;

            public static implicit operator FnPtr_Ecs_world_tPtr_Ecs_table_tPtr_Ecs_id_t_VoidPtr_Ulong(ecs_group_by_action_t data) => data.Data;
            public static implicit operator ecs_group_by_action_t(FnPtr_Ecs_world_tPtr_Ecs_table_tPtr_Ecs_id_t_VoidPtr_Ulong data) => new() { Data = data };
        }

        // TypeAlias @ map.h:36:18
        //	aarch64-apple-darwin (flecs/private/map.h)
        //	x86_64-pc-windows-msvc (flecs\private\map.h)
        //	x86_64-apple-darwin (flecs/private/map.h)
        //	x86_64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-unknown-linux-gnu (flecs/private/map.h)
        //	aarch64-pc-windows-msvc (flecs\private\map.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_map_key_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public ulong Data;

            public static implicit operator ulong(ecs_map_key_t data) => data.Data;
            public static implicit operator ecs_map_key_t(ulong data) => new() { Data = data };
        }

        // TypeAlias @ flecs.h:293:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_iter_next_action_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_iter_tPtr_CBool Data;

            public static implicit operator FnPtr_Ecs_iter_tPtr_CBool(ecs_iter_next_action_t data) => data.Data;
            public static implicit operator ecs_iter_next_action_t(FnPtr_Ecs_iter_tPtr_CBool data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:58:8
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_fini_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Void Data;

            public static implicit operator FnPtr_Void(ecs_os_api_fini_t data) => data.Data;
            public static implicit operator ecs_os_api_fini_t(FnPtr_Void data) => new() { Data = data };
        }

        // TypeAlias @ api_defines.h:103:17
        //	aarch64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_defines.h)
        //	x86_64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_defines.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_defines.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_defines.h)
        [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
        public struct ecs_size_t
        {
            [FieldOffset(0)] // size = 4, padding = 0
            public int Data;

            public static implicit operator int(ecs_size_t data) => data.Data;
            public static implicit operator ecs_size_t(int data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:43:19
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_thread_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public UIntPtr Data;

            public static implicit operator UIntPtr(ecs_os_thread_t data) => data.Data;
            public static implicit operator ecs_os_thread_t(UIntPtr data) => new() { Data = data };
        }

        // TypeAlias @ api_defines.h:97:17
        //	aarch64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_defines.h)
        //	x86_64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_defines.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_defines.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_defines.h)
        [StructLayout(LayoutKind.Explicit, Size = 1, Pack = 1)]
        public struct ecs_flags8_t
        {
            [FieldOffset(0)] // size = 1, padding = 0
            public byte Data;

            public static implicit operator byte(ecs_flags8_t data) => data.Data;
            public static implicit operator ecs_flags8_t(byte data) => new() { Data = data };
        }

        // TypeAlias @ api_defines.h:99:18
        //	aarch64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_defines.h)
        //	x86_64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_defines.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_defines.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_defines.h)
        [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
        public struct ecs_flags32_t
        {
            [FieldOffset(0)] // size = 4, padding = 0
            public uint Data;

            public static implicit operator uint(ecs_flags32_t data) => data.Data;
            public static implicit operator ecs_flags32_t(uint data) => new() { Data = data };
        }

        // TypeAlias @ flecs.h:301:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_iter_fini_action_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_iter_tPtr_Void Data;

            public static implicit operator FnPtr_Ecs_iter_tPtr_Void(ecs_iter_fini_action_t data) => data.Data;
            public static implicit operator ecs_iter_fini_action_t(FnPtr_Ecs_iter_tPtr_Void data) => new() { Data = data };
        }

        // TypeAlias @ flecs.h:257:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_run_action_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_iter_tPtr_Void Data;

            public static implicit operator FnPtr_Ecs_iter_tPtr_Void(ecs_run_action_t data) => data.Data;
            public static implicit operator ecs_run_action_t(FnPtr_Ecs_iter_tPtr_Void data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:125:8
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_cond_free_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_os_cond_t_Void Data;

            public static implicit operator FnPtr_Ecs_os_cond_t_Void(ecs_os_api_cond_free_t data) => data.Data;
            public static implicit operator ecs_os_api_cond_free_t(FnPtr_Ecs_os_cond_t_Void data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:66:8
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_free_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_VoidPtr_Void Data;

            public static implicit operator FnPtr_VoidPtr_Void(ecs_os_api_free_t data) => data.Data;
            public static implicit operator ecs_os_api_free_t(FnPtr_VoidPtr_Void data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:54:8
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_init_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Void Data;

            public static implicit operator FnPtr_Void(ecs_os_api_init_t data) => data.Data;
            public static implicit operator ecs_os_api_init_t(FnPtr_Void data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:79:9
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_strdup_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_CString_CString Data;

            public static implicit operator FnPtr_CString_CString(ecs_os_api_strdup_t data) => data.Data;
            public static implicit operator ecs_os_api_strdup_t(FnPtr_CString_CString data) => new() { Data = data };
        }

        // TypeAlias @ flecs.h:339:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_ctx_free_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_VoidPtr_Void Data;

            public static implicit operator FnPtr_VoidPtr_Void(ecs_ctx_free_t data) => data.Data;
            public static implicit operator ecs_ctx_free_t(FnPtr_VoidPtr_Void data) => new() { Data = data };
        }

        // TypeAlias @ flecs.h:334:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_fini_action_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_world_tPtr_VoidPtr_Void Data;

            public static implicit operator FnPtr_Ecs_world_tPtr_VoidPtr_Void(ecs_fini_action_t data) => data.Data;
            public static implicit operator ecs_fini_action_t(FnPtr_Ecs_world_tPtr_VoidPtr_Void data) => new() { Data = data };
        }

        // TypeAlias @ flecs.h:167:18
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_entity_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public ecs_id_t Data;

            public static implicit operator ecs_id_t(ecs_entity_t data) => data.Data;
            public static implicit operator ecs_entity_t(ecs_id_t data) => new() { Data = data };
        }

        // TypeAlias @ flecs.h:266:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_iter_action_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_iter_tPtr_Void Data;

            public static implicit operator FnPtr_Ecs_iter_tPtr_Void(ecs_iter_action_t data) => data.Data;
            public static implicit operator ecs_iter_action_t(FnPtr_Ecs_iter_tPtr_Void data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:108:8
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_mutex_lock_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_os_mutex_t_Void Data;

            public static implicit operator FnPtr_Ecs_os_mutex_t_Void(ecs_os_api_mutex_lock_t data) => data.Data;
            public static implicit operator ecs_os_api_mutex_lock_t(FnPtr_Ecs_os_mutex_t_Void data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:155:12
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_now_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ulong Data;

            public static implicit operator FnPtr_Ulong(ecs_os_api_now_t data) => data.Data;
            public static implicit operator ecs_os_api_now_t(FnPtr_Ulong data) => new() { Data = data };
        }

        // TypeAlias @ flecs.h:305:15
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_order_by_action_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_entity_t_VoidPtr_Ecs_entity_t_VoidPtr_Int Data;

            public static implicit operator FnPtr_Ecs_entity_t_VoidPtr_Ecs_entity_t_VoidPtr_Int(ecs_order_by_action_t data) => data.Data;
            public static implicit operator ecs_order_by_action_t(FnPtr_Ecs_entity_t_VoidPtr_Ecs_entity_t_VoidPtr_Int data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:45:19
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_mutex_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public UIntPtr Data;

            public static implicit operator UIntPtr(ecs_os_mutex_t data) => data.Data;
            public static implicit operator ecs_os_mutex_t(UIntPtr data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:116:8
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_mutex_free_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_os_mutex_t_Void Data;

            public static implicit operator FnPtr_Ecs_os_mutex_t_Void(ecs_os_api_mutex_free_t data) => data.Data;
            public static implicit operator ecs_os_api_mutex_free_t(FnPtr_Ecs_os_mutex_t_Void data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:176:17
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_dlproc_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_os_dl_t_CString_Ecs_os_proc_t Data;

            public static implicit operator FnPtr_Ecs_os_dl_t_CString_Ecs_os_proc_t(ecs_os_api_dlproc_t data) => data.Data;
            public static implicit operator ecs_os_api_dlproc_t(FnPtr_Ecs_os_dl_t_CString_Ecs_os_proc_t data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:129:8
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_cond_signal_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_os_cond_t_Void Data;

            public static implicit operator FnPtr_Ecs_os_cond_t_Void(ecs_os_api_cond_signal_t data) => data.Data;
            public static implicit operator ecs_os_api_cond_signal_t(FnPtr_Ecs_os_cond_t_Void data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:75:9
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_calloc_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_size_t_VoidPtr Data;

            public static implicit operator FnPtr_Ecs_size_t_VoidPtr(ecs_os_api_calloc_t data) => data.Data;
            public static implicit operator ecs_os_api_calloc_t(FnPtr_Ecs_size_t_VoidPtr data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:142:8
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_sleep_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Int_Int_Void Data;

            public static implicit operator FnPtr_Int_Int_Void(ecs_os_api_sleep_t data) => data.Data;
            public static implicit operator ecs_os_api_sleep_t(FnPtr_Int_Int_Void data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:44:19
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_cond_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public UIntPtr Data;

            public static implicit operator UIntPtr(ecs_os_cond_t data) => data.Data;
            public static implicit operator ecs_os_cond_t(UIntPtr data) => new() { Data = data };
        }

        // TypeAlias @ api_defines.h:100:18
        //	aarch64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_defines.h)
        //	x86_64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_defines.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_defines.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_defines.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_flags64_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public ulong Data;

            public static implicit operator ulong(ecs_flags64_t data) => data.Data;
            public static implicit operator ecs_flags64_t(ulong data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:104:18
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_mutex_new_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_os_mutex_t Data;

            public static implicit operator FnPtr_Ecs_os_mutex_t(ecs_os_api_mutex_new_t data) => data.Data;
            public static implicit operator ecs_os_api_mutex_new_t(FnPtr_Ecs_os_mutex_t data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:62:9
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_malloc_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_size_t_VoidPtr Data;

            public static implicit operator FnPtr_Ecs_size_t_VoidPtr(ecs_os_api_malloc_t data) => data.Data;
            public static implicit operator ecs_os_api_malloc_t(FnPtr_Ecs_size_t_VoidPtr data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:98:7
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_ainc_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_IntPtr_Int Data;

            public static implicit operator FnPtr_IntPtr_Int(ecs_os_api_ainc_t data) => data.Data;
            public static implicit operator ecs_os_api_ainc_t(FnPtr_IntPtr_Int data) => new() { Data = data };
        }

        // TypeAlias @ app.h:48:14
        //	aarch64-apple-darwin (flecs/addons/app.h)
        //	x86_64-pc-windows-msvc (flecs\addons\app.h)
        //	x86_64-apple-darwin (flecs/addons/app.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/app.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/app.h)
        //	aarch64-pc-windows-msvc (flecs\addons\app.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_app_frame_action_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_world_tPtr_Ecs_app_desc_tPtr_Int Data;

            public static implicit operator FnPtr_Ecs_world_tPtr_Ecs_app_desc_tPtr_Int(ecs_app_frame_action_t data) => data.Data;
            public static implicit operator ecs_app_frame_action_t(FnPtr_Ecs_world_tPtr_Ecs_app_desc_tPtr_Int data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:88:19
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_thread_new_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_os_thread_callback_t_VoidPtr_Ecs_os_thread_t Data;

            public static implicit operator FnPtr_Ecs_os_thread_callback_t_VoidPtr_Ecs_os_thread_t(ecs_os_api_thread_new_t data) => data.Data;
            public static implicit operator ecs_os_api_thread_new_t(FnPtr_Ecs_os_thread_callback_t_VoidPtr_Ecs_os_thread_t data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:172:15
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_dlopen_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_CString_Ecs_os_dl_t Data;

            public static implicit operator FnPtr_CString_Ecs_os_dl_t(ecs_os_api_dlopen_t data) => data.Data;
            public static implicit operator ecs_os_api_dlopen_t(FnPtr_CString_Ecs_os_dl_t data) => new() { Data = data };
        }

        // TypeAlias @ flecs.h:348:20
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_hash_value_action_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_VoidPtr_Ulong Data;

            public static implicit operator FnPtr_VoidPtr_Ulong(ecs_hash_value_action_t data) => data.Data;
            public static implicit operator ecs_hash_value_action_t(FnPtr_VoidPtr_Ulong data) => new() { Data = data };
        }

        // TypeAlias @ flecs.h:280:16
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_iter_init_action_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_world_tPtr_Ecs_poly_tPtr_Ecs_iter_tPtr_Ecs_term_tPtr_Void Data;

            public static implicit operator FnPtr_Ecs_world_tPtr_Ecs_poly_tPtr_Ecs_iter_tPtr_Ecs_term_tPtr_Void(ecs_iter_init_action_t data) => data.Data;
            public static implicit operator ecs_iter_init_action_t(FnPtr_Ecs_world_tPtr_Ecs_poly_tPtr_Ecs_iter_tPtr_Ecs_term_tPtr_Void data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:50:16
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_proc_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Void Data;

            public static implicit operator FnPtr_Void(ecs_os_proc_t data) => data.Data;
            public static implicit operator ecs_os_proc_t(FnPtr_Void data) => new() { Data = data };
        }

        // TypeAlias @ os_api.h:121:17
        //	aarch64-apple-darwin (flecs/os_api.h)
        //	x86_64-pc-windows-msvc (flecs\os_api.h)
        //	x86_64-apple-darwin (flecs/os_api.h)
        //	x86_64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-unknown-linux-gnu (flecs/os_api.h)
        //	aarch64-pc-windows-msvc (flecs\os_api.h)
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ecs_os_api_cond_new_t
        {
            [FieldOffset(0)] // size = 8, padding = 0
            public FnPtr_Ecs_os_cond_t Data;

            public static implicit operator FnPtr_Ecs_os_cond_t(ecs_os_api_cond_new_t data) => data.Data;
            public static implicit operator ecs_os_api_cond_new_t(FnPtr_Ecs_os_cond_t data) => new() { Data = data };
        }

        // Enum @ api_types.h:136:14
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        public enum ecs_iter_kind_t : int
        {
            EcsIterEvalCondition = 0,
            EcsIterEvalTables = 1,
            EcsIterEvalChain = 2,
            EcsIterEvalNone = 3
        }

        // Enum @ flecs.h:403:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        public enum ecs_inout_kind_t : int
        {
            EcsInOutDefault = 0,
            EcsInOutNone = 1,
            EcsInOut = 2,
            EcsIn = 3,
            EcsOut = 4
        }

        // Enum @ flecs.h:412:14
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        public enum ecs_oper_kind_t : int
        {
            EcsAnd = 0,
            EcsOr = 1,
            EcsNot = 2,
            EcsOptional = 3,
            EcsAndFrom = 4,
            EcsOrFrom = 5,
            EcsNotFrom = 6
        }

        // Enum @ meta.h:131:14
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        public enum ecs_type_kind_t : int
        {
            EcsPrimitiveType = 0,
            EcsBitmaskType = 1,
            EcsEnumType = 2,
            EcsStructType = 3,
            EcsArrayType = 4,
            EcsVectorType = 5,
            EcsTypeKindLast = 5
        }

        // Enum @ meta.h:278:14
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        public enum ecs_meta_type_op_kind_t : int
        {
            EcsOpArray = 0,
            EcsOpVector = 1,
            EcsOpPush = 2,
            EcsOpPop = 3,
            EcsOpScope = 4,
            EcsOpEnum = 5,
            EcsOpBitmask = 6,
            EcsOpPrimitive = 7,
            EcsOpBool = 8,
            EcsOpChar = 9,
            EcsOpByte = 10,
            EcsOpU8 = 11,
            EcsOpU16 = 12,
            EcsOpU32 = 13,
            EcsOpU64 = 14,
            EcsOpI8 = 15,
            EcsOpI16 = 16,
            EcsOpI32 = 17,
            EcsOpI64 = 18,
            EcsOpF32 = 19,
            EcsOpF64 = 20,
            EcsOpUPtr = 21,
            EcsOpIPtr = 22,
            EcsOpString = 23,
            EcsOpEntity = 24
        }

        // Enum @ http.h:58:9
        //	aarch64-apple-darwin (flecs/addons/http.h)
        //	x86_64-pc-windows-msvc (flecs\addons\http.h)
        //	x86_64-apple-darwin (flecs/addons/http.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-pc-windows-msvc (flecs\addons\http.h)
        public enum ecs_http_method_t : int
        {
            EcsHttpGet = 0,
            EcsHttpPost = 1,
            EcsHttpPut = 2,
            EcsHttpDelete = 3,
            EcsHttpOptions = 4,
            EcsHttpMethodUnsupported = 5
        }

        // Enum @ meta.h:150:14
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        public enum ecs_primitive_kind_t : int
        {
            EcsBool = 1,
            EcsChar = 2,
            EcsByte = 3,
            EcsU8 = 4,
            EcsU16 = 5,
            EcsU32 = 6,
            EcsU64 = 7,
            EcsI8 = 8,
            EcsI16 = 9,
            EcsI32 = 10,
            EcsI64 = 11,
            EcsF32 = 12,
            EcsF64 = 13,
            EcsUPtr = 14,
            EcsIPtr = 15,
            EcsString = 16,
            EcsEntity = 17,
            EcsPrimitiveKindLast = 17
        }

        // MacroObject @ log.h:495:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_COLUMN_IS_NOT_SHARED = 42;

        // MacroObject @ log.h:470:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_OUT_OF_MEMORY = 4;

        // MacroObject @ api_support.h:38:9
        //	aarch64-apple-darwin (flecs/private/api_support.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_support.h)
        //	x86_64-apple-darwin (flecs/private/api_support.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_support.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_support.h)
        public const int FLECS__E0 = 0;

        // MacroObject @ api_flags.h:34:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsOsApiLogWithTimeDelta = 8;

        // MacroObject @ api_flags.h:53:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIdOnDeletePanic = 4;

        // MacroObject @ api_flags.h:95:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIterIsInstanced = 4;

        // MacroObject @ api_flags.h:166:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsAperiodicEmptyTables = 2;

        // MacroObject @ api_defines.h:171:9
        //	aarch64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_defines.h)
        //	x86_64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_defines.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_defines.h)
        public const ulong ECS_ID_FLAGS_MASK = 18374686479671623680;

        // MacroObject @ log.h:500:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_LOCKED_STORAGE = 71;

        // MacroObject @ api_flags.h:64:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIdExclusive = 64;

        // MacroObject @ log.h:501:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_INVALID_FROM_WORKER = 72;

        // MacroObject @ api_flags.h:158:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsQueryHasOutColumns = 16;

        // MacroObject @ api_defines.h:155:9
        //	aarch64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_defines.h)
        //	x86_64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_defines.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_defines.h)
        public const int ecs_rule_t_magic = 1701016437;

        // MacroObject @ api_defines.h:166:9
        //	aarch64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_defines.h)
        //	x86_64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_defines.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_defines.h)
        public const uint ECS_ROW_FLAGS_MASK = 4026531840;

        // MacroObject @ api_flags.h:51:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIdOnDeleteRemove = 1;

        // MacroObject @ api_defines.h:152:9
        //	aarch64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_defines.h)
        //	x86_64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_defines.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_defines.h)
        public const int ecs_world_t_magic = 1701016439;

        // MacroObject @ api_flags.h:115:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsFilterPopulate = 512;

        // MacroObject @ api_types.h:203:9
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        public const int flecs_iter_cache_all = 255;

        // MacroObject @ api_flags.h:130:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsTableHasDtors = 512;

        // MacroObject @ api_flags.h:59:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIdOnDeleteObjectPanic = 32;

        // MacroObject @ log.h:485:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_INVALID_COMPONENT_ALIGNMENT = 24;

        // MacroObject @ api_flags.h:137:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsTableHasOnAdd = 32768;

        // MacroObject @ api_support.h:31:9
        //	aarch64-apple-darwin (flecs/private/api_support.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_support.h)
        //	x86_64-apple-darwin (flecs/private/api_support.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_support.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_support.h)
        public const int ECS_MAX_TOKEN_SIZE = 256;

        // MacroObject @ log.h:473:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_INTERNAL_ERROR = 7;

        // MacroObject @ log.h:513:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public static string ECS_MAGENTA = "[0;35m";

        // MacroObject @ api_flags.h:71:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIdHasOnAdd = 32768;

        // MacroObject @ api_flags.h:135:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsTableHasOverrides = 16384;

        // MacroObject @ log.h:518:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public static string ECS_BOLD = "[1;49m";

        // MacroObject @ log.h:491:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_ALREADY_IN_USE = 30;

        // MacroObject @ api_flags.h:147:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsTableHasAddActions = 168200;

        // MacroObject @ http.h:30:9
        //	aarch64-apple-darwin (flecs/addons/http.h)
        //	x86_64-pc-windows-msvc (flecs\addons\http.h)
        //	x86_64-apple-darwin (flecs/addons/http.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-pc-windows-msvc (flecs\addons\http.h)
        public const int ECS_HTTP_HEADER_COUNT_MAX = 32;

        // MacroObject @ api_defines.h:158:9
        //	aarch64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_defines.h)
        //	x86_64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_defines.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_defines.h)
        public const int ecs_trigger_t_magic = 1701016434;

        // MacroObject @ api_flags.h:57:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIdOnDeleteObjectRemove = 8;

        // MacroObject @ api_flags.h:20:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsWorldQuit = 4;

        // MacroObject @ api_flags.h:69:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIdUnion = 2048;

        // MacroObject @ flecs.h:232:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        public const int ECS_OBSERVER_DESC_EVENT_COUNT_MAX = 8;

        // MacroObject @ flecs.h:238:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        public const int ECS_CACHE_SIZE = 4;

        // MacroObject @ api_flags.h:66:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIdAcyclic = 256;

        // MacroObject @ api_flags.h:93:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIterIsValid = 1;

        // MacroObject @ flecs.h:223:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        public const int ECS_ID_CACHE_SIZE = 32;

        // MacroObject @ api_flags.h:139:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsTableHasOnSet = 131072;

        // MacroObject @ api_flags.h:72:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIdHasOnRemove = 65536;

        // MacroObject @ api_flags.h:155:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsQueryHasRefs = 2;

        // MacroObject @ log.h:514:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public static string ECS_CYAN = "[0;36m";

        // MacroObject @ api_flags.h:99:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIterNoResults = 64;

        // MacroObject @ api_flags.h:142:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsTableMarkedForDelete = 1073741824;

        // MacroObject @ api_flags.h:109:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsFilterMatchPrefab = 8;

        // MacroObject @ log.h:496:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_COLUMN_IS_SHARED = 43;

        // MacroObject @ api_flags.h:110:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsFilterMatchDisabled = 16;

        // MacroObject @ api_flags.h:145:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsTableHasLifecycle = 768;

        // MacroObject @ api_flags.h:78:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIdMarkedForDelete = 1073741824;

        // MacroObject @ api_flags.h:97:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIterTableOnly = 16;

        // MacroObject @ log.h:494:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_COLUMN_INDEX_OUT_OF_RANGE = 41;

        // MacroObject @ api_flags.h:60:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIdOnDeleteObjectMask = 56;

        // MacroObject @ api_flags.h:128:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsTableIsDisabled = 128;

        // MacroObject @ api_flags.h:58:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIdOnDeleteObjectDelete = 16;

        // MacroObject @ api_flags.h:75:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIdEventMask = 491520;

        // MacroObject @ flecs.h:427:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        public const uint EcsParent = 32;

        // MacroObject @ log.h:510:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public static string ECS_GREEN = "[0;32m";

        // MacroObject @ api_types.h:199:9
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        public const uint flecs_iter_cache_sizes = 8;

        // MacroObject @ api_flags.h:54:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIdOnDeleteMask = 7;

        // MacroObject @ api_flags.h:42:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsEntityObservedId = 1073741824;

        // MacroObject @ api_types.h:196:9
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        public const uint flecs_iter_cache_ids = 1;

        // MacroObject @ log.h:488:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_INCONSISTENT_COMPONENT_ACTION = 27;

        // MacroObject @ api_defines.h:153:9
        //	aarch64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_defines.h)
        //	x86_64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_defines.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_defines.h)
        public const int ecs_stage_t_magic = 1701016435;

        // MacroObject @ log.h:479:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_CYCLE_DETECTED = 13;

        // MacroObject @ stats.h:18:9
        //	aarch64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-pc-windows-msvc (flecs\addons\stats.h)
        //	x86_64-apple-darwin (flecs/addons/stats.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/stats.h)
        //	aarch64-pc-windows-msvc (flecs\addons\stats.h)
        public const int ECS_STAT_WINDOW = 60;

        // MacroObject @ flecs.h:1180:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        public const int EcsFirstUserEntityId = 384;

        // MacroObject @ api_defines.h:165:9
        //	aarch64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_defines.h)
        //	x86_64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_defines.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_defines.h)
        public const uint ECS_ROW_MASK = 268435455;

        // MacroObject @ log.h:497:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_COLUMN_TYPE_MISMATCH = 45;

        // MacroObject @ api_defines.h:173:9
        //	aarch64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_defines.h)
        //	x86_64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_defines.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_defines.h)
        public const ulong ECS_GENERATION_MASK = 281470681743360;

        // MacroObject @ log.h:509:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public static string ECS_RED = "[0;31m";

        // MacroObject @ log.h:515:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public static string ECS_WHITE = "[1;37m";

        // MacroObject @ api_flags.h:100:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIterIgnoreThis = 128;

        // MacroObject @ log.h:478:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_ID_IN_USE = 12;

        // MacroObject @ api_flags.h:146:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsTableIsComplex = 13056;

        // MacroObject @ api_flags.h:124:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsTableHasIsA = 8;

        // MacroObject @ log.h:483:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_NOT_A_COMPONENT = 22;

        // MacroObject @ api_flags.h:22:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsWorldMeasureFrameTime = 16;

        // MacroObject @ api_flags.h:52:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIdOnDeleteDelete = 2;

        // MacroObject @ api_flags.h:41:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsEntityObserved = 2147483648;

        // MacroObject @ flecs.h:423:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        public const uint EcsSelf = 2;

        // MacroObject @ log.h:476:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_OPERATION_FAILED = 10;

        // MacroObject @ api_flags.h:68:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIdWith = 1024;

        // MacroObject @ strbuf.h:27:9
        //	aarch64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-pc-windows-msvc (flecs\private\strbuf.h)
        //	x86_64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-pc-windows-msvc (flecs\private\strbuf.h)
        public const int ECS_STRBUF_ELEMENT_SIZE = 511;

        // MacroObject @ api_types.h:202:9
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        public const uint flecs_iter_cache_variables = 64;

        // MacroObject @ api_flags.h:24:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsWorldMultiThreaded = 64;

        // MacroObject @ log.h:472:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_UNSUPPORTED = 6;

        // MacroObject @ log.h:471:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_OUT_OF_RANGE = 5;

        // MacroObject @ strbuf.h:28:9
        //	aarch64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-pc-windows-msvc (flecs\private\strbuf.h)
        //	x86_64-apple-darwin (flecs/private/strbuf.h)
        //	x86_64-unknown-linux-gnu (flecs/private/strbuf.h)
        //	aarch64-pc-windows-msvc (flecs\private\strbuf.h)
        public const int ECS_STRBUF_MAX_LIST_DEPTH = 32;

        // MacroObject @ api_flags.h:44:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsEntityObservedAcyclic = 268435456;

        // MacroObject @ api_flags.h:73:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIdHasOnSet = 131072;

        // MacroObject @ flecs.h:426:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        public const uint EcsCascade = 16;

        // MacroObject @ log.h:467:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_INVALID_OPERATION = 1;

        // MacroObject @ http.h:33:9
        //	aarch64-apple-darwin (flecs/addons/http.h)
        //	x86_64-pc-windows-msvc (flecs\addons\http.h)
        //	x86_64-apple-darwin (flecs/addons/http.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/http.h)
        //	aarch64-pc-windows-msvc (flecs\addons\http.h)
        public const int ECS_HTTP_QUERY_PARAM_COUNT_MAX = 32;

        // MacroObject @ api_flags.h:32:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsOsApiLogWithColors = 2;

        // MacroObject @ log.h:499:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_INVALID_WHILE_READONLY = 70;

        // MacroObject @ flecs.h:229:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        public const int ECS_TERM_DESC_CACHE_SIZE = 16;

        // MacroObject @ api_flags.h:31:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsOsApiHighResolutionTimer = 1;

        // MacroObject @ log.h:477:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_INVALID_CONVERSION = 11;

        // MacroObject @ api_flags.h:112:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsFilterMatchAnything = 64;

        // MacroObject @ flecs.h:226:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        public const int ECS_TERM_CACHE_SIZE = 4;

        // MacroObject @ log.h:517:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public static string ECS_NORMAL = "[0;49m";

        // MacroObject @ api_flags.h:21:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsWorldFini = 8;

        // MacroObject @ api_flags.h:157:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsQueryIsOrphaned = 8;

        // MacroObject @ flecs.h:235:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        public const int ECS_COUNT_MAX = 64;

        // MacroObject @ log.h:481:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_INCONSISTENT_NAME = 20;

        // MacroObject @ api_flags.h:132:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsTableHasMove = 2048;

        // MacroObject @ api_flags.h:122:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsTableHasBuiltins = 2;

        // MacroObject @ api_defines.h:159:9
        //	aarch64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_defines.h)
        //	x86_64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_defines.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_defines.h)
        public const int ecs_observer_t_magic = 1701016418;

        // MacroObject @ api_defines.h:154:9
        //	aarch64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_defines.h)
        //	x86_64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_defines.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_defines.h)
        public const int ecs_query_t_magic = 1701016433;

        // MacroObject @ api_flags.h:96:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIterHasShared = 8;

        // MacroObject @ log.h:516:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public static string ECS_GREY = "[0;37m";

        // MacroObject @ api_defines.h:157:9
        //	aarch64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_defines.h)
        //	x86_64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_defines.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_defines.h)
        public const int ecs_filter_t_magic = 1701016422;

        // MacroObject @ flecs.h:428:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        public const uint EcsIsVariable = 64;

        // MacroObject @ flecs.h:429:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        public const uint EcsIsEntity = 128;

        // MacroObject @ api_flags.h:125:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsTableHasChildOf = 16;

        // MacroObject @ flecs.h:424:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        public const uint EcsUp = 4;

        // MacroObject @ flecs.h:431:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        public const uint EcsTraverseFlags = 62;

        // MacroObject @ api_flags.h:94:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIterIsFilter = 2;

        // MacroObject @ api_flags.h:23:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsWorldMeasureSystemTime = 32;

        // MacroObject @ log.h:486:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_COMPONENT_NOT_REGISTERED = 25;

        // MacroObject @ rest.h:40:9
        //	aarch64-apple-darwin (flecs/addons/rest.h)
        //	x86_64-pc-windows-msvc (flecs\addons\rest.h)
        //	x86_64-apple-darwin (flecs/addons/rest.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/rest.h)
        //	aarch64-pc-windows-msvc (flecs\addons\rest.h)
        public const int ECS_REST_DEFAULT_PORT = 27750;

        // MacroObject @ api_flags.h:18:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsWorldQuitWorkers = 1;

        // MacroObject @ api_flags.h:129:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsTableHasCtors = 256;

        // MacroObject @ api_flags.h:127:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsTableHasModule = 64;

        // MacroObject @ log.h:493:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_ACCESS_VIOLATION = 40;

        // MacroObject @ api_types.h:197:9
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        public const uint flecs_iter_cache_columns = 2;

        // MacroObject @ flecs.h:922:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        public const ulong ECS_ID_FLAG_BIT = 9223372036854775808;

        // MacroObject @ api_defines.h:172:9
        //	aarch64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_defines.h)
        //	x86_64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_defines.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_defines.h)
        public const ulong ECS_ENTITY_MASK = 4294967295;

        // MacroObject @ api_flags.h:108:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsFilterMatchOnlyThis = 4;

        // MacroObject @ api_flags.h:167:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsAperiodicComponentMonitors = 4;

        // MacroObject @ api_flags.h:43:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsEntityObservedTarget = 536870912;

        // MacroObject @ vector.h:43:9
        //	aarch64-apple-darwin (flecs/private/vector.h)
        //	x86_64-pc-windows-msvc (flecs\private\vector.h)
        //	x86_64-apple-darwin (flecs/private/vector.h)
        //	x86_64-unknown-linux-gnu (flecs/private/vector.h)
        //	aarch64-pc-windows-msvc (flecs\private\vector.h)
        public const int ECS_VECTOR_T_SIZE = 16;

        // MacroObject @ api_flags.h:74:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIdHasUnSet = 262144;

        // MacroObject @ api_flags.h:67:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIdTag = 512;

        // MacroObject @ log.h:512:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public static string ECS_BLUE = "[0;34m";

        // MacroObject @ api_flags.h:168:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsAperiodicEmptyQueries = 16;

        // MacroObject @ flecs.h:425:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        public const uint EcsDown = 8;

        // MacroObject @ api_flags.h:19:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsWorldReadonly = 2;

        // MacroObject @ meta.h:329:9
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        public const int ECS_META_MAX_SCOPE_DEPTH = 32;

        // MacroObject @ api_types.h:200:9
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        public const uint flecs_iter_cache_ptrs = 16;

        // MacroObject @ api_flags.h:114:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsFilterIsInstanced = 256;

        // MacroObject @ meta.h:70:9
        //	aarch64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-pc-windows-msvc (flecs\addons\meta.h)
        //	x86_64-apple-darwin (flecs/addons/meta.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/meta.h)
        //	aarch64-pc-windows-msvc (flecs\addons\meta.h)
        public const int ECS_MEMBER_DESC_CACHE_SIZE = 32;

        // MacroObject @ api_flags.h:134:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsTableHasToggle = 8192;

        // MacroObject @ api_flags.h:33:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsOsApiLogWithTimeStamp = 4;

        // MacroObject @ log.h:511:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public static string ECS_YELLOW = "[0;33m";

        // MacroObject @ log.h:468:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_INVALID_PARAMETER = 2;

        // MacroObject @ log.h:484:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_INVALID_COMPONENT_SIZE = 23;

        // MacroObject @ api_flags.h:107:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsFilterMatchThis = 2;

        // MacroObject @ log.h:475:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_MISSING_OS_API = 9;

        // MacroObject @ api_support.h:24:9
        //	aarch64-apple-darwin (flecs/private/api_support.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_support.h)
        //	x86_64-apple-darwin (flecs/private/api_support.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_support.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_support.h)
        public const int ECS_HI_COMPONENT_ID = 256;

        // MacroObject @ api_support.h:28:9
        //	aarch64-apple-darwin (flecs/private/api_support.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_support.h)
        //	x86_64-apple-darwin (flecs/private/api_support.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_support.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_support.h)
        public const int ECS_MAX_RECURSION = 512;

        // MacroObject @ api_types.h:198:9
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        public const uint flecs_iter_cache_sources = 4;

        // MacroObject @ api_flags.h:138:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsTableHasOnRemove = 65536;

        // MacroObject @ log.h:482:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_NAME_IN_USE = 21;

        // MacroObject @ api_flags.h:98:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIterEntityOptional = 32;

        // MacroObject @ api_flags.h:159:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsQueryHasMonitor = 32;

        // MacroObject @ api_flags.h:148:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsTableHasRemoveActions = 328200;

        // MacroObject @ api_flags.h:113:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsFilterIsFilter = 128;

        // MacroObject @ log.h:490:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_MISSING_SYMBOL = 29;

        // MacroObject @ flecs.h:1176:9
        //	aarch64-apple-darwin
        //	x86_64-pc-windows-msvc
        //	x86_64-apple-darwin
        //	x86_64-unknown-linux-gnu
        //	aarch64-pc-windows-msvc
        public const int EcsFirstUserComponentId = 32;

        // MacroObject @ api_defines.h:156:9
        //	aarch64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_defines.h)
        //	x86_64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_defines.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_defines.h)
        public const int ecs_table_t_magic = 1701016436;

        // MacroObject @ api_flags.h:126:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsTableHasPairs = 32;

        // MacroObject @ log.h:487:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_INCONSISTENT_COMPONENT_ID = 26;

        // MacroObject @ api_flags.h:111:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsFilterMatchEmptyTables = 32;

        // MacroObject @ api_flags.h:156:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsQueryIsSubquery = 4;

        // MacroObject @ api_types.h:201:9
        //	aarch64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_types.h)
        //	x86_64-apple-darwin (flecs/private/api_types.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_types.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_types.h)
        public const uint flecs_iter_cache_match_indices = 32;

        // MacroObject @ api_flags.h:65:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsIdDontInherit = 128;

        // MacroObject @ log.h:489:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_MODULE_UNDEFINED = 28;

        // MacroObject @ api_flags.h:123:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsTableIsPrefab = 4;

        // MacroObject @ log.h:469:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_CONSTRAINT_VIOLATED = 3;

        // MacroObject @ api_flags.h:131:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsTableHasCopy = 1024;

        // MacroObject @ api_defines.h:176:9
        //	aarch64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_defines.h)
        //	x86_64-apple-darwin (flecs/private/api_defines.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_defines.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_defines.h)
        public const ulong ECS_COMPONENT_MASK = 72057594037927935;

        // MacroObject @ api_flags.h:133:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsTableHasUnion = 4096;

        // MacroObject @ log.h:474:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public const int ECS_ALREADY_DEFINED = 8;

        // MacroObject @ api_flags.h:140:9
        //	aarch64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-pc-windows-msvc (flecs\private\api_flags.h)
        //	x86_64-apple-darwin (flecs/private/api_flags.h)
        //	x86_64-unknown-linux-gnu (flecs/private/api_flags.h)
        //	aarch64-pc-windows-msvc (flecs\private\api_flags.h)
        public const uint EcsTableHasUnSet = 262144;

        // MacroObject @ log.h:508:9
        //	aarch64-apple-darwin (flecs/addons/log.h)
        //	x86_64-pc-windows-msvc (flecs\addons\log.h)
        //	x86_64-apple-darwin (flecs/addons/log.h)
        //	x86_64-unknown-linux-gnu (flecs/addons/log.h)
        //	aarch64-pc-windows-msvc (flecs\addons\log.h)
        public static string ECS_BLACK = "[1;30m";

        #endregion

        #region Setup & Teardown

        public static void Setup()
        {
            PreCompile();
        }

        private static void PreCompile()
        {
            var methods = typeof(flecs).GetMethods(
                System.Reflection.BindingFlags.DeclaredOnly |
                System.Reflection.BindingFlags.NonPublic |
                System.Reflection.BindingFlags.Public |
                System.Reflection.BindingFlags.Instance |
                System.Reflection.BindingFlags.Static);

            foreach (var method in methods)
            {
                if (method.GetMethodBody() == null)
                {
                    RuntimeHelpers.PrepareMethod(method.MethodHandle);
                }
            }
        }

        public static void Teardown()
        {
        }

        #endregion

        #region Runtime

        public static class Runtime
        {

            /// <summary>
            ///     A boolean value type with the same memory layout as a <see cref="byte" /> in both managed and unmanaged contexts;
            ///     equivalent to a standard bool found in C/C++/ObjC where <c>0</c> is <c>false</c> and any other value is
            ///     <c>true</c>.
            /// </summary>
            [StructLayout(LayoutKind.Sequential)]
            public readonly struct CBool : IEquatable<CBool>
            {
                private readonly byte _value;

                private CBool(bool value)
                {
                    _value = Convert.ToByte(value);
                }

                /// <summary>
                ///     Converts the specified <see cref="bool" /> to a <see cref="CBool" />.
                /// </summary>
                /// <param name="value">The value.</param>
                /// <returns>A <see cref="CBool" />.</returns>
                public static implicit operator CBool(bool value)
                {
                    return FromBoolean(value);
                }

                /// <summary>
                ///     Converts the specified <see cref="bool" /> to a <see cref="CBool" />.
                /// </summary>
                /// <param name="value">The value.</param>
                /// <returns>A <see cref="CBool" />.</returns>
                public static CBool FromBoolean(bool value)
                {
                    return new CBool(value);
                }

                /// <summary>
                ///     Converts the specified <see cref="CBool" /> to a <see cref="bool" />.
                /// </summary>
                /// <param name="value">The value.</param>
                /// <returns>A <see cref="bool" />.</returns>
                public static implicit operator bool(CBool value)
                {
                    return ToBoolean(value);
                }

                /// <summary>
                ///     Converts the specified <see cref="CBool" /> to a <see cref="bool" />.
                /// </summary>
                /// <param name="value">The value.</param>
                /// <returns>A <see cref="bool" />.</returns>
                public static bool ToBoolean(CBool value)
                {
                    return Convert.ToBoolean(value._value);
                }

                /// <inheritdoc />
                public override string ToString()
                {
                    return ToBoolean(this).ToString();
                }

                /// <inheritdoc />
                public override bool Equals(object? obj)
                {
                    return obj is CBool b && Equals(b);
                }

                /// <inheritdoc />
                public bool Equals(CBool other)
                {
                    return _value == other._value;
                }

                /// <inheritdoc />
                public override int GetHashCode()
                {
                    return _value.GetHashCode();
                }

                /// <summary>
                ///     Returns a value that indicates whether two specified <see cref="CBool" /> structures are equal.
                /// </summary>
                /// <param name="left">The first <see cref="CBool" /> to compare.</param>
                /// <param name="right">The second <see cref="CBool" /> to compare.</param>
                /// <returns><c>true</c> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <c>false</c>.</returns>
                public static bool operator ==(CBool left, CBool right)
                {
                    return left._value == right._value;
                }

                /// <summary>
                ///     Returns a value that indicates whether two specified <see cref="CBool" /> structures are not equal.
                /// </summary>
                /// <param name="left">The first <see cref="CBool" /> to compare.</param>
                /// <param name="right">The second <see cref="CBool" /> to compare.</param>
                /// <returns><c>true</c> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <c>false</c>.</returns>
                public static bool operator !=(CBool left, CBool right)
                {
                    return !(left == right);
                }

                /// <summary>
                ///     Returns a value that indicates whether two specified <see cref="CBool" /> structures are equal.
                /// </summary>
                /// <param name="left">The first <see cref="CBool" /> to compare.</param>
                /// <param name="right">The second <see cref="CBool" /> to compare.</param>
                /// <returns><c>true</c> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <c>false</c>.</returns>
                public static bool Equals(CBool left, CBool right)
                {
                    return left._value == right._value;
                }
            }

            /// <summary>
            ///     A value type with the same memory layout as a <see cref="byte" /> in a managed context and <c>char</c> in
            ///     an unmanaged context.
            /// </summary>
            [StructLayout(LayoutKind.Sequential)]
            public readonly struct CChar : IEquatable<byte>, IEquatable<CChar>
            {
                private readonly byte _value;

                private CChar(byte value)
                {
                    _value = Convert.ToByte(value);
                }

                /// <summary>
                ///     Converts the specified <see cref="byte" /> to a <see cref="CChar" />.
                /// </summary>
                /// <param name="value">The value.</param>
                /// <returns>A <see cref="CChar" />.</returns>
                public static implicit operator CChar(byte value)
                {
                    return FromByte(value);
                }

                /// <summary>
                ///     Converts the specified <see cref="byte" /> to a <see cref="CChar" />.
                /// </summary>
                /// <param name="value">The value.</param>
                /// <returns>A <see cref="CChar" />.</returns>
                public static CChar FromByte(byte value)
                {
                    return new CChar(value);
                }

                /// <summary>
                ///     Converts the specified <see cref="CChar" /> to a <see cref="byte" />.
                /// </summary>
                /// <param name="value">The value.</param>
                /// <returns>A <see cref="byte" />.</returns>
                public static implicit operator byte(CChar value)
                {
                    return ToByte(value);
                }

                /// <summary>
                ///     Converts the specified <see cref="CChar" /> to a <see cref="byte" />.
                /// </summary>
                /// <param name="value">The value.</param>
                /// <returns>A <see cref="byte" />.</returns>
                public static byte ToByte(CChar value)
                {
                    return value._value;
                }

                /// <inheritdoc />
                public override string ToString()
                {
                    return _value.ToString(CultureInfo.InvariantCulture);
                }

                /// <inheritdoc />
                public override bool Equals(object? obj)
                {
                    return obj is CChar value && Equals(value);
                }

                /// <inheritdoc />
                public bool Equals(byte other)
                {
                    return _value == other;
                }

                /// <inheritdoc />
                public bool Equals(CChar other)
                {
                    return _value == other._value;
                }

                /// <inheritdoc />
                public override int GetHashCode()
                {
                    return _value.GetHashCode();
                }

                /// <summary>
                ///     Returns a value that indicates whether two specified <see cref="CChar" /> structures are equal.
                /// </summary>
                /// <param name="left">The first <see cref="CChar" /> to compare.</param>
                /// <param name="right">The second <see cref="CChar" /> to compare.</param>
                /// <returns><c>true</c> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <c>false</c>.</returns>
                public static bool operator ==(CChar left, CChar right)
                {
                    return left._value == right._value;
                }

                /// <summary>
                ///     Returns a value that indicates whether two specified <see cref="CChar" /> structures are not equal.
                /// </summary>
                /// <param name="left">The first <see cref="CChar" /> to compare.</param>
                /// <param name="right">The second <see cref="CChar" /> to compare.</param>
                /// <returns><c>true</c> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <c>false</c>.</returns>
                public static bool operator !=(CChar left, CChar right)
                {
                    return !(left == right);
                }

                /// <summary>
                ///     Returns a value that indicates whether two specified <see cref="CChar" /> structures are equal.
                /// </summary>
                /// <param name="left">The first <see cref="CChar" /> to compare.</param>
                /// <param name="right">The second <see cref="CChar" /> to compare.</param>
                /// <returns><c>true</c> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <c>false</c>.</returns>
                public static bool Equals(CChar left, CChar right)
                {
                    return left._value == right._value;
                }
            }

#pragma warning disable CS1591

            /// <summary>
            ///     Utility methods for dealing with native C libraries.
            /// </summary>
            public static class CLibrary
            {
                /// <summary>
                ///     Loads a C shared library (`.dll`/`.dylib`/`.so`) into the application's memory space given the C
                ///     library's file name, partially qualified file path, or a fully qualified file path.
                /// </summary>
                /// <param name="name">The C library's file name, partially qualified file path, or a fully qualified file path.</param>
                /// <returns>A <see cref="IntPtr" /> handle if the C library was loaded; otherwise, a <see cref="IntPtr.Zero" /> handle.</returns>
                /// <remarks>
                ///     <para>
                ///         If the library was already loaded, calling <see cref="Load" /> returns the handle of the previous loaded
                ///         library and the reference count for the handle is incremented.
                ///     </para>
                ///     <para>You must call <see cref="Free" /> when finished using a handle of a dynamically loaded library.</para>
                /// </remarks>
                public static IntPtr Load(string name)
                {
                    if (IsLinux)
                    {
                        return libdl.dlopen(name, 0x101); // RTLD_GLOBAL | RTLD_LAZY
                    }

                    if (IsWindows)
                    {
                        return Kernel32.LoadLibrary(name);
                    }

                    if (IsDarwin)
                    {
                        return libSystem.dlopen(name, 0x101); // RTLD_GLOBAL | RTLD_LAZY
                    }

                    return IntPtr.Zero;
                }

                /// <summary>
                ///     Unloads a C shared library from the application's memory space given the library's handle.
                /// </summary>
                /// <param name="handle">The library's handle previously created by calling <see cref="Load" />.</param>
                /// <remarks>
                ///     <para>
                ///         If the library was loaded multiple times, the reference count for the handle is decremented upon calling
                ///         <see cref="Free" /> and the library is not yet unloaded from memory.
                ///     </para>
                /// </remarks>
                public static void Free(IntPtr handle)
                {
                    if (IsLinux)
                    {
                        libdl.dlclose(handle);
                    }

                    if (IsWindows)
                    {
                        Kernel32.FreeLibrary(handle);
                    }

                    if (IsDarwin)
                    {
                        libSystem.dlclose(handle);
                    }
                }

                public static IntPtr GetExport(IntPtr handle, string symbolName)
                {
                    if (IsLinux)
                    {
                        return libdl.dlsym(handle, symbolName);
                    }

                    if (IsWindows)
                    {
                        return Kernel32.GetProcAddress(handle, symbolName);
                    }

                    if (IsDarwin)
                    {
                        return libSystem.dlsym(handle, symbolName);
                    }

                    return IntPtr.Zero;
                }

                private static bool IsWindows
                {
                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    get =>
#if NET5_0_OR_GREATER
            OperatingSystem.IsWindows();
#elif NETFRAMEWORK || NETSTANDARD || NETCOREAPP
            RuntimeInformation.IsOSPlatform(OSPlatform.Windows);
#else
            false;
#endif
                }

                private static bool IsDarwin
                {
                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    get =>
#if NET5_0_OR_GREATER
            OperatingSystem.IsMacOS() || 
            OperatingSystem.IsMacCatalyst() ||
            OperatingSystem.IsIOS() || 
            OperatingSystem.IsTvOS() ||
            OperatingSystem.IsWatchOS();
#elif NETFRAMEWORK || NETSTANDARD || NETCOREAPP
            RuntimeInformation.IsOSPlatform(OSPlatform.OSX);
#else
            false;
#endif
                }

                private static bool IsLinux
                {
                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    get =>
#if NET5_0_OR_GREATER
            OperatingSystem.IsLinux() ||
            OperatingSystem.IsFreeBSD() ||
            OperatingSystem.IsAndroid();
#elif NETFRAMEWORK || NETSTANDARD || NETCOREAPP
            RuntimeInformation.IsOSPlatform(OSPlatform.Linux);
#else
            false;
#endif
                }

                [System.Security.SuppressUnmanagedCodeSecurity]
                private static class libdl
                {
                    private const string LibraryName = "libdl";

                    [DllImport(LibraryName, CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Ansi)]
                    public static extern IntPtr dlopen(string fileName, int flags);

                    [DllImport(LibraryName, CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Ansi)]
                    public static extern IntPtr dlsym(IntPtr handle, string name);

                    [DllImport(LibraryName, CallingConvention = CallingConvention.StdCall)]
                    public static extern int dlclose(IntPtr handle);
                }

                [System.Security.SuppressUnmanagedCodeSecurity]
                private static class libSystem
                {
                    private const string LibraryName = "libSystem";

                    [DllImport(LibraryName, CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Ansi)]
                    public static extern IntPtr dlopen(string fileName, int flags);

                    [DllImport(LibraryName, CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Ansi)]
                    public static extern IntPtr dlsym(IntPtr handle, string name);

                    [DllImport(LibraryName, CallingConvention = CallingConvention.StdCall)]
                    public static extern int dlclose(IntPtr handle);
                }

                [System.Security.SuppressUnmanagedCodeSecurity]
                private static class Kernel32
                {
                    private const string LibraryName = "kernel32";

                    [DllImport(LibraryName, CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Ansi,
                        ExactSpelling = true, SetLastError = true)]
                    public static extern IntPtr LoadLibrary(string fileName);

                    [DllImport(LibraryName, CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Ansi,
                        ExactSpelling = true, SetLastError = true)]
                    public static extern IntPtr GetProcAddress(IntPtr module, string procName);

                    [DllImport(LibraryName, CallingConvention = CallingConvention.StdCall, SetLastError = true)]
                    public static extern int FreeLibrary(IntPtr module);
                }
            }

            /// <summary>
            ///     A pointer value type of bytes that represent a string; the C type `char*`.
            /// </summary>
            [StructLayout(LayoutKind.Sequential)]
            public readonly unsafe struct CString : IEquatable<CString>
            {
                internal readonly nint _pointer;

                /// <summary>
                ///     Gets a value indicating whether this <see cref="CString" /> is a null pointer.
                /// </summary>
                public bool IsNull => _pointer == 0;

                /// <summary>
                ///     Initializes a new instance of the <see cref="CString" /> struct.
                /// </summary>
                /// <param name="value">The pointer value.</param>
                public CString(byte* value)
                {
                    _pointer = (nint)value;
                }

                /// <summary>
                ///     Initializes a new instance of the <see cref="CString" /> struct.
                /// </summary>
                /// <param name="value">The pointer value.</param>
                public CString(nint value)
                {
                    _pointer = value;
                }

                /// <summary>
                ///     Initializes a new instance of the <see cref="CString" /> struct.
                /// </summary>
                /// <param name="s">The string value.</param>
                public CString(string s)
                {
                    _pointer = CStrings.CString(s);
                }

                /// <summary>
                ///     Performs an explicit conversion from a <see cref="IntPtr" /> to a <see cref="CString" />.
                /// </summary>
                /// <param name="value">The pointer value.</param>
                /// <returns>
                ///     The resulting <see cref="CString" />.
                /// </returns>
                public static explicit operator CString(nint value)
                {
                    return FromIntPtr(value);
                }

                /// <summary>
                ///     Performs an explicit conversion from a <see cref="IntPtr" /> to a <see cref="CString" />.
                /// </summary>
                /// <param name="value">The pointer value.</param>
                /// <returns>
                ///     The resulting <see cref="CString" />.
                /// </returns>
                public static CString FromIntPtr(nint value)
                {
                    return new CString(value);
                }

                /// <summary>
                ///     Performs an implicit conversion from a byte pointer to a <see cref="CString" />.
                /// </summary>
                /// <param name="value">The pointer value.</param>
                /// <returns>
                ///     The resulting <see cref="CString" />.
                /// </returns>
                public static implicit operator CString(byte* value)
                {
                    return From(value);
                }

                /// <summary>
                ///     Performs an implicit conversion from a byte pointer to a <see cref="CString" />.
                /// </summary>
                /// <param name="value">The pointer value.</param>
                /// <returns>
                ///     The resulting <see cref="CString" />.
                /// </returns>
                public static CString From(byte* value)
                {
                    return new CString((nint)value);
                }

                /// <summary>
                ///     Performs an implicit conversion from a <see cref="CString" /> to a <see cref="IntPtr" />.
                /// </summary>
                /// <param name="value">The pointer.</param>
                /// <returns>
                ///     The resulting <see cref="IntPtr" />.
                /// </returns>
                public static implicit operator nint(CString value)
                {
                    return value._pointer;
                }

                /// <summary>
                ///     Performs an implicit conversion from a <see cref="CString" /> to a <see cref="IntPtr" />.
                /// </summary>
                /// <param name="value">The pointer.</param>
                /// <returns>
                ///     The resulting <see cref="IntPtr" />.
                /// </returns>
                public static nint ToIntPtr(CString value)
                {
                    return value._pointer;
                }

                /// <summary>
                ///     Performs an implicit conversion from a <see cref="CString" /> to a <see cref="string" />.
                /// </summary>
                /// <param name="value">The <see cref="CString" />.</param>
                /// <returns>
                ///     The resulting <see cref="string" />.
                /// </returns>
                public static implicit operator string(CString value)
                {
                    return ToString(value);
                }

                /// <summary>
                ///     Performs an implicit conversion from a <see cref="CString" /> to a <see cref="string" />.
                /// </summary>
                /// <param name="value">The <see cref="CString" />.</param>
                /// <returns>
                ///     The resulting <see cref="string" />.
                /// </returns>
                public static string ToString(CString value)
                {
                    return CStrings.String(value);
                }

                /// <summary>
                ///     Performs an implicit conversion from a <see cref="string" /> to a <see cref="CString" />.
                /// </summary>
                /// <param name="s">The <see cref="string" />.</param>
                /// <returns>
                ///     The resulting <see cref="CString" />.
                /// </returns>
                public static implicit operator CString(string s)
                {
                    return FromString(s);
                }

                /// <summary>
                ///     Performs an implicit conversion from a <see cref="string" /> to a <see cref="CString" />.
                /// </summary>
                /// <param name="s">The <see cref="string" />.</param>
                /// <returns>
                ///     The resulting <see cref="CString" />.
                /// </returns>
                public static CString FromString(string s)
                {
                    return CStrings.CString(s);
                }

                /// <inheritdoc />
                public override string ToString()
                {
                    return CStrings.String(this);
                }

                /// <inheritdoc />
                public override bool Equals(object? obj)
                {
                    return obj is CString value && Equals(value);
                }

                /// <inheritdoc />
                public bool Equals(CString other)
                {
                    return _pointer == other._pointer;
                }

                /// <inheritdoc />
                public override int GetHashCode()
                {
                    return _pointer.GetHashCode();
                }

                /// <summary>
                ///     Returns a value that indicates whether two specified <see cref="CString" /> structures are equal.
                /// </summary>
                /// <param name="left">The first <see cref="CString" /> to compare.</param>
                /// <param name="right">The second <see cref="CString" /> to compare.</param>
                /// <returns><c>true</c> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <c>false</c>.</returns>
                public static bool operator ==(CString left, CString right)
                {
                    return left._pointer == right._pointer;
                }

                /// <summary>
                ///     Returns a value that indicates whether two specified <see cref="CBool" /> structures are not equal.
                /// </summary>
                /// <param name="left">The first <see cref="CString" /> to compare.</param>
                /// <param name="right">The second <see cref="CString" /> to compare.</param>
                /// <returns><c>true</c> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <c>false</c>.</returns>
                public static bool operator !=(CString left, CString right)
                {
                    return !(left == right);
                }

                /// <summary>
                ///     Returns a value that indicates whether two specified <see cref="CString" /> structures are equal.
                /// </summary>
                /// <param name="left">The first <see cref="CString" /> to compare.</param>
                /// <param name="right">The second <see cref="CString" /> to compare.</param>
                /// <returns><c>true</c> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <c>false</c>.</returns>
                public static bool Equals(CString left, CString right)
                {
                    return left._pointer == right._pointer;
                }
            }

            /// <summary>
            ///     Utility methods for interoperability with C style strings in C#.
            /// </summary>
            public static unsafe class CStrings
            {
                private static readonly Dictionary<uint, CString> StringHashesToPointers = new();
                private static readonly Dictionary<nint, string> PointersToStrings = new();
                private static readonly Dictionary<uint, CStringWide> StringHashesToPointersWide = new();
                private static readonly Dictionary<nint, string> PointersToStringsWide = new();

                /// <summary>
                ///     Converts a C style string (ANSI or UTF-8) of type `char` (one dimensional byte array
                ///     terminated by a <c>0x0</c>) to a UTF-16 <see cref="string" /> by allocating and copying if not already cached.
                /// </summary>
                /// <param name="value">A pointer to the C string.</param>
                /// <returns>A <see cref="string" /> equivalent of <paramref name="value" />.</returns>
                public static string String(CString value)
                {
                    if (value.IsNull)
                    {
                        return string.Empty;
                    }

                    if (PointersToStrings.TryGetValue(value._pointer, out var result))
                    {
                        return result;
                    }

                    var hash = Djb2((byte*)value._pointer);
                    if (StringHashesToPointers.TryGetValue(hash, out var pointer2))
                    {
                        result = PointersToStrings[pointer2._pointer];
                        return result;
                    }

                    // calls ASM/C/C++ functions to calculate length and then "FastAllocate" the string with the GC
                    // https://mattwarren.org/2016/05/31/Strings-and-the-CLR-a-Special-Relationship/
                    result = Marshal.PtrToStringAnsi(value._pointer);

                    if (string.IsNullOrEmpty(result))
                    {
                        return string.Empty;
                    }

                    StringHashesToPointers.Add(hash, value);
                    PointersToStrings.Add(value._pointer, result);

                    return result;
                }

                /// <summary>
                ///     Converts a C style string (unicode) of type `wchar_t` (one dimensional ushort array
                ///     terminated by a <c>0x0</c>) to a UTF-16 <see cref="string" /> by allocating and copying if not already cached.
                /// </summary>
                /// <param name="value">A pointer to the C string.</param>
                /// <returns>A <see cref="string" /> equivalent of <paramref name="value" />.</returns>
                public static string StringWide(CStringWide value)
                {
                    if (value.IsNull)
                    {
                        return string.Empty;
                    }

                    if (PointersToStringsWide.TryGetValue(value._pointer, out var result))
                    {
                        return result;
                    }

                    var hash = Djb2((byte*)value._pointer);
                    if (StringHashesToPointersWide.TryGetValue(hash, out var pointer2))
                    {
                        result = PointersToStringsWide[pointer2._pointer];
                        return result;
                    }

                    // calls ASM/C/C++ functions to calculate length and then "FastAllocate" the string with the GC
                    // https://mattwarren.org/2016/05/31/Strings-and-the-CLR-a-Special-Relationship/
                    result = Marshal.PtrToStringUni(pointer2._pointer);

                    if (string.IsNullOrEmpty(result))
                    {
                        return string.Empty;
                    }

                    StringHashesToPointersWide.Add(hash, value);
                    PointersToStringsWide.Add(value._pointer, result);

                    return result;
                }

                /// <summary>
                ///     Converts a UTF-16 <see cref="string" /> to a C style string (one dimensional byte array terminated by a
                ///     <c>0x0</c>) by allocating and copying if not already cached.
                /// </summary>
                /// <param name="str">The <see cref="string" />.</param>
                /// <returns>A C string pointer.</returns>
                public static CString CString(string str)
                {
                    var hash = Djb2(str);
                    if (StringHashesToPointers.TryGetValue(hash, out var r))
                    {
                        return r;
                    }

                    // ReSharper disable once JoinDeclarationAndInitializer
                    var pointer = Marshal.StringToHGlobalAnsi(str);
                    StringHashesToPointers.Add(hash, new CString(pointer));
                    PointersToStrings.Add(pointer, str);

                    return new CString(pointer);
                }

                /// <summary>
                ///     Converts a C string pointer (one dimensional byte array terminated by a
                ///     <c>0x0</c>) for a specified <see cref="string" /> by allocating and copying if not already cached.
                /// </summary>
                /// <param name="str">The <see cref="string" />.</param>
                /// <returns>A C string pointer.</returns>
                public static CStringWide CStringWide(string str)
                {
                    var hash = Djb2(str);
                    if (StringHashesToPointersWide.TryGetValue(hash, out var r))
                    {
                        return r;
                    }

                    // ReSharper disable once JoinDeclarationAndInitializer
                    var pointer = Marshal.StringToHGlobalUni(str);
                    StringHashesToPointersWide.Add(hash, new CStringWide(pointer));
                    PointersToStringsWide.Add(pointer, str);

                    return new CStringWide(pointer);
                }

                /// <summary>
                ///     Converts an array of strings to an array of C strings of type `char` (multi-dimensional array of one
                ///     dimensional byte arrays each terminated by a <c>0x0</c>) by allocating and copying if not already cached.
                /// </summary>
                /// <remarks>
                ///     <para>Calls <see cref="CString" />.</para>
                /// </remarks>
                /// <param name="values">The strings.</param>
                /// <returns>An array pointer of C string pointers. You are responsible for freeing the returned pointer.</returns>
                public static CString* CStringArray(ReadOnlySpan<string> values)
                {
                    var pointerSize = IntPtr.Size;
                    var result = (CString*)Marshal.AllocHGlobal(pointerSize * values.Length);
                    for (var i = 0; i < values.Length; ++i)
                    {
                        var @string = values[i];
                        var cString = CString(@string);
                        result[i] = cString;
                    }

                    return result;
                }

                /// <summary>
                ///     Converts an array of strings to an array of C strings of type `wchar_t` (multi-dimensional array of one
                ///     dimensional ushort arrays each terminated by a <c>0x0</c>) by allocating and copying if not already cached.
                /// </summary>
                /// <remarks>
                ///     <para>Calls <see cref="CString" />.</para>
                /// </remarks>
                /// <param name="values">The strings.</param>
                /// <returns>An array pointer of C string pointers. You are responsible for freeing the returned pointer.</returns>
                public static CStringWide* CStringWideArray(ReadOnlySpan<string> values)
                {
                    var pointerSize = IntPtr.Size;
                    var result = (CStringWide*)Marshal.AllocHGlobal(pointerSize * values.Length);
                    for (var i = 0; i < values.Length; ++i)
                    {
                        var @string = values[i];
                        var cString = CStringWide(@string);
                        result[i] = cString;
                    }

                    return result;
                }

                /// <summary>
                ///     Frees the memory for all previously allocated C strings and releases references to all <see cref="string" />
                ///     objects which happened during <see cref="String" />, <see cref="StringWide" />, <see cref="CString" />
                ///     or <see cref="CStringWide" />. Does <b>not</b> garbage collect.
                /// </summary>
                public static void FreeAllStrings()
                {
                    foreach (var (ptr, _) in PointersToStrings)
                    {
                        Marshal.FreeHGlobal(ptr);
                    }

                    // We can not guarantee that the application has not a strong reference the string since it was allocated,
                    //  so we have to let the GC take the wheel here. Thus, this method should NOT garbage collect; that's
                    //  on the responsibility of the application developer. The best we can do is just remove any and all strong
                    //  references we have here to the strings.

                    StringHashesToPointers.Clear();
                    PointersToStrings.Clear();
                }

                /// <summary>
                ///     Frees the memory for specific previously allocated C strings and releases associated references to
                ///     <see cref="string" /> objects which happened during <see cref="String" /> or
                ///     <see cref="CString" />. Does <b>not</b> garbage collect.
                /// </summary>
                /// <param name="pointers">The C string pointers.</param>
                /// <param name="count">The number of C string pointers.</param>
                public static void FreeCStrings(CString* pointers, int count)
                {
                    for (var i = 0; i < count; i++)
                    {
                        var ptr = pointers[i];
                        FreeCString(ptr);
                    }

                    Marshal.FreeHGlobal((IntPtr)pointers);
                }

                /// <summary>
                ///     Frees the memory for the previously allocated C string and releases reference to the
                ///     <see cref="string" /> object which happened during <see cref="String" /> or <see cref="CString" />.
                ///     Does <b>not</b> garbage collect.
                /// </summary>
                /// <param name="value">The string.</param>
                public static void FreeCString(CString value)
                {
                    if (!PointersToStrings.ContainsKey(value._pointer))
                    {
                        return;
                    }

                    Marshal.FreeHGlobal(value);
                    var hash = Djb2(value);
                    StringHashesToPointers.Remove(hash);
                    PointersToStrings.Remove(value._pointer);
                }

                /// <summary>
                ///     Frees the memory for the previously allocated C string and releases reference to the
                ///     <see cref="string" /> object which happened during <see cref="StringWide" /> or <see cref="CStringWide" />.
                ///     Does <b>not</b> garbage collect.
                /// </summary>
                /// <param name="value">The string.</param>
                public static void FreeCStringWide(CStringWide value)
                {
                    if (!PointersToStringsWide.ContainsKey(value._pointer))
                    {
                        return;
                    }

                    Marshal.FreeHGlobal(value);
                    var hash = Djb2(value);
                    StringHashesToPointersWide.Remove(hash);
                    PointersToStringsWide.Remove(value._pointer);
                }

                // djb2 is named after https://en.wikipedia.org/wiki/Daniel_J._Bernstein
                //  References:
                //  (1) https://stackoverflow.com/a/7666577/2171957
                //  (2) http://www.cse.yorku.ca/~oz/hash.html
                //  (3) https://groups.google.com/g/comp.lang.c/c/lSKWXiuNOAk/m/zstZ3SRhCjgJ
                private static uint Djb2(byte* str)
                {
                    uint hash = 5381;

                    unchecked
                    {
                        uint c;
                        while ((c = *str++) != 0)
                        {
                            hash = (hash << 5) + hash + c; // hash * 33 + c
                        }
                    }

                    return hash;
                }

                private static uint Djb2(string str)
                {
                    uint hash = 5381;

                    // ReSharper disable once ForeachCanBeConvertedToQueryUsingAnotherGetEnumerator
                    foreach (var c in str)
                    {
                        hash = (hash << 5) + hash + c; // hash * 33 + c
                    }

                    return hash;
                }
            }

            /// <summary>
            ///     A pointer value type that represents a wide string; C type `wchar_t*`.
            /// </summary>
            [StructLayout(LayoutKind.Sequential)]
            public readonly unsafe struct CStringWide : IEquatable<CStringWide>
            {
                internal readonly nint _pointer;

                /// <summary>
                ///     Gets a value indicating whether this <see cref="CStringWide" /> is a null pointer.
                /// </summary>
                public bool IsNull => _pointer == 0;

                /// <summary>
                ///     Initializes a new instance of the <see cref="CStringWide" /> struct.
                /// </summary>
                /// <param name="value">The pointer value.</param>
                public CStringWide(byte* value)
                {
                    _pointer = (nint)value;
                }

                /// <summary>
                ///     Initializes a new instance of the <see cref="CStringWide" /> struct.
                /// </summary>
                /// <param name="value">The pointer value.</param>
                public CStringWide(nint value)
                {
                    _pointer = value;
                }

                /// <summary>
                ///     Initializes a new instance of the <see cref="CStringWide" /> struct.
                /// </summary>
                /// <param name="s">The string value.</param>
                public CStringWide(string s)
                {
                    _pointer = CStrings.CStringWide(s);
                }

                /// <summary>
                ///     Performs an explicit conversion from a <see cref="IntPtr" /> to a <see cref="CStringWide" />.
                /// </summary>
                /// <param name="value">The pointer value.</param>
                /// <returns>
                ///     The resulting <see cref="CStringWide" />.
                /// </returns>
                public static explicit operator CStringWide(nint value)
                {
                    return FromIntPtr(value);
                }

                /// <summary>
                ///     Performs an explicit conversion from a <see cref="IntPtr" /> to a <see cref="CStringWide" />.
                /// </summary>
                /// <param name="value">The pointer value.</param>
                /// <returns>
                ///     The resulting <see cref="CStringWide" />.
                /// </returns>
                public static CStringWide FromIntPtr(nint value)
                {
                    return new CStringWide(value);
                }

                /// <summary>
                ///     Performs an implicit conversion from a byte pointer to a <see cref="CStringWide" />.
                /// </summary>
                /// <param name="value">The pointer value.</param>
                /// <returns>
                ///     The resulting <see cref="CStringWide" />.
                /// </returns>
                public static implicit operator CStringWide(byte* value)
                {
                    return From(value);
                }

                /// <summary>
                ///     Performs an implicit conversion from a byte pointer to a <see cref="CStringWide" />.
                /// </summary>
                /// <param name="value">The pointer value.</param>
                /// <returns>
                ///     The resulting <see cref="CStringWide" />.
                /// </returns>
                public static CStringWide From(byte* value)
                {
                    return new CStringWide((nint)value);
                }

                /// <summary>
                ///     Performs an implicit conversion from a <see cref="CStringWide" /> to a <see cref="IntPtr" />.
                /// </summary>
                /// <param name="value">The pointer.</param>
                /// <returns>
                ///     The resulting <see cref="IntPtr" />.
                /// </returns>
                public static implicit operator nint(CStringWide value)
                {
                    return value._pointer;
                }

                /// <summary>
                ///     Performs an implicit conversion from a <see cref="CStringWide" /> to a <see cref="IntPtr" />.
                /// </summary>
                /// <param name="value">The pointer.</param>
                /// <returns>
                ///     The resulting <see cref="IntPtr" />.
                /// </returns>
                public static nint ToIntPtr(CStringWide value)
                {
                    return value._pointer;
                }

                /// <summary>
                ///     Performs an implicit conversion from a <see cref="CStringWide" /> to a <see cref="string" />.
                /// </summary>
                /// <param name="value">The <see cref="CStringWide" />.</param>
                /// <returns>
                ///     The resulting <see cref="string" />.
                /// </returns>
                public static implicit operator string(CStringWide value)
                {
                    return ToString(value);
                }

                /// <summary>
                ///     Performs an implicit conversion from a <see cref="CStringWide" /> to a <see cref="string" />.
                /// </summary>
                /// <param name="value">The <see cref="CStringWide" />.</param>
                /// <returns>
                ///     The resulting <see cref="string" />.
                /// </returns>
                public static string ToString(CStringWide value)
                {
                    return CStrings.StringWide(value);
                }

                /// <summary>
                ///     Performs an implicit conversion from a <see cref="string" /> to a <see cref="CStringWide" />.
                /// </summary>
                /// <param name="s">The <see cref="string" />.</param>
                /// <returns>
                ///     The resulting <see cref="CStringWide" />.
                /// </returns>
                public static implicit operator CStringWide(string s)
                {
                    return FromString(s);
                }

                /// <summary>
                ///     Performs an implicit conversion from a <see cref="string" /> to a <see cref="CStringWide" />.
                /// </summary>
                /// <param name="s">The <see cref="string" />.</param>
                /// <returns>
                ///     The resulting <see cref="CStringWide" />.
                /// </returns>
                public static CStringWide FromString(string s)
                {
                    return CStrings.CStringWide(s);
                }

                /// <inheritdoc />
                public override string ToString()
                {
                    return CStrings.StringWide(this);
                }

                /// <inheritdoc />
                public override bool Equals(object? obj)
                {
                    return obj is CStringWide value && Equals(value);
                }

                /// <inheritdoc />
                public bool Equals(CStringWide other)
                {
                    return _pointer == other._pointer;
                }

                /// <inheritdoc />
                public override int GetHashCode()
                {
                    return _pointer.GetHashCode();
                }

                /// <summary>
                ///     Returns a value that indicates whether two specified <see cref="CStringWide" /> structures are equal.
                /// </summary>
                /// <param name="left">The first <see cref="CStringWide" /> to compare.</param>
                /// <param name="right">The second <see cref="CStringWide" /> to compare.</param>
                /// <returns><c>true</c> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <c>false</c>.</returns>
                public static bool operator ==(CStringWide left, CStringWide right)
                {
                    return left._pointer == right._pointer;
                }

                /// <summary>
                ///     Returns a value that indicates whether two specified <see cref="CBool" /> structures are not equal.
                /// </summary>
                /// <param name="left">The first <see cref="CStringWide" /> to compare.</param>
                /// <param name="right">The second <see cref="CStringWide" /> to compare.</param>
                /// <returns><c>true</c> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <c>false</c>.</returns>
                public static bool operator !=(CStringWide left, CStringWide right)
                {
                    return !(left == right);
                }

                /// <summary>
                ///     Returns a value that indicates whether two specified <see cref="CStringWide" /> structures are equal.
                /// </summary>
                /// <param name="left">The first <see cref="CStringWide" /> to compare.</param>
                /// <param name="right">The second <see cref="CStringWide" /> to compare.</param>
                /// <returns><c>true</c> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <c>false</c>.</returns>
                public static bool Equals(CStringWide left, CStringWide right)
                {
                    return left._pointer == right._pointer;
                }
            }
        }

        #endregion
    }
}